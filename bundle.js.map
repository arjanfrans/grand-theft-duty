{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 174db2ced50da5703444","webpack:///./src/client/index.js","webpack:///./~/three/three.js","webpack:///./src/client/Game.js","webpack:///./src/engine/Engine.js","webpack:///./src/engine/utils/debug/RenderDebug.js","webpack:///./src/engine/utils/debug/statsjs.js","webpack:///./src/engine/graphics/Renderer.js","webpack:///./src/engine/utils/mainloop.js","webpack:///./src/engine/AssetManager.js","webpack:///./~/howler/howler.min.js","webpack:///(webpack)/buildin/amd-options.js","webpack:///./~/path-browserify/index.js","webpack:///./~/process/browser.js","webpack:///./src/client/menu/MenuBuilder.js","webpack:///./src/engine/graphics/index.js","webpack:///./src/engine/graphics/Animation.js","webpack:///./src/engine/graphics/TextureFrame.js","webpack:///./src/engine/graphics/RenderView.js","webpack:///./src/engine/graphics/TextureAtlas.js","webpack:///./src/engine/graphics/TextureManager.js","webpack:///./src/engine/graphics/TextView.js","webpack:///./src/engine/graphics/View.js","webpack:///./~/three-bmfont-text/index.js","webpack:///./~/layout-bmfont-text/index.js","webpack:///./~/word-wrapper/index.js","webpack:///./~/xtend/immutable.js","webpack:///./~/indexof-property/index.js","webpack:///./~/as-number/index.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/quad-indices/index.js","webpack:///./~/dtype/index.js","webpack:///./~/an-array/index.js","webpack:///./~/is-buffer/index.js","webpack:///./~/three-buffer-vertex-data/index.js","webpack:///./~/flatten-vertex-data/index.js","webpack:///./~/object-assign/index.js","webpack:///./~/three-bmfont-text/lib/vertices.js","webpack:///./~/three-bmfont-text/lib/utils.js","webpack:///./src/engine/graphics/ViewContainer.js","webpack:///./src/engine/graphics/BackgroundView.js","webpack:///./src/engine/menu-system/MenuItem.js","webpack:///./src/client/menu/MenuInput.js","webpack:///./src/engine/input/Keyboard.js","webpack:///./src/engine/input/Gamepad.js","webpack:///./src/engine/input/utils/gamepad-micro.js","webpack:///./src/engine/input/HumanInput.js","webpack:///./src/client/menu/views/MenuItemsView.js","webpack:///./src/client/menu/views/LogoView.js","webpack:///./src/client/menu/views/MenuRenderView.js","webpack:///./src/client/menu/MenuAudio.js","webpack:///./src/client/StateAudio.js","webpack:///./src/engine/menu-system/Menu.js","webpack:///./src/client/menu/OptionsMenu.js","webpack:///./src/engine/menu-system/MenuInputItem.js","webpack:///./src/client/menu/HelpMenu.js","webpack:///./src/client/play/PlayBuilder.js","webpack:///./src/client/play/PlayState.js","webpack:///./src/client/State.js","webpack:///./src/client/play/ViewBuilder.js","webpack:///./src/client/play/ui/StatsRenderView.js","webpack:///./src/client/play/ui/AmmoView.js","webpack:///./src/client/play/ui/HealthView.js","webpack:///./src/client/play/ui/WeaponView.js","webpack:///./src/client/play/ui/ScoreView.js","webpack:///./src/client/play/views/BulletSystemView.js","webpack:///./src/engine/ObjectPool.js","webpack:///./src/client/play/views/BulletView.js","webpack:///./src/client/play/views/WorldMapView.js","webpack:///./src/client/play/views/world/WaterBlocksView.js","webpack:///./src/client/play/views/world/StaticBlocksView.js","webpack:///./src/client/play/views/lights/LightView.js","webpack:///./src/client/play/views/SoldierView.js","webpack:///./src/client/play/views/SoldierViewPool.js","webpack:///./src/client/play/views/PlayRenderView.js","webpack:///./src/core/Match.js","webpack:///./src/client/play/input/PlayerInput.js","webpack:///./src/client/play/input/UiInput.js","webpack:///./src/engine/input/index.js","webpack:///./src/client/play/input/ComputerInput.js","webpack:///./src/core/entities/Player.js","webpack:///./src/core/entities/Soldier.js","webpack:///./src/core/entities/Character.js","webpack:///./src/core/entities/Entity.js","webpack:///./src/engine/collision/Polygon.js","webpack:///./src/engine/collision/Vector.js","webpack:///./src/core/weapons/WeaponFactory.js","webpack:///./src/core/weapons/Gun.js","webpack:///./src/client/play/PlayAudio.js","webpack:///./src/core/maps/MapParser.js","webpack:///./src/core/maps/Block.js","webpack:///./src/core/maps/Light.js","webpack:///./src/core/maps/WorldMap.js","webpack:///./src/core/CollisionSystem.js","webpack:///./src/core/CollisionUtils.js","webpack:///./src/engine/collision/SAT.js","webpack:///./src/engine/collision/Box.js","webpack:///./src/engine/collision/Response.js","webpack:///./src/core/BulletSystem.js","webpack:///./src/core/entities/Bullet.js","webpack:///./src/client/menu/MenuState.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","global","_interopRequireDefault","obj","__esModule","default","_three","_three2","THREE","Game","start","this","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","self","REVISION","undefined","requestAnimationFrame","cancelAnimationFrame","lastTime","vendors","x","length","setTimeout","callback","currTime","Date","now","timeToCall","Math","max","clearTimeout","performance","Number","EPSILON","pow","sign","Function","prototype","name","Object","defineProperty","get","toString","match","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","LoopOnce","LoopRepeat","LoopPingPong","Projector","console","error","projectVector","vector","camera","warn","project","unprojectVector","unproject","pickingRay","CanvasRenderer","domElement","document","createElement","clear","render","setClearColor","setSize","Color","color","arguments","fromArray","set","constructor","r","g","b","value","copy","setHex","setStyle","hex","floor","setRGB","setHSL","hue2rgb","q","t","h","s","l","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","exec","components","min","parseInt","size","charAt","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","sqrt","getHex","getHexString","slice","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","getStyle","offsetHSL","add","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","alpha","equals","array","offset","toArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Quaternion","y","z","w","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","cos","c2","c3","s1","sin","s2","s3","order","setFromAxisAngle","axis","angle","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","abs","crossVectors","normalize","inverse","conjugate","v","lengthSq","multiplyQuaternions","a","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","applyQuaternion","slerp","qb","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","onChange","qa","qm","Vector2","width","height","setX","setY","setComponent","index","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","scalar","isFinite","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","distanceToSquared","dx","dy","setLength","lerpVectors","v2","fromAttribute","attribute","itemSize","rotateAround","center","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","e","applyMatrix4","applyProjection","d","qx","qy","qz","qw","ix","iy","iz","iw","matrix","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","me","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","PI","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","atan2","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","end","line","result","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","points","makeEmpty","i","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","object","scope","updateMatrixWorld","traverse","node","geometry","Geometry","vertices","BufferGeometry","attributes","positions","getBoundingSphere","Sphere","radius","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","buffer","getX","getY","getZ","setXYZ","determinant","f","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","lookAt","eye","target","up","n","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","position","decompose","invSX","invSY","invSZ","makeFrustum","left","right","bottom","top","near","far","makePerspective","fov","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","split","uuid","Array","rnd","random","join","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nearestPowerOfTwo","log","LN2","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","initFromArray","getPoint","k","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","push","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","Channels","mask","channel","enable","toggle","disable","Clock","autoStart","startTime","oldTime","elapsedTime","running","stop","getElapsedTime","getDelta","newTime","EventDispatcher","apply","addEventListener","hasEventListener","removeEventListener","dispatchEvent","type","listener","_listeners","listeners","indexOf","listenerArray","splice","event","descSort","intersectObject","raycaster","intersects","recursive","visible","raycast","children","Raycaster","params","Mesh","Line","LOD","Points","threshold","Sprite","defineProperties","PointCloud","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","sort","intersectObjects","objects","isArray","Object3D","onRotationChange","rotation","onQuaternionChange","Object3DIdCount","parent","channels","DefaultUp","enumerable","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","remove","getChildByName","getObjectByName","getObjectById","getObjectByProperty","child","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","meta","extractFromCache","cache","values","key","data","metadata","isRootObject","output","geometries","materials","textures","images","version","generator","JSON","stringify","material","source","parse","Face3","materialIndex","vertexNormals","vertexColors","Face4","BufferAttribute","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","create","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","fromBufferGeometry","addFace","normals","tempNormals","uvs","tempUVs","uvs2","tempUVs2","uv","uv2","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","materialIndexSort","_id","newUvs1","newUvs2","setBit","enabled","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","addAttribute","getAttribute","removeAttribute","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","bb","isNaN","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","AnimationAction","clip","timeScale","loop","localRoot","loopCount","actionTime","clipTime","propertyBindings","setLocalRoot","updateTime","clipDeltaTime","previousClipTime","previousLoopCount","duration","mixer","action","newClipTime","loopDelta","syncWith","warpToDuration","init","time","clipResults","getAt","getTimeScaleAt","getWeightAt","AnimationClip","tracks","track","keys","trim","optimize","results","CreateFromMorphTargetSequence","morphTargetSequence","fps","numMorphTargets","KeyframeTrack","keyComparer","NumberKeyframeTrack","findByName","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","json","parseAnimation","animation","bones","nodeName","convertTrack","trackName","animationKeys","propertyName","trackType","animationKeyToValueFunc","animationKey","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","boneName","positionTrack","VectorKeyframeTrack","pos","quaternionTrack","QuaternionKeyframeTrack","rot","scaleTrack","scl","AnimationMixer","root","actions","propertyBindingMap","addAction","propertyBindingKey","propertyBinding","PropertyBinding","referenceCount","removeAllActions","properyBindingKey","unbind","removeAction","findActionByName","play","optionalFadeInDuration","fadeOut","fadeIn","warp","startTimeScale","endTimeScale","crossFade","fadeOutAction","fadeInAction","startEndRatio","endStartRatio","deltaTime","mixerDeltaTime","actionTimeScale","actionDeltaTime","actionResults","accumulate","AnimationUtils","getEqualsFunc","exemplarValue","typeName","interTrack","lerpFunc","getLerpFunc","lerp_object","slerp_object","lerp_number","lerp_boolean","lerp_boolean_immediate","lerp_string","lerp_string_immediate","lastIndex","validate","setResult","prevKey","constantToNext","currentKey","lerpValues","shift","timeOffset","endTime","firstKeysToRemove","lastKeysToRemove","currKey","newKeys","nextKey","compareValues","key0","key1","GetTrackTypeForTypeName","toLowerCase","BooleanKeyframeTrack","StringKeyframeTrack","rootNode","originalValue","parseResults","parseTrackName","directoryName","objectName","objectIndex","propertyIndex","findNode","cumulativeValue","cumulativeWeight","reset","isBound","bind","lerpAlpha","lerpValue","setValue","getValue","equalsValue","triggerDirty","targetObject","skeleton","nodeProperty","remainingWeight","valueChanged","re","matches","searchSkeleton","bone","searchNodeSubtree","childNode","subTreeNode","value0","value1","clonedKeys","elementCount","valueType","jsonKey","quat","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","format","magFilter","minFilter","updateCubeMap","renderer","scene","generateMipmaps","texture","activeCubeFace","setRenderTarget","zoom","updateProjectionMatrix","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","onlyShadow","shadowCameraFov","shadow","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowBias","bias","shadowDarkness","darkness","shadowMapWidth","mapSize","shadowMapHeight","groundColor","intensity","decay","exponent","LightShadow","map","AmbientLight","DirectionalLight","HemisphereLight","skyColor","PointLight","SpotLight","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","url","pop","initMaterials","texturePath","createMaterial","textureLoader","materialLoader","loadTexture","path","repeat","wrap","anisotropy","fullPath","loader","Handlers","load","setCrossOrigin","wrapS","wrapT","TextureLoader","MaterialLoader","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","opacity","transparent","setTextures","handlers","regex","test","XHRLoader","manager","DefaultLoadingManager","onLoad","onProgress","onError","cached","request","XMLHttpRequest","open","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setResponseType","setWithCredentials","ImageLoader","image","src","JSONLoader","statusDomElement","_statusDomElement","text","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","animations","concat","morphAnimationClips","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","getTexture","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","substring","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","detail","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","loadImage","parseConstant","Texture","mapping","getGeometry","getMaterial","Scene","mode","Group","levels","level","addLevel","CubeTextureLoader","urls","CubeTexture","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","overdraw","_needsUpdate","setValues","newValue","currentValue","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshLambertMaterial","MeshPhongMaterial","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","lights","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","canvas","toDataURL","getContext","drawImage","transformUv","CanvasTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","uvA","uvB","uvC","tempA","tempB","tempC","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","rotq","normalizeSkinWeights","sw","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","common","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","shadowMap","shadowMapSize","shadowMatrix","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","distanceRGBA","lightPos","WebGLRenderer","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","state","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","preventDefault","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","getAttributeBuffer","enableAttributeAndDivisor","enableAttribute","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_this","sortObjects","_projScreenMatrix","_frustum","groupMaterial","renderObjects","renderList","setMaterial","setProgram","renderBufferImmediate","renderBufferDirect","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","location","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","CULL_FACE","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","WebGLRenderTarget","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","textureNeedsPowerOfTwo","makePowerOfTwo","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","context","HTMLImageElement","HTMLCanvasElement","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_context","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","getViewport","dimensions","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","dataStart","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","isTargetPowerOfTwo","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","options","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","property","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","substr","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","doubleSided","flipSided","pointLightShadows","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","allocatedShadows","envMapMode","parameterName","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","isPointLight","lightPositionWorld","newMaterial","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","_renderList","_state","_lookTarget","_lightPositionWorld","_NumberOfMaterialVariants","cubeDirections","cubeUps","cube2DViewPorts","_vector4","depthShader","depthUniforms","distanceShader","distanceUniforms","depthMaterial","distanceMaterial","faceCount","BLEND","shadowCamera","vpWidth","vpHeight","shadowFilter","pars","vpDimensions","clearAlpha","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","hasVertexTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","uvOffset","uvScale","fogType","fillStyle","fillRect","spritePosition","spriteRotation","spriteScale","oldFogType","sceneFogType","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","shape","prevShapeIdx","nextShapeIdx","insideAngle","hole","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","intersectsHoleEdge","ihIdx","chkHole","hIdx","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","onload","decodeAudioData","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","window","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","lengths","getLengths","cacheArcLengths","current","last","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","Utils","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","createPointsGeometry","createGeometry","createSpacedPointsGeometry","Path","fromPoints","moveTo","lineTo","args","lastargs","x0","y0","quadraticCurveTo","aCPx","aCPy","QuadraticBezierCurve","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","cpx2","cpy2","cpx1","cpy1","cpx0","cpy0","laste","item","spts","spline","deltaAngle","tdivisions","toShapes","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","shapes","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","ii","segment","heightHalf","verticesRow","uvsRow","na","nb","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","sortFunction","thresholdDot","edge","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","vlen","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","curveSegments","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","shapePoints","reverse","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","phi","np","base","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","o","radiusStep","thetaSegment","thetaEnd","vertexCount","getPos","in_q","in_p","cu","su","quOverP","cs","tz","grid","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","ParametricGeometry","func","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","frameTime","keyframe","mix","__dirname","_Engine","_Engine2","_AssetManager","_AssetManager2","_path","_path2","_MenuBuilder","_MenuBuilder2","ASSET_PATH","resolve","ASSET_CONFIG","paths","maps","atlases","fonts","audio","textureAtlases","then","engine","debugMode","menuState","addState","changeState","run","err","_classCallCheck","instance","Constructor","TypeError","_createClass","props","descriptor","configurable","writable","protoProps","staticProps","_RenderDebug","_RenderDebug2","_Renderer","_Renderer2","_mainloop","_mainloop2","Engine","states","Map","currentState","_renderDebug","views","interpolationPercentage","before","after","setUpdate","setDraw","setBegin","setEnd","_statsjs","_statsjs2","_rendererStats","container","cssText","msDiv","appendChild","msText","innerHTML","msTexts","nLines","textContent","RenderDebug","statjs","setModes","body","rendererStats","begin","Stats","prevTime","modes","tag","css","element","createPanel","fg","bg","div","toUpperCase","graph","display","updateGraph","dom","firstChild","fpsMin","POSITIVE_INFINITY","fpsMax","fpsDiv","fpsText","fpsGraph","ms","msMin","msMax","msGraph","mem","memMin","memMax","memDiv","memText","memGraph","heapSize","usedJSHeapSize","heapSizeLimit","jsHeapSizeLimit","DEFAULT_WIDTH","DEFAULT_HEIGHT","Renderer","divName","_views","_THREErenderer","devicePixelRatio","getElementById","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","view","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","animate","timestamp","lastFrameTimeMs","minFrameDelay","rafHandle","frameDelta","lastFpsUpdate","framesThisSecond","numUpdateSteps","simulationTimestep","panic","draw","started","lastTimestamp","timeout","NOOP","MainLoop","getSimulationTimestep","setSimulationTimestep","timestep","getFPS","getMaxAllowedFPS","setMaxAllowedFPS","resetFrameDelta","oldFrameDelta","fun","isRunning","_howler","_howler2","_assets","_loadHowlerAudio","spriteJson","Promise","reject","onloaderror","soundId","sound","Howl","_loadAudioSprite","audioSpritePath","_loadJson","fullSources","_loadFont","fontsPath","font","fontJson","_loadTexture","pages","_textureLoader","progress","_loadXhr","_xhrLoader","_loadAtlas","atlasesPath","atlas","_loadMap","mapsPath","AssetLoader","assetConfig","assetsToLoad","atlasName","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","mapName","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","fontName","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","audioSpriteName","all","cloneTexture","getMap","getAtlasMapping","getFont","getAudioSprite","audioSprite","__WEBPACK_AMD_DEFINE_ARRAY__","oncanplaythrough","muted","createGainNode","_codecs","_howls","_muted","_volume","autoSuspend","_autoSuspend","mobileAutoEnable","noAudio","usingWebAudio","ctx","_setupCodecs","volume","_webAudio","_getSoundIds","_soundById","_node","mute","unload","close","codecs","canPlayType","replace","navigator","userAgent","mp3","mpeg","opus","ogg","wav","aac","m4a","mp4","weba","webm","_enableMobileAudio","maxTouchPoints","msMaxTouchPoints","_mobileEnabled","noteOn","suspend","_sounds","_paused","_suspendTimer","_resumeAfterSuspend","_autoResume","resume","_autoplay","_ext","ext","_html5","html5","_loop","_pool","pool","_preload","preload","_rate","rate","_sprite","_src","_duration","_loaded","_endTimers","_onend","onend","fn","_onfaded","onfaded","_onload","_onloaderror","_onpause","onpause","_onplay","onplay","_onstop","onstop","_emit","protocol","_","_ended","_inactiveSound","once","_seek","_start","_stop","_refreshBuffer","setValueAtTime","_playStart","bufferSource","noteGrainOn","_clearTimer","isCocoonJS","seek","_stopFade","noteOff","fade","linearRampToValueAtTime","_timeout","_interval","setInterval","clearInterval","cancelScheduledValues","playing","_errorFn","_loadFn","on","off","_drain","_panner","loopStart","loopEnd","_parent","paused","_errorListener","_loadListener","__default","atob","String","fromCharCode","charCodeAt","onerror","Howler","HowlerGlobal","Sound","_pos","_orientation","_velocity","_listenerAttr","dopplerFactor","speedOfSound","velocity","setVelocity","listenerAttr","_pannerAttr","coneInnerAngle","coneOUterAngle","coneOuterGain","distanceModel","maxDistance","panningModel","pannerAttr","_coneInnerAngle","_coneOUterAngle","_coneOuterGain","_distanceModel","_maxDistance","_panningModel","_refDistance","_rolloffFactor","__webpack_amd_options__","process","normalizeArray","allowAboveRoot","unshift","xs","res","splitPathRe","splitPath","filename","resolvedPath","resolvedAbsolute","cwd","isAbsolute","trailingSlash","relative","from","to","arr","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","basename","extname","str","len","cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","Item","noop","nextTick","title","browser","env","argv","versions","addListener","removeListener","removeAllListeners","emit","binding","chdir","umask","createPlayState","playOptions","assign","poolLimit","teams","cpuCount","playerName","playState","_PlayBuilder2","createSingleplayer","_slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","_graphics","_MenuItem","_MenuItem2","_MenuInput","_MenuInput2","_MenuItemsView","_MenuItemsView2","_MenuRenderView","_MenuRenderView2","_LogoView","_LogoView2","_MenuAudio","_MenuAudio2","_Menu","_Menu2","_OptionsMenu","_OptionsMenu2","_HelpMenu","_HelpMenu2","_PlayBuilder","_MenuState","_MenuState2","MenuBuilder","menu","menuInput","inputs","subMenus","_createMenuItems","currentMenu","_createView","addMenuItem","menuItem","gamePlaying","player","entries","_step$value","subMenuName","subMenu","addMenu","menuView","viewContainer","ViewContainer","background1","BackgroundView","addDynamicView","addStaticView","backgroundView","_step2$value","addViewContainer","currentViewContainer","addView","View","TextView","TextureManager","TextureFrame","TextureAtlas","RenderView","Animation","_Animation","_Animation2","_RenderView","_RenderView2","_TextureAtlas","_TextureAtlas2","_TextureFrame","_TextureFrame2","_TextureManager","_TextureManager2","_TextView","_TextView2","_View","_View2","_ViewContainer","_ViewContainer2","_BackgroundView","_BackgroundView2","textureAtlas","interval","framePrefix","fixed","textureFrame","currentFrameIndex","currentDisplayTime","_updateTexture","frame","initialFrame","getFrameSize","_changeSize","aw","ah","bounds","frameName","getFrameOffset","_initialized","viewContainers","_currentViewContainer","currentViewContainerName","newViewContainer","framePosition","frameSize","_atlases","getAtlas","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","_get","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_View3","_threeBmfontText","_threeBmfontText2","_text","align","aligh","_color","_updateGeometry","layout","initialPosition","_ref","initialized","TextGeometry","opt","Base","_opt","createLayout","inherits","createIndices","utils","texWidth","scaleW","texHeight","scaleH","glyphs","glyph","bitmap","visibleGlyphs","clockwise","attr","multipage","computeSphere","bbox","computeBox","TextLayout","_measure","computeMetrics","addGetter","wrapper","getGlyphById","glyphIdx","findChar","getXHeight","X_HEIGHTS","getMGlyph","M_WIDTHS","getCapHeight","CAP_HEIGHTS","getKerning","kernings","table","kern","first","second","getAlignType","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_LEFT","wordWrap","xtend","number","TAB_ID","SPACE_ID","measure","tabSize","_setupSpaceGlyphs","minWidth","maxLineWidth","reduce","prev","lineHeight","baseline","descender","letterSpacing","_descender","_baseline","_xHeight","_capHeight","_lineHeight","_ascender","forEach","lineIndex","lastGlyph","getGlyph","xadvance","_linesTotal","_fallbackSpaceGlyph","_fallbackTabGlyph","space","tabWidth","xoffset","yoffset","curPen","curWidth","nextPen","nextWidth","idxOf","chr","isWhitespace","whitespace","pre","lineStart","isNewline","newline","lineEnd","measured","greedy","testWidth","newLine","newlineChar","nextStart","monospace","extend","hasOwnProperty","num","def","ctor","superCtor","super_","TempCtor","dtype","anArray","isBuffer","numIndices","_isBuffer","isR69","attrib","newAttrib","setAttribute","rebuildAttribute","flatten","attribLength","flattenVertexData","dim","dstLength","Ctor","toObject","val","propIsEnumerable","propertyIsEnumerable","symbols","getOwnPropertySymbols","page","bw","bh","minX","minY","maxX","maxY","staticViews","Set","dynamicViews","_backgroundView","staticView","dynamicView","textureName","textureAtlasName","_lightness","_initalized","MenuItem","onAction","editable","_Keyboard","_Keyboard2","_Gamepad","_Gamepad2","_HumanInput2","_HumanInput3","MenuInput","_HumanInput","keyboardDownOnce","UP","isStickDown","moveUp","DOWN","moveDown","selectedItem","isEditing","BACKSPACE","letterKeyCodes","lastPressed","keyByCode","ENTER","SPACE","gamepadButtonDownOnce","selectCurrentItem","letterKeys","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","CTRL","SHIFT","ESC","TAB","codes","Keyboard","_pressed","isDown","keyCode","onKeydown","onKeyup","pressedCodes","pressedKeys","pressed","letterCodes","_gamepadMicro","_gamepadMicro2","_gp","_gamepads","Gamepad","button","gamepad","buttons","held","stick","rightStick","leftStick","gamepads","gamepadsConnected","_typeof","GamepadMicro","_buttonNames","_ticking","_prevTimestamps","_connectionListening","_updateCallback","_prevRawGamepadTypes","gamepadconnected","_getRawGamepads","gamepadConnected","gamepadSupported","_gamepadSupported","_heldButtonDelay","_heldTimestampByGamepad","_newGamepad","dPad","_checkForEvents","_setupPoll","offUpdate","_shouldRemoveEvents","_removePoll","_onGamepadConnected","_onGamepadDisconnected","disconnectedGamepad","getGamepads","webkitGetGamepads","standardGamepads","gp","_buttonPressed","pressure","_checkForGamepadChange","rawGamepads","changed","changedRawGamepads","gamepadIndex","heldTimestamps","hasBeenHeld","_poll","currentGamepads","buttonNames","currentRawGamepad","currentGamepad","activeButtons","heldTimestamp","isSameTimestamp","wasDown","released","gamepadTimestamp","browserTimestamp","axes","dPadLeft","dPadRight","dPadUp","dPadDown","_tick","tickFunc","mozRequestAnimationFrame","webkitRequestAnimationFrame","webkitGamepads","HumanInput","_previousKeyboardKeys","_previousGamepadStick","_previousGamepadButton","MenuItemsView","selectedTextColor","textColor","viewMenuItemPairs","selectedView","logoView","startY","itemCount","menuItems","textView","previousItem","currentView","previousView","LogoView","logoSize","_RenderView3","MenuRenderView","menus","currentMenuName","_StateAudio2","_StateAudio3","MenuAudio","_StateAudio","effectsSpriteName","backgroundSpriteName","effects","StateAudio","backgrounds","Menu","menuItemKeys","selectedItemIndex","_MenuInputItem","_MenuInputItem2","OptionsMenu","changeOption","background","_MenuItem3","MenuInputItem","label","defaultValue","_value","HelpMenu","createCpuSoldiers","_playState$map$random","randomRespawnPosition","soldier","_Soldier2","_ComputerInput2","addSoldier","createPlayer","_playState$map$random2","_Player2","playerInput","_PlayerInput2","createViews","_ViewBuilder2","playView","uiView","_PlayState","_PlayState2","_ViewBuilder","_Match","_Match2","_PlayerInput","_UiInput","_UiInput2","_ComputerInput","_Player","_PlayAudio","_PlayAudio2","_MapParser","_MapParser2","_Soldier","_CollisionSystem","_CollisionSystem2","_BulletSystem","_BulletSystem2","PlayBuilder","collisionSystem","bulletSystem","uiInput","_State2","_State3","PlayState","_State","network","showScores","onPause","soldiers","dead","respawn","State","input","_StatsRenderView","_StatsRenderView2","_AmmoView","_AmmoView2","_HealthView","_HealthView2","_WeaponView","_WeaponView2","_ScoreView","_ScoreView2","_BulletSystemView","_BulletSystemView2","_WorldMapView","_WorldMapView2","_SoldierView","_SoldierView2","_SoldierViewPool","_SoldierViewPool2","_PlayRenderView","_PlayRenderView2","ViewBuilder","uiViewContainer","scoreView","weaponView","ammoView","healthView","playerView","soldierView","bulletSystemView","worldMapView","cameraFollowView","StatsRenderView","AmmoView","ammoSize","ammoMesh","magazineText","ammoText","currentWeapon","weapon","ammo","magazine","HealthView","_healthScale","healthScale","health","maxHealth","oldX","WeaponView","_weapon","_converToText","resultText","teamName","teamData","kills","deaths","soldierText","totalKills","totalDeaths","ScoreView","backgroundMaterial","backgroundGeometry","scoreTextView","_scoreText","newScores","sortedScores","_ObjectPool","_ObjectPool2","_BulletView","_BulletView2","BulletSystemView","bulletViewPool","poolSize","bulletViewPairs","WeakMap","allocate","deadBullets","deadBullet","bulletView","activeBullets","bullet","ObjectPool","factoryFunction","firstAllocationNumber","allocationNumber","allocationLimit","totalInstances","availableInstances","BulletView","previous","previousPosition","_WaterBlocksView","_WaterBlocksView2","_StaticBlocksView","_StaticBlocksView2","_LightView","_LightView2","WorldMapView","wallsView","waterView","lightView","WATER_FRAMES","_waterGeometry","block","walls","getBounds","topGeometry","blockGeometry","_createMergedBlockGeometry","blocks","mergedGeometry","WaterBlocksView","waterFrames","_textureAtlasName","_waterFrames","blockWidth","blockHeight","blockDepth","_wallBlockGeometry","south","southGeometry","north","northGeometry","west","westGeometry","east","eastGeometry","StaticBlocksView","LightView","lightGeometry","lightMaterial","lightMesh","sourcePosition","spotLight","WALK_FRAMES","RUN_FRAMES","IDLE_FRAMES","TEAM_COLORS","american","german","SoldierView","_team","team","walk","idle","currentAnimation","isMoving","zOffset","_updateAnimation","SoldierViewPool","viewPool","viewPairs","has","free","PlayRenderView","ambientLight","cameraFollowLight","_toConsumableArray","arr2","soldierStatsByTeam","stat","resultsByTeam","teamResult","Match","matchTime","matchDuration","teamNames","leastTeamName","minCount","teamWithLeastPlayers","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","teamA","teamB","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","solider","PlayerInput","stopMoving","turnRight","turnLeft","stopTurning","fireBullet","reload","scrollWeapons","_input","UiInput","ComputerInput","_Soldier3","Player","isPlayer","_Character2","_Character3","_WeaponFactory","_WeaponFactory2","Soldier","_Character","weapons","currentWeaponIndex","addWeapon","mp44","thompson","walkingSpeed","runningSpeed","isSoldier","deathCount","firedBy","killedByCount","suicides","fired","fire","firedBullet","kill","death","_Entity2","_Entity3","GRAVITY","Character","_Entity","physics","bullets","isCharacter","damage","_isRunning","speed","_Polygon","_Polygon2","_Vector","_Vector2","DEFAULT_SPEED","DEFAULT_ROTATION_SPEED","Entity","rotationSpeed","_body","halfWidth","halfHeight","isBullet","angularVelocity","collidable","shouldUpdate","setAngle","_boxToPolygon","Polygon","setVertices","lengthChanged","computedVertices","_compute","rotate","computedVertex","perp","xMin","yMin","xMax","yMax","Vector","other","amt","len2","projectN","_Gun","_Gun2","maxAmmo","maxMagazine","fireRate","Gun","reloadTime","_reloadingTime","_firedTime","_canFire","isReloading","refill","newAmmo","_fired","PlayAudio","entities","entity","_Block","_Block2","_Light","_Light2","_WorldMap","_WorldMap2","_parseBlock","rawBlock","blockOptions","_createEmptyLayers","mapWidth","mapHeight","mapDepth","layers","row","parseLight","rawLight","rawPosition","_parseRawMap","rawMap","rawBlocks","worldMap","respawns","MapParser","Block","_position","_walls","_computeBodies","bodies","WorldMap","types","blocksBetweenIndexes","indexToPosition","indexes","positionToIndex","blockAtIndex","blockAtPosition","finalString","layerStrings","layerRow","_CollisionUtils","_CollisionUtils2","CollisionSystem","wallCollision","overlapV","floorCollision","fall","stopFalling","_SAT","_SAT2","_Response","_Response2","rayPositions","rayDistance","CollisionUtils","onCollision","blocksBetweenPositions","polygons","polygon","testPolygonPolygon","nextEntityPosition","floorBlockIndex","_Box","_Box2","T_VECTORS","T_ARRAYS","T_RESPONSE","UNIT_SQUARE","toPolygon","_flattenVerticesOn","_isSeparatingAxis","aPos","bPos","aPoints","bPoints","rangeA","rangeB","offsetV","projectedOffset","overlap","aInB","bInA","option1","option2","absOverlap","overlapN","_vornoiRegion","dp","LEFT_VORONOI_REGION","RIGHT_VORONOI_REGION","MIDDLE_VORONOI_REGION","_pointInCircle","differenceV","radiusSq","_pointInPolygon","poly","_testPolygonPolygon","_testCircleCircle","totalRadius","totalRadiusSq","dist","_testPolygonCircle","circle","circlePos","region","distAbs","_testCirclePolygon","testPolygonCircle","aLen","bLen","SAT","testCirclePolygon","testCircleCircle","pointInPolygon","pointInCircle","Box","Response","_Bullet","_Bullet2","BulletSystem","bulletPool","firstBullet","firedByWeapon","_fireBullet","hitByBullet","Bullet","traveledDistance","MenuState","_currentMenu","currentOptionsEdit","optionName"],"mappings":"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,0BACA54D,EAAA44D,YAAA,0BAEA,gBAEA,qCACA,iDACA,yCACA,kCAEA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,aACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,mBAEA,sEAEA54D,EAAA44D,YAAA,gBAEA54D,EAAA44D,YAAA,yBAEA54D,EAAA44D,YAAA,aAEA,yDAEA,KAEAphC,KAAA,OAIAgkC,SAEA1S,SAAA9oD,EAAA2xD,cAAA9mB,OAEA7qC,EAAAi5D,YAAA,OACAj5D,EAAAi5D,YAAA,IACAj5D,EAAAi5D,YAAA,OACAj5D,EAAAi5D,YAAA,WAGA1W,UAAkB1kB,KAAA,IAAA3zB,MAAA,GAAAlK,GAAAyJ,MAAA,OAKlBs/C,cAEA,kBAEA,4BAEA,sBAEA,4BAEA,SAEA/oD,EAAA44D,YAAA,OACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,2BACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,wBACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,sBACA54D,EAAA44D,YAAA,wBAEA,gBAEA54D,EAAA44D,YAAA,UACA54D,EAAA44D,YAAA,WACA54D,EAAA44D,YAAA,aAEA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,qBAEA54D,EAAA44D,YAAA,aACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,mBAEA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,cACA54D,EAAA44D,YAAA,sBACA54D,EAAA44D,YAAA,iBAEA,KAEAphC,KAAA,MAEAwxB,gBAEA,wBACA,yBACA,yBAEA,kCAEA,4BAEA,sBAEA,4BAEA,SAEAhpD,EAAA44D,YAAA,OACA54D,EAAA44D,YAAA,oBACA54D,EAAA44D,YAAA,iBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,uBACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,wBACA54D,EAAA44D,YAAA,0BACA54D,EAAA44D,YAAA,0BAEA,gBAEA,qCACA,iDACA,+CACA,kCAEA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,aACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,mBAEA,uBAEA,0BACA,sGACA,SACA,qGAEA,SAEA,qGAEA,UAEA54D,EAAA44D,YAAA,gBAEA54D,EAAA44D,YAAA,yBAEA54D,EAAA44D,YAAA,aAEA,yDAEA,KAEAphC,KAAA,OAIAikC,OAEA3S,SAAA9oD,EAAA2xD,cAAA9mB,OAEA7qC,EAAAi5D,YAAA,OACAj5D,EAAAi5D,YAAA,MACAj5D,EAAAi5D,YAAA,SACAj5D,EAAAi5D,YAAA,YACAj5D,EAAAi5D,YAAA,QACAj5D,EAAAi5D,YAAA,UACAj5D,EAAAi5D,YAAA,gBACAj5D,EAAAi5D,YAAA,IACAj5D,EAAAi5D,YAAA,OACAj5D,EAAAi5D,YAAA,WAGA1W,UAAkB1kB,KAAA,IAAA3zB,MAAA,GAAAlK,GAAAyJ,MAAA,IAClB64C,UAAkBzkB,KAAA,IAAA3zB,MAAA,GAAAlK,GAAAyJ,MAAA,UAClB+4C,WAAkB3kB,KAAA,IAAA3zB,MAAA,OAKlB6+C,cAEA,gBAEA,8BAEA,sBAEA,yBAEA,SAEA/oD,EAAA44D,YAAA,OACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,4BACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,yBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,wBACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,sBACA54D,EAAA44D,YAAA,wBAEA,gBAEA54D,EAAA44D,YAAA,UACA54D,EAAA44D,YAAA,WACA54D,EAAA44D,YAAA,aAEA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,qBAEA,sBAEA,6CAEA,SAEA54D,EAAA44D,YAAA,aACA54D,EAAA44D,YAAA,uBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,mBAEA,qCAEA54D,EAAA44D,YAAA,gBACA54D,EAAA44D,YAAA,cACA54D,EAAA44D,YAAA,oBACA54D,EAAA44D,YAAA,iBAEA,KAEAphC,KAAA,MAEAwxB,gBAEA,gBAEA,wBACA,yBACA,yBACA,2BACA,yBAEAhpD,EAAA44D,YAAA,OACA54D,EAAA44D,YAAA,oBACA54D,EAAA44D,YAAA,iBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,uBACA54D,EAAA44D,YAAA,oBACA54D,EAAA44D,YAAA,uBACA54D,EAAA44D,YAAA,0BACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,2BACA54D,EAAA44D,YAAA,wBACA54D,EAAA44D,YAAA,sBACA54D,EAAA44D,YAAA,wBACA54D,EAAA44D,YAAA,0BACA54D,EAAA44D,YAAA,0BAEA,gBAEA,qCACA,iDACA,+CACA,uCACA,kCAEA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,aACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,qBACA54D,EAAA44D,YAAA,sBACA54D,EAAA44D,YAAA,kBACA54D,EAAA44D,YAAA,mBACA54D,EAAA44D,YAAA,eACA54D,EAAA44D,YAAA,qBAEA54D,EAAA44D,YAAA,sBACA54D,EAAA44D,Y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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar _three = __webpack_require__(1);\n\t\n\tvar _three2 = _interopRequireDefault(_three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// three.js must be set up as a global\n\tglobal.THREE = _three2.default;\n\t\n\tvar Game = __webpack_require__(2);\n\t\n\tGame.start();\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '73' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t}\r\n\t\r\n\t//\r\n\t\r\n\tif ( self.performance === undefined ) {\r\n\t\r\n\t\tself.performance = {};\r\n\t\r\n\t}\r\n\t\r\n\tif ( self.performance.now === undefined ) {\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar start = Date.now();\r\n\t\r\n\t\t\tself.performance.now = function () {\r\n\t\r\n\t\t\t\treturn Date.now() - start;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t}\r\n\t\r\n\t//\r\n\t\r\n\tif ( Number.EPSILON === undefined ) {\r\n\t\r\n\t\tNumber.EPSILON = Math.pow( 2, -52 );\r\n\t\r\n\t}\r\n\t\r\n\t//\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t// Loop styles for AnimationAction\r\n\t\r\n\tTHREE.LoopOnce = 2200;\r\n\tTHREE.LoopRepeat = 2201;\r\n\tTHREE.LoopPingPong = 2202;\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.fromArray( arguments );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tfunction handleAlpha( string ) {\r\n\t\r\n\t\t\t\tif ( string === undefined ) return;\r\n\t\r\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.r = array[ offset ];\r\n\t\t\tthis.g = array[ offset + 1 ];\r\n\t\t\tthis.b = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tget width() { return this.x },\r\n\t\tset width( value ) { this.x = value },\r\n\t\r\n\t\tget height() { return this.y },\r\n\t\tset height( value ) { this.y = value },\r\n\t\r\n\t\t//\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( isFinite( scalar ) ) {\r\n\t\t\t\tthis.x *= scalar;\r\n\t\t\t\tthis.y *= scalar;\r\n\t\t\t} else {\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclampLength: function ( min, max ) {\r\n\t\r\n\t\t\tvar length = this.length();\r\n\t\r\n\t\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( length ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( length / this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateAround: function ( center, angle ) {\r\n\t\r\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\t\r\n\t\t\tvar x = this.x - center.x;\r\n\t\t\tvar y = this.y - center.y;\r\n\t\r\n\t\t\tthis.x = x * c - y * s + center.x;\r\n\t\t\tthis.y = x * s + y * c + center.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( isFinite( scalar ) ) {\r\n\t\t\t\tthis.x *= scalar;\r\n\t\t\t\tthis.y *= scalar;\r\n\t\t\t\tthis.z *= scalar;\r\n\t\t\t} else {\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclampLength: function ( min, max ) {\r\n\t\r\n\t\t\tvar length = this.length();\r\n\t\r\n\t\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( length ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( length / this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( isFinite( scalar ) ) {\r\n\t\t\t\tthis.x *= scalar;\r\n\t\t\t\tthis.y *= scalar;\r\n\t\t\t\tthis.z *= scalar;\r\n\t\t\t\tthis.w *= scalar;\r\n\t\t\t} else {\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 0;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( 1 / scalar );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.min( this.x, v.x );\r\n\t\t\tthis.y = Math.min( this.y, v.y );\r\n\t\t\tthis.z = Math.min( this.z, v.z );\r\n\t\t\tthis.w = Math.min( this.w, v.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tthis.x = Math.max( this.x, v.x );\r\n\t\t\tthis.y = Math.max( this.y, v.y );\r\n\t\t\tthis.z = Math.max( this.z, v.z );\r\n\t\t\tthis.w = Math.max( this.w, v.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( length ) {\r\n\t\r\n\t\t\treturn this.multiplyScalar( length / this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://clara.io\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.lengthSq() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.lengthSq() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclamp: function ( value, min, max ) {\r\n\t\r\n\t\t\treturn Math.max( min, Math.min( max, value ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnearestPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://clara.io\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Channels.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Channels = function () {\r\n\t\r\n\t\tthis.mask = 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Channels.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Channels,\r\n\t\r\n\t\tset: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask = 1 << channel;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tenable: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask |= 1 << channel;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoggle: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask ^= 1 << channel;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisable: function ( channel ) {\r\n\t\r\n\t\t\tthis.mask &= ~ ( 1 << channel );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://clara.io/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.channels = new THREE.Channels();\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tfunction onRotationChange() {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onQuaternionChange() {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t}\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\toutput.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tvar object = {};\r\n\t\r\n\t\t\tobject.uuid = this.uuid;\r\n\t\t\tobject.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\t\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\t\tif ( this.visible === false ) object.visible = false;\r\n\t\r\n\t\t\tobject.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( this.geometry !== undefined ) {\r\n\t\r\n\t\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.geometry = this.geometry.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.material !== undefined ) {\r\n\t\r\n\t\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.material = this.material.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tobject.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = object;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction addFace( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsortFacesByMaterialIndex: function () {\r\n\t\r\n\t\t\tvar faces = this.faces;\r\n\t\t\tvar length = faces.length;\r\n\t\r\n\t\t\t// tag faces\r\n\t\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tfaces[ i ]._id = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// sort faces\r\n\t\r\n\t\t\tfunction materialIndexSort( a, b ) {\r\n\t\r\n\t\t\t\treturn a.materialIndex - b.materialIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfaces.sort( materialIndexSort );\r\n\t\r\n\t\t\t// sort uvs\r\n\t\r\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\t\r\n\t\t\tvar newUvs1, newUvs2;\r\n\t\r\n\t\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar id = faces[ i ]._id;\r\n\t\r\n\t\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\tvar attribute = this.attributes.uv;\r\n\t\r\n\t\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/animation/AnimationAction.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A clip that has been explicitly scheduled.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.AnimationAction = function ( clip, startTime, timeScale, weight, loop ) {\r\n\t\r\n\t\tif ( clip === undefined ) throw new Error( 'clip is null' );\r\n\t\tthis.clip = clip;\r\n\t\tthis.localRoot = null;\r\n\t\tthis.startTime = startTime || 0;\r\n\t\tthis.timeScale = timeScale || 1;\r\n\t\tthis.weight = weight || 1;\r\n\t\tthis.loop = loop || THREE.LoopRepeat;\r\n\t\tthis.loopCount = 0;\r\n\t\tthis.enabled = true;\t// allow for easy disabling of the action.\r\n\t\r\n\t\tthis.actionTime = - this.startTime;\r\n\t\tthis.clipTime = 0;\r\n\t\r\n\t\tthis.propertyBindings = [];\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.LoopOnce = 2200;\r\n\tTHREE.LoopRepeat = 2201;\r\n\tTHREE.LoopPingPing = 2202;\r\n\t*/\r\n\t\r\n\tTHREE.AnimationAction.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationAction,\r\n\t\r\n\t\tsetLocalRoot: function( localRoot ) {\r\n\t\r\n\t\t\tthis.localRoot = localRoot;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateTime: function( clipDeltaTime ) {\r\n\t\r\n\t\t\tvar previousClipTime = this.clipTime;\r\n\t   \t\tvar previousLoopCount = this.loopCount;\r\n\t   \t\tvar previousActionTime = this.actionTime;\r\n\t\r\n\t\t\tvar duration = this.clip.duration;\r\n\t\r\n\t\t\tthis.actionTime = this.actionTime + clipDeltaTime;\r\n\t\r\n\t\t\tif ( this.loop === THREE.LoopOnce ) {\r\n\t\r\n\t\t\t\tthis.loopCount = 0;\r\n\t\t\t\tthis.clipTime = Math.min( Math.max( this.actionTime, 0 ), duration );\r\n\t\r\n\t\t\t\t// if time is changed since last time, see if we have hit a start/end limit\r\n\t\t\t\tif ( this.clipTime !== previousClipTime ) {\r\n\t\r\n\t\t\t\t\tif ( this.clipTime === duration ) {\r\n\t\r\n\t\t\t\t\t\tthis.mixer.dispatchEvent( { type: 'finished', action: this, direction: 1 } );\r\n\t\r\n\t\t\t\t\t} else if ( this.clipTime === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.mixer.dispatchEvent( { type: 'finished', action: this, direction: -1 } );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\treturn this.clipTime;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.loopCount = Math.floor( this.actionTime / duration );\r\n\t\r\n\t\t\tvar newClipTime = this.actionTime - this.loopCount * duration;\r\n\t\t\tnewClipTime = newClipTime % duration;\r\n\t\r\n\t\t\t// if we are ping pong looping, ensure that we go backwards when appropriate\r\n\t\t\tif ( this.loop == THREE.LoopPingPong ) {\r\n\t\r\n\t\t\t\tif ( Math.abs( this.loopCount % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\tnewClipTime = duration - newClipTime;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.clipTime = newClipTime;\r\n\t\r\n\t\t\tif ( this.loopCount !== previousLoopCount ) {\r\n\t\r\n\t   \t\t\tthis.mixer.dispatchEvent( { type: 'loop', action: this, loopDelta: ( this.loopCount - this.loopCount ) } );\r\n\t\r\n\t   \t\t}\r\n\t\r\n\t\t   \treturn this.clipTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsyncWith: function( action ) {\r\n\t\r\n\t\t\tthis.actionTime = action.actionTime;\r\n\t\t\tthis.timeScale = action.timeScale;\r\n\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\twarpToDuration: function( duration ) {\r\n\t\r\n\t\t\tthis.timeScale = this.clip.duration / duration;\r\n\t\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\r\n\t\tinit: function( time ) {\r\n\t\r\n\t\t\tthis.clipTime = time - this.startTime;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function( clipDeltaTime ) {\r\n\t\r\n\t\t\tthis.updateTime( clipDeltaTime );\r\n\t\r\n\t\t\tvar clipResults = this.clip.getAt( this.clipTime );\r\n\t\r\n\t\t\treturn clipResults;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTimeScaleAt: function( time ) {\r\n\t\r\n\t\t\tif ( this.timeScale.getAt ) {\r\n\t\t\t\t// pass in time, not clip time, allows for fadein/fadeout across multiple loops of the clip\r\n\t\t\t\treturn this.timeScale.getAt( time );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.timeScale;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWeightAt: function( time ) {\r\n\t\r\n\t\t\tif ( this.weight.getAt ) {\r\n\t\t\t\t// pass in time, not clip time, allows for fadein/fadeout across multiple loops of the clip\r\n\t\t\t\treturn this.weight.getAt( time );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/AnimationClip.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * Reusable set of Tracks that represent an animation.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.AnimationClip = function ( name, duration, tracks ) {\r\n\t\r\n\t\tthis.name = name;\r\n\t\tthis.tracks = tracks;\r\n\t\tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\t\r\n\t\t// this means it should figure out its duration by scanning the tracks\r\n\t\tif ( this.duration < 0 ) {\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\t\t\tvar track = this.tracks[i];\r\n\t\t\t\tthis.duration = Math.max( track.keys[ track.keys.length - 1 ].time );\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// maybe only do these on demand, as doing them here could potentially slow down loading\r\n\t\t// but leaving these here during development as this ensures a lot of testing of these functions\r\n\t\tthis.trim();\r\n\t\tthis.optimize();\r\n\t\r\n\t\tthis.results = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationClip.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationClip,\r\n\t\r\n\t\tgetAt: function( clipTime ) {\r\n\t\r\n\t\t\tclipTime = Math.max( 0, Math.min( clipTime, this.duration ) );\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar track = this.tracks[ i ];\r\n\t\r\n\t\t\t\tthis.results[ i ] = track.getAt( clipTime );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.results;\r\n\t\t},\r\n\t\r\n\t\ttrim: function() {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\toptimize: function() {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.tracks[ i ].optimize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.AnimationClip.CreateFromMorphTargetSequence = function( name, morphTargetSequence, fps ) {\r\n\t\r\n\t\r\n\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\tvar tracks = [];\r\n\t\r\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\t\r\n\t\t\tvar keys = [];\r\n\t\r\n\t\t\tkeys.push( { time: ( i + numMorphTargets - 1 ) % numMorphTargets, value: 0 } );\r\n\t\t\tkeys.push( { time: i, value: 1 } );\r\n\t\t\tkeys.push( { time: ( i + 1 ) % numMorphTargets, value: 0 } );\r\n\t\r\n\t\t\tkeys.sort( THREE.KeyframeTrack.keyComparer );\r\n\t\r\n\t\t\t// if there is a key at the first frame, duplicate it as the last frame as well for perfect loop.\r\n\t\t\tif ( keys[0].time === 0 ) {\r\n\t\t\t\tkeys.push( {\r\n\t\t\t\t\ttime: numMorphTargets,\r\n\t\t\t\t\tvalue: keys[0].value\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\r\n\t\t\ttracks.push( new THREE.NumberKeyframeTrack( '.morphTargetInfluences[' + morphTargetSequence[i].name + ']', keys ).scale( 1.0 / fps ) );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.AnimationClip( name, -1, tracks );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationClip.findByName = function( clipArray, name ) {\r\n\t\r\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\t\r\n\t\t\tif ( clipArray[i].name === name ) {\r\n\t\r\n\t\t\t\treturn clipArray[i];\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationClip.CreateClipsFromMorphTargetSequences = function( morphTargets, fps ) {\r\n\t\r\n\t\tvar animationToMorphTargets = {};\r\n\t\r\n\t\t// tested with https://regex101.com/ on trick sequences such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\t\r\n\t\t// sort morph target names into animation groups based patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = parts[ 1 ];\r\n\t\r\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\tif ( ! animationMorphTargets ) {\r\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar clips = [];\r\n\t\r\n\t\tfor ( var name in animationToMorphTargets ) {\r\n\t\r\n\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps ) );\r\n\t\t}\r\n\t\r\n\t\treturn clips;\r\n\t\r\n\t};\r\n\t\r\n\t// parse the standard JSON format for clips\r\n\tTHREE.AnimationClip.parse = function( json ) {\r\n\t\r\n\t\tvar tracks = [];\r\n\t\r\n\t\tfor ( var i = 0; i < json.tracks.length; i ++ ) {\r\n\t\r\n\t\t\ttracks.push( THREE.KeyframeTrack.parse( json.tracks[i] ).scale( 1.0 / json.fps ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// parse the animation.hierarchy format\r\n\tTHREE.AnimationClip.parseAnimation = function( animation, bones, nodeName ) {\r\n\t\r\n\t\tif ( ! animation ) {\r\n\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\r\n\t\tvar convertTrack = function( trackName, animationKeys, propertyName, trackType, animationKeyToValueFunc ) {\r\n\t\r\n\t\t\tvar keys = [];\r\n\t\r\n\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\t\r\n\t\t\t\tvar animationKey = animationKeys[k];\r\n\t\r\n\t\t\t\tif ( animationKey[propertyName] !== undefined ) {\r\n\t\r\n\t\t\t\t\tkeys.push( { time: animationKey.time, value: animationKeyToValueFunc( animationKey ) } );\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// only return track if there are actually keys.\r\n\t\t\tif ( keys.length > 0 ) {\r\n\t\r\n\t\t\t\treturn new trackType( trackName, keys );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar tracks = [];\r\n\t\r\n\t\tvar clipName = animation.name || 'default';\r\n\t\tvar duration = animation.length || -1; // automatic length determination in AnimationClip.\r\n\t\tvar fps = animation.fps || 30;\r\n\t\r\n\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\t\r\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\t\r\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\t\r\n\t\t\t// skip empty tracks\r\n\t\t\tif ( ! animationKeys || animationKeys.length == 0 ) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\r\n\t\t\t// process morph targets in a way exactly compatible with AnimationHandler.init( animation )\r\n\t\t\tif ( animationKeys[0].morphTargets ) {\r\n\t\r\n\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\tvar morphTargetNames = {};\r\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// create a track for each morph target with all zero morphTargetInfluences except for the keys in which the morphTarget is named.\r\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\t\r\n\t\t\t\t\tvar keys = [];\r\n\t\r\n\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\t\r\n\t\t\t\t\t\tkeys.push( {\r\n\t\t\t\t\t\t\t\ttime: animationKey.time,\r\n\t\t\t\t\t\t\t\tvalue: (( animationKey.morphTarget === morphTargetName ) ? 1 : 0 )\r\n\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack( nodeName + '.morphTargetInfluence[' + morphTargetName + ']', keys ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar boneName = nodeName + '.bones[' + bones[ h ].name + ']';\r\n\t\r\n\t\t\t\t// track contains positions...\r\n\t\t\t\tvar positionTrack = convertTrack( boneName + '.position', animationKeys, 'pos', THREE.VectorKeyframeTrack, function( animationKey ) {\r\n\t\t\t\t\t\treturn new THREE.Vector3().fromArray( animationKey.pos )\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\tif ( positionTrack ) tracks.push( positionTrack );\r\n\t\r\n\t\t\t\t// track contains quaternions...\r\n\t\t\t\tvar quaternionTrack = convertTrack( boneName + '.quaternion', animationKeys, 'rot', THREE.QuaternionKeyframeTrack, function( animationKey ) {\r\n\t\t\t\t\t\tif ( animationKey.rot.slerp ) {\r\n\t\t\t\t\t\t\treturn animationKey.rot.clone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn new THREE.Quaternion().fromArray( animationKey.rot );\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\tif ( quaternionTrack ) tracks.push( quaternionTrack );\r\n\t\r\n\t\t\t\t// track contains quaternions...\r\n\t\t\t\tvar scaleTrack = convertTrack( boneName + '.scale', animationKeys, 'scl', THREE.VectorKeyframeTrack, function( animationKey ) {\r\n\t\t\t\t\t\treturn new THREE.Vector3().fromArray( animationKey.scl )\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\tif ( scaleTrack ) tracks.push( scaleTrack );\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tif ( tracks.length === 0 ) {\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\r\n\t\r\n\t\treturn clip;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/AnimationMixer.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * Mixes together the AnimationClips scheduled by AnimationActions and applies them to the root and subtree\r\n\t *\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.AnimationMixer = function( root ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.time = 0;\r\n\t\tthis.timeScale = 1.0;\r\n\t\tthis.actions = [];\r\n\t\tthis.propertyBindingMap = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AnimationMixer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.AnimationMixer,\r\n\t\r\n\t\taddAction: function( action ) {\r\n\t\r\n\t\t\t// TODO: check for duplicate action names?  Or provide each action with a UUID?\r\n\t\r\n\t\t\tthis.actions.push( action );\r\n\t\t\taction.init( this.time );\r\n\t\t\taction.mixer = this;\r\n\t\r\n\t\t\tvar tracks = action.clip.tracks;\r\n\t\r\n\t\t\tvar root = action.localRoot || this.root;\r\n\t\r\n\t\t\tfor ( var i = 0; i < tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar track = tracks[ i ];\r\n\t\r\n\t\t\t\tvar propertyBindingKey = root.uuid + '-' + track.name;\r\n\t\t\t\tvar propertyBinding = this.propertyBindingMap[ propertyBindingKey ];\r\n\t\r\n\t\t\t\tif ( propertyBinding === undefined ) {\r\n\t\r\n\t\t\t\t\tpropertyBinding = new THREE.PropertyBinding( root, track.name );\r\n\t\t\t\t\tthis.propertyBindingMap[ propertyBindingKey ] = propertyBinding;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// push in the same order as the tracks.\r\n\t\t\t\taction.propertyBindings.push( propertyBinding );\r\n\t\r\n\t\t\t\t// track usages of shared property bindings, because if we leave too many around, the mixer can get slow\r\n\t\t\t\tpropertyBinding.referenceCount += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAllActions: function() {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.actions.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.actions[i].mixer = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// unbind all property bindings\r\n\t\t\tfor ( var properyBindingKey in this.propertyBindingMap ) {\r\n\t\r\n\t\t\t\tthis.propertyBindingMap[ properyBindingKey ].unbind();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.actions = [];\r\n\t\t\tthis.propertyBindingMap = {};\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAction: function( action ) {\r\n\t\r\n\t\t\tvar index = this.actions.indexOf( action );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.actions.splice( index, 1 );\r\n\t\t\t\taction.mixer = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// remove unused property bindings because if we leave them around the mixer can get slow\r\n\t\t\tvar root = action.localRoot || this.root;\r\n\t\t\tvar tracks = action.clip.tracks;\r\n\t\r\n\t\t\tfor ( var i = 0; i < tracks.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar track = tracks[ i ];\r\n\t\r\n\t\t\t\tvar propertyBindingKey = root.uuid + '-' + track.name;\r\n\t\t\t\tvar propertyBinding = this.propertyBindingMap[ propertyBindingKey ];\r\n\t\r\n\t\t\t\tpropertyBinding.referenceCount -= 1;\r\n\t\r\n\t\t\t\tif ( propertyBinding.referenceCount <= 0 ) {\r\n\t\r\n\t\t\t\t\tpropertyBinding.unbind();\r\n\t\r\n\t\t\t\t\tdelete this.propertyBindingMap[ propertyBindingKey ];\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// can be optimized if needed\r\n\t\tfindActionByName: function( name ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.actions.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( this.actions[i].name === name ) return this.actions[i];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function( action, optionalFadeInDuration ) {\r\n\t\r\n\t\t\taction.startTime = this.time;\r\n\t\t\tthis.addAction( action );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfadeOut: function( action, duration ) {\r\n\t\r\n\t\t\tvar keys = [];\r\n\t\r\n\t\t\tkeys.push( { time: this.time, value: 1 } );\r\n\t\t\tkeys.push( { time: this.time + duration, value: 0 } );\r\n\t\r\n\t\t\taction.weight = new THREE.NumberKeyframeTrack( \"weight\", keys );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfadeIn: function( action, duration ) {\r\n\t\r\n\t\t\tvar keys = [];\r\n\t\r\n\t\t\tkeys.push( { time: this.time, value: 0 } );\r\n\t\t\tkeys.push( { time: this.time + duration, value: 1 } );\r\n\t\r\n\t\t\taction.weight = new THREE.NumberKeyframeTrack( \"weight\", keys );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\twarp: function( action, startTimeScale, endTimeScale, duration ) {\r\n\t\r\n\t\t\tvar keys = [];\r\n\t\r\n\t\t\tkeys.push( { time: this.time, value: startTimeScale } );\r\n\t\t\tkeys.push( { time: this.time + duration, value: endTimeScale } );\r\n\t\r\n\t\t\taction.timeScale = new THREE.NumberKeyframeTrack( \"timeScale\", keys );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossFade: function( fadeOutAction, fadeInAction, duration, warp ) {\r\n\t\r\n\t\t\tthis.fadeOut( fadeOutAction, duration );\r\n\t\t\tthis.fadeIn( fadeInAction, duration );\r\n\t\r\n\t\t\tif ( warp ) {\r\n\t\r\n\t\t\t\tvar startEndRatio = fadeOutAction.clip.duration / fadeInAction.clip.duration;\r\n\t\t\t\tvar endStartRatio = 1.0 / startEndRatio;\r\n\t\r\n\t\t\t\tthis.warp( fadeOutAction, 1.0, startEndRatio, duration );\r\n\t\t\t\tthis.warp( fadeInAction, endStartRatio, 1.0, duration );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function( deltaTime ) {\r\n\t\r\n\t\t\tvar mixerDeltaTime = deltaTime * this.timeScale;\r\n\t\t\tthis.time += mixerDeltaTime;\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.actions.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar action = this.actions[i];\r\n\t\r\n\t\t\t\tvar weight = action.getWeightAt( this.time );\r\n\t\r\n\t\t\t\tvar actionTimeScale = action.getTimeScaleAt( this.time );\r\n\t\t\t\tvar actionDeltaTime = mixerDeltaTime * actionTimeScale;\r\n\t\r\n\t\t\t\tvar actionResults = action.update( actionDeltaTime );\r\n\t\r\n\t\t\t\tif ( action.weight <= 0 || ! action.enabled ) continue;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < actionResults.length; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar name = action.clip.tracks[j].name;\r\n\t\r\n\t\t\t\t\taction.propertyBindings[ j ].accumulate( actionResults[j], weight );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// apply to nodes\r\n\t\t\tfor ( var propertyBindingKey in this.propertyBindingMap ) {\r\n\t\r\n\t\t\t\tthis.propertyBindingMap[ propertyBindingKey ].apply();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.AnimationMixer.prototype );\r\n\t\r\n\t// File:src/animation/AnimationUtils.js\r\n\t\r\n\t/**\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.AnimationUtils = {\r\n\t\r\n\t\tgetEqualsFunc: function( exemplarValue ) {\r\n\t\r\n\t\t\tif ( exemplarValue.equals ) {\r\n\t\t\t\treturn function equals_object( a, b ) {\r\n\t\t\t\t\treturn a.equals( b );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function equals_primitive( a, b ) {\r\n\t\t\t\treturn ( a === b );\r\n\t\t\t};\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function( exemplarValue ) {\r\n\t\r\n\t\t\tvar typeName = typeof exemplarValue;\r\n\t\t\tif ( typeName === \"object\" ) {\r\n\t\t\t\tif ( exemplarValue.clone ) {\r\n\t\t\t\t\treturn exemplarValue.clone();\r\n\t\t\t\t}\r\n\t\t\t\tconsole.error( \"can not figure out how to copy exemplarValue\", exemplarValue );\r\n\t\t\t}\r\n\t\r\n\t\t\treturn exemplarValue;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function( a, b, alpha, interTrack ) {\r\n\t\r\n\t\t\tvar lerpFunc = THREE.AnimationUtils.getLerpFunc( a, interTrack );\r\n\t\r\n\t\t\treturn lerpFunc( a, b, alpha );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp_object: function( a, b, alpha ) {\r\n\t\t\treturn a.lerp( b, alpha );\r\n\t\t},\r\n\t\r\n\t\tslerp_object: function( a, b, alpha ) {\r\n\t\t\treturn a.slerp( b, alpha );\r\n\t\t},\r\n\t\r\n\t\tlerp_number: function( a, b, alpha ) {\r\n\t\t\treturn a * ( 1 - alpha ) + b * alpha;\r\n\t\t},\r\n\t\r\n\t\tlerp_boolean: function( a, b, alpha ) {\r\n\t\t\treturn ( alpha < 0.5 ) ? a : b;\r\n\t\t},\r\n\t\r\n\t\tlerp_boolean_immediate: function( a, b, alpha ) {\r\n\t\t\treturn a;\r\n\t\t},\r\n\t\r\n\t\tlerp_string: function( a, b, alpha ) {\r\n\t\t\treturn ( alpha < 0.5 ) ? a : b;\r\n\t\t},\r\n\t\r\n\t\tlerp_string_immediate: function( a, b, alpha ) {\r\n\t \t\treturn a;\r\n\t \t},\r\n\t\r\n\t\t// NOTE: this is an accumulator function that modifies the first argument (e.g. a).\tThis is to minimize memory alocations.\r\n\t\tgetLerpFunc: function( exemplarValue, interTrack ) {\r\n\t\r\n\t\t\tif ( exemplarValue === undefined || exemplarValue === null ) throw new Error( \"examplarValue is null\" );\r\n\t\r\n\t\t\tvar typeName = typeof exemplarValue;\r\n\t\r\n\t\t\tswitch( typeName ) {\r\n\t\r\n\t\t\t\tcase \"object\":\r\n\t\t\t\t\tif ( exemplarValue.lerp ) {\r\n\t\t\t\t\t\treturn THREE.AnimationUtils.lerp_object;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( exemplarValue.slerp ) {\r\n\t\t\t\t\t\treturn THREE.AnimationUtils.slerp_object;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase \"number\":\r\n\t\t\t\t\treturn THREE.AnimationUtils.lerp_number;\r\n\t\r\n\t\t\t\tcase \"boolean\":\r\n\t\t\t\t\tif ( interTrack ) {\r\n\t\t\t\t\t\treturn THREE.AnimationUtils.lerp_boolean;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn THREE.AnimationUtils.lerp_boolean_immediate;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\tcase \"string\":\r\n\t\t\t\t\tif ( interTrack ) {\r\n\t\t\t\t\t\treturn THREE.AnimationUtils.lerp_string;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn THREE.AnimationUtils.lerp_string_immediate;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/KeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that returns a keyframe interpolated value, currently linearly interpolated\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.KeyframeTrack = function ( name, keys ) {\r\n\t\r\n\t\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\t\tif ( keys === undefined || keys.length === 0 ) throw new Error( \"no keys in track named \" + name );\r\n\t\r\n\t\tthis.name = name;\r\n\t\tthis.keys = keys;\t// time in seconds, value as value\r\n\t\r\n\t\t// the index of the last result, used as a starting point for local search.\r\n\t\tthis.lastIndex = 0;\r\n\t\r\n\t\tthis.validate();\r\n\t\tthis.optimize();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyframeTrack.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyframeTrack,\r\n\t\r\n\t\tgetAt: function( time ) {\r\n\t\r\n\t\r\n\t\t\t// this can not go higher than this.keys.length.\r\n\t\t\twhile( ( this.lastIndex < this.keys.length ) && ( time >= this.keys[this.lastIndex].time ) ) {\r\n\t\t\t\tthis.lastIndex ++;\r\n\t\t\t};\r\n\t\r\n\t\t\t// this can not go lower than 0.\r\n\t\t\twhile( ( this.lastIndex > 0 ) && ( time < this.keys[this.lastIndex - 1].time ) ) {\r\n\t\t\t\tthis.lastIndex --;\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.lastIndex >= this.keys.length ) {\r\n\t\r\n\t\t\t\tthis.setResult( this.keys[ this.keys.length - 1 ].value );\r\n\t\r\n\t\t\t\treturn this.result;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.lastIndex === 0 ) {\r\n\t\r\n\t\t\t\tthis.setResult( this.keys[ 0 ].value );\r\n\t\r\n\t\t\t\treturn this.result;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar prevKey = this.keys[ this.lastIndex - 1 ];\r\n\t\t\tthis.setResult( prevKey.value );\r\n\t\r\n\t\t\t// if true, means that prev/current keys are identical, thus no interpolation required.\r\n\t\t\tif ( prevKey.constantToNext ) {\r\n\t\r\n\t\t\t\treturn this.result;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// linear interpolation to start with\r\n\t\t\tvar currentKey = this.keys[ this.lastIndex ];\r\n\t\t\tvar alpha = ( time - prevKey.time ) / ( currentKey.time - prevKey.time );\r\n\t\t\tthis.result = this.lerpValues( this.result, currentKey.value, alpha );\r\n\t\r\n\t\t\treturn this.result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// move all keyframes either forwards or backwards in time\r\n\t\tshift: function( timeOffset ) {\r\n\t\r\n\t\t\tif ( timeOffset !== 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\t\t\t\tthis.keys[i].time += timeOffset;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\t\tscale: function( timeScale ) {\r\n\t\r\n\t\t\tif ( timeScale !== 1.0 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\t\t\t\tthis.keys[i].time *= timeScale;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\t \ttrim: function( startTime, endTime ) {\r\n\t\r\n\t\t\tvar firstKeysToRemove = 0;\r\n\t\t\tfor ( var i = 1; i < this.keys.length; i ++ ) {\r\n\t\t\t\tif ( this.keys[i] <= startTime ) {\r\n\t\t\t\t\tfirstKeysToRemove ++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\tvar lastKeysToRemove = 0;\r\n\t\t\tfor ( var i = this.keys.length - 2; i > 0; i ++ ) {\r\n\t\t\t\tif ( this.keys[i] >= endTime ) {\r\n\t\t\t\t\tlastKeysToRemove ++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove last keys first because it doesn't affect the position of the first keys (the otherway around doesn't work as easily)\r\n\t\t\tif ( ( firstKeysToRemove + lastKeysToRemove ) > 0 ) {\r\n\t\t\t\tthis.keys = this.keys.splice( firstKeysToRemove, this.keys.length - lastKeysToRemove - firstKeysToRemove );;\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* NOTE: This is commented out because we really shouldn't have to handle unsorted key lists\r\n\t\t         Tracks with out of order keys should be considered to be invalid.  - bhouston\r\n\t\tsort: function() {\r\n\t\r\n\t\t\tthis.keys.sort( THREE.KeyframeTrack.keyComparer );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},*/\r\n\t\r\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t\t// One could eventually ensure that all key.values in a track are all of the same type (otherwise interpolation makes no sense.)\r\n\t\tvalidate: function() {\r\n\t\r\n\t\t\tvar prevKey = null;\r\n\t\r\n\t\t\tif ( this.keys.length === 0 ) {\r\n\t\t\t\tconsole.error( \"  track is empty, no keys\", this );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar currKey = this.keys[i];\r\n\t\r\n\t\t\t\tif ( ! currKey ) {\r\n\t\t\t\t\tconsole.error( \"  key is null in track\", this, i );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ( typeof currKey.time ) !== 'number' || isNaN( currKey.time ) ) {\r\n\t\t\t\t\tconsole.error( \"  key.time is not a valid number\", this, i, currKey );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currKey.value === undefined || currKey.value === null) {\r\n\t\t\t\t\tconsole.error( \"  key.value is null in track\", this, i, currKey );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( prevKey && prevKey.time > currKey.time ) {\r\n\t\t\t\t\tconsole.error( \"  key.time is less than previous key time, out of order keys\", this, i, currKey, prevKey );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprevKey = currKey;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// currently only removes equivalent sequential keys (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0), which are common in morph target animations\r\n\t\toptimize: function() {\r\n\t\r\n\t\t\tvar newKeys = [];\r\n\t\t\tvar prevKey = this.keys[0];\r\n\t\t\tnewKeys.push( prevKey );\r\n\t\r\n\t\t\tvar equalsFunc = THREE.AnimationUtils.getEqualsFunc( prevKey.value );\r\n\t\r\n\t\t\tfor ( var i = 1; i < this.keys.length - 1; i ++ ) {\r\n\t\t\t\tvar currKey = this.keys[i];\r\n\t\t\t\tvar nextKey = this.keys[i+1];\r\n\t\r\n\t\t\t\t// if prevKey & currKey are the same time, remove currKey.  If you want immediate adjacent keys, use an epsilon offset\r\n\t\t\t\t// it is not possible to have two keys at the same time as we sort them.  The sort is not stable on keys with the same time.\r\n\t\t\t\tif ( ( prevKey.time === currKey.time ) ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// remove completely unnecessary keyframes that are the same as their prev and next keys\r\n\t\t\t\tif ( this.compareValues( prevKey.value, currKey.value ) && this.compareValues( currKey.value, nextKey.value ) ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// determine if interpolation is required\r\n\t\t\t\tprevKey.constantToNext = this.compareValues( prevKey.value, currKey.value );\r\n\t\r\n\t\t\t\tnewKeys.push( currKey );\r\n\t\t\t\tprevKey = currKey;\r\n\t\t\t}\r\n\t\t\tnewKeys.push( this.keys[ this.keys.length - 1 ] );\r\n\t\r\n\t\t\tthis.keys = newKeys;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyframeTrack.keyComparer = function keyComparator(key0, key1) {\r\n\t\treturn key0.time - key1.time;\r\n\t};\r\n\t\r\n\tTHREE.KeyframeTrack.parse = function( json ) {\r\n\t\r\n\t\tif ( json.type === undefined ) throw new Error( \"track type undefined, can not parse\" );\r\n\t\r\n\t\tvar trackType = THREE.KeyframeTrack.GetTrackTypeForTypeName( json.type );\r\n\t\r\n\t\treturn trackType.parse( json );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyframeTrack.GetTrackTypeForTypeName = function( typeName ) {\r\n\t\tswitch( typeName.toLowerCase() ) {\r\n\t\t \tcase \"vector\":\r\n\t\t \tcase \"vector2\":\r\n\t\t \tcase \"vector3\":\r\n\t\t \tcase \"vector4\":\r\n\t\t\t\treturn THREE.VectorKeyframeTrack;\r\n\t\r\n\t\t \tcase \"quaternion\":\r\n\t\t\t\treturn THREE.QuaternionKeyframeTrack;\r\n\t\r\n\t\t \tcase \"integer\":\r\n\t\t \tcase \"scalar\":\r\n\t\t \tcase \"double\":\r\n\t\t \tcase \"float\":\r\n\t\t \tcase \"number\":\r\n\t\t\t\treturn THREE.NumberKeyframeTrack;\r\n\t\r\n\t\t \tcase \"bool\":\r\n\t\t \tcase \"boolean\":\r\n\t\t\t\treturn THREE.BooleanKeyframeTrack;\r\n\t\r\n\t\t \tcase \"string\":\r\n\t\t \t\treturn THREE.StringKeyframeTrack;\r\n\t\t};\r\n\t\r\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n\t};\r\n\t\r\n\t// File:src/animation/PropertyBinding.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A track bound to a real value in the scene graph.\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.PropertyBinding = function ( rootNode, trackName ) {\r\n\t\r\n\t\tthis.rootNode = rootNode;\r\n\t\tthis.trackName = trackName;\r\n\t\tthis.referenceCount = 0;\r\n\t\tthis.originalValue = null; // the value of the property before it was controlled by this binding\r\n\t\r\n\t\tvar parseResults = THREE.PropertyBinding.parseTrackName( trackName );\r\n\t\r\n\t\tthis.directoryName = parseResults.directoryName;\r\n\t\tthis.nodeName = parseResults.nodeName;\r\n\t\tthis.objectName = parseResults.objectName;\r\n\t\tthis.objectIndex = parseResults.objectIndex;\r\n\t\tthis.propertyName = parseResults.propertyName;\r\n\t\tthis.propertyIndex = parseResults.propertyIndex;\r\n\t\r\n\t\tthis.node = THREE.PropertyBinding.findNode( rootNode, this.nodeName ) || rootNode;\r\n\t\r\n\t\tthis.cumulativeValue = null;\r\n\t\tthis.cumulativeWeight = 0;\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.prototype = {\r\n\t\r\n\t\tconstructor: THREE.PropertyBinding,\r\n\t\r\n\t\treset: function() {\r\n\t\r\n\t\t\tthis.cumulativeValue = null;\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taccumulate: function( value, weight ) {\r\n\t\r\n\t\t\tif ( ! this.isBound ) this.bind();\r\n\t\r\n\t\t\tif ( this.cumulativeWeight === 0 ) {\r\n\t\r\n\t\t\t\tif ( weight > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.cumulativeValue === null ) {\r\n\t\t\t\t\t\tthis.cumulativeValue = THREE.AnimationUtils.clone( value );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.cumulativeWeight = weight;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar lerpAlpha = weight / ( this.cumulativeWeight + weight );\r\n\t\t\t\tthis.cumulativeValue = this.lerpValue( this.cumulativeValue, value, lerpAlpha );\r\n\t\t\t\tthis.cumulativeWeight += weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunbind: function() {\r\n\t\r\n\t\t\tif ( ! this.isBound ) return;\r\n\t\r\n\t\t\tthis.setValue( this.originalValue );\r\n\t\r\n\t\t\tthis.setValue = null;\r\n\t\t\tthis.getValue = null;\r\n\t\t\tthis.lerpValue = null;\r\n\t\t\tthis.equalsValue = null;\r\n\t\t\tthis.triggerDirty = null;\r\n\t\t\tthis.isBound = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// bind to the real property in the scene graph, remember original value, memorize various accessors for speed/inefficiency\r\n\t\tbind: function() {\r\n\t\r\n\t\t\tif ( this.isBound ) return;\r\n\t\r\n\t\t\tvar targetObject = this.node;\r\n\t\r\n\t \t\t// ensure there is a value node\r\n\t\t\tif ( ! targetObject ) {\r\n\t\t\t\tconsole.error( \"  trying to update node for track: \" + this.trackName + \" but it wasn't found.\" );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.objectName ) {\r\n\t\t\t\t// special case were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\t\tif ( this.objectName === \"materials\" ) {\r\n\t\t\t\t\tif ( ! targetObject.material ) {\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\t\t\t\t} else if ( this.objectName === \"bones\" ) {\r\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\t\r\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\t\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\t\t\t\t\t\tif ( targetObject[i].name === this.objectIndex ) {\r\n\t\t\t\t\t\t\tthis.objectIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( targetObject[ this.objectName ] === undefined ) {\r\n\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttargetObject = targetObject[ this.objectName ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.objectIndex !== undefined ) {\r\n\t\t\t\t\tif ( targetObject[ this.objectIndex ] === undefined ) {\r\n\t\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttargetObject = targetObject[ this.objectIndex ];\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t \t\t// special case mappings\r\n\t \t\tvar nodeProperty = targetObject[ this.propertyName ];\r\n\t\t\tif ( ! nodeProperty ) {\r\n\t\t\t\tconsole.error( \"  trying to update property for track: \" + this.nodeName + '.' + this.propertyName + \" but it wasn't found.\", targetObject );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\r\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\t\t\tif ( this.propertyIndex !== undefined ) {\r\n\t\r\n\t\t\t\tif ( this.propertyName === \"morphTargetInfluences\" ) {\r\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\t\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tif ( ! targetObject.geometry ) {\r\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\t\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === this.propertyIndex ) {\r\n\t\t\t\t\t\t\tthis.propertyIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.setValue = function setValue_propertyIndexed( value ) {\r\n\t\t\t\t\tif ( ! this.equalsValue( nodeProperty[ this.propertyIndex ], value ) ) {\r\n\t\t\t\t\t\tnodeProperty[ this.propertyIndex ] = value;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tthis.getValue = function getValue_propertyIndexed() {\r\n\t\t\t\t\treturn nodeProperty[ this.propertyIndex ];\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\t\t\telse if ( nodeProperty.copy ) {\r\n\t\r\n\t\t\t\tthis.setValue = function setValue_propertyObject( value ) {\r\n\t\t\t\t\tif ( ! this.equalsValue( nodeProperty, value ) ) {\r\n\t\t\t\t\t\tnodeProperty.copy( value );\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.getValue = function getValue_propertyObject() {\r\n\t\t\t\t\treturn nodeProperty;\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\t\t// otherwise just set the property directly on the node (do not use nodeProperty as it may not be a reference object)\r\n\t\t\telse {\r\n\t\r\n\t\t\t\tthis.setValue = function setValue_property( value ) {\r\n\t\t\t\t\tif ( ! this.equalsValue( targetObject[ this.propertyName ], value ) ) {\r\n\t\t\t\t\t\ttargetObject[ this.propertyName ] = value;\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.getValue = function getValue_property() {\r\n\t\t\t\t\treturn targetObject[ this.propertyName ];\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// trigger node dirty\r\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\t\r\n\t\t\t\tthis.triggerDirty = function triggerDirty_needsUpdate() {\r\n\t\t\t\t\tthis.node.needsUpdate = true;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\t\r\n\t\t\t\tthis.triggerDirty = function triggerDirty_matrixWorldNeedsUpdate() {\r\n\t\t\t\t\ttargetObject.matrixWorldNeedsUpdate = true;\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.originalValue = this.getValue();\r\n\t\r\n\t\t\tthis.equalsValue = THREE.AnimationUtils.getEqualsFunc( this.originalValue );\r\n\t\t\tthis.lerpValue = THREE.AnimationUtils.getLerpFunc( this.originalValue, true );\r\n\t\r\n\t\t\tthis.isBound = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapply: function() {\r\n\t\r\n\t\t\t// for speed capture the setter pattern as a closure (sort of a memoization pattern: https://en.wikipedia.org/wiki/Memoization)\r\n\t\t\tif ( ! this.isBound ) this.bind();\r\n\t\r\n\t\t\t// early exit if there is nothing to apply.\r\n\t\t\tif ( this.cumulativeWeight > 0 ) {\r\n\t\r\n\t\t\t\t// blend with original value\r\n\t\t\t\tif ( this.cumulativeWeight < 1 ) {\r\n\t\r\n\t\t\t\t\tvar remainingWeight = 1 - this.cumulativeWeight;\r\n\t\t\t\t\tvar lerpAlpha = remainingWeight / ( this.cumulativeWeight + remainingWeight );\r\n\t\t\t\t\tthis.cumulativeValue = this.lerpValue( this.cumulativeValue, this.originalValue, lerpAlpha );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar valueChanged = this.setValue( this.cumulativeValue );\r\n\t\r\n\t\t\t\tif ( valueChanged && this.triggerDirty ) {\r\n\t\t\t\t\tthis.triggerDirty();\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// reset accumulator\r\n\t\t\t\tthis.cumulativeValue = null;\r\n\t\t\t\tthis.cumulativeWeight = 0;\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PropertyBinding.parseTrackName = function( trackName ) {\r\n\t\r\n\t\t// matches strings in the form of:\r\n\t\t//    nodeName.property\r\n\t\t//    nodeName.property[accessor]\r\n\t\t//    nodeName.material.property[accessor]\r\n\t\t//    uuid.property[accessor]\r\n\t\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n\t\t//    parentName/nodeName.property\r\n\t\t//    parentName/parentName/nodeName.property[index]\r\n\t\t//\t  .bone[Armature.DEF_cog].position\r\n\t\t// created and tested via https://regex101.com/#javascript\r\n\t\r\n\t\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\r\n\t\tvar matches = re.exec(trackName);\r\n\t\r\n\t\tif ( ! matches ) {\r\n\t\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\t\t}\r\n\t\r\n\t    if (matches.index === re.lastIndex) {\r\n\t        re.lastIndex++;\r\n\t    }\r\n\t\r\n\t\tvar results = {\r\n\t\t\tdirectoryName: matches[1],\r\n\t\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\r\n\t\t\tobjectName: matches[5],\r\n\t\t\tobjectIndex: matches[7],\r\n\t\t\tpropertyName: matches[9],\r\n\t\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\r\n\t\t};\r\n\t\r\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\t\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\t\t}\r\n\t\r\n\t\treturn results;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PropertyBinding.findNode = function( root, nodeName ) {\r\n\t\r\n\t\tfunction searchSkeleton( skeleton ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar bone = skeleton.bones[i];\r\n\t\r\n\t\t\t\tif ( bone.name === nodeName ) {\r\n\t\r\n\t\t\t\t\treturn bone;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction searchNodeSubtree( children ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar childNode = children[i];\r\n\t\r\n\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\t\r\n\t\t\t\t\treturn childNode;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\t\r\n\t\t\t\tif ( result ) return result;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\t\r\n\t\t\treturn root;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// search into skeleton bones.\r\n\t\tif ( root.skeleton ) {\r\n\t\r\n\t\t\tvar bone = searchSkeleton( root.skeleton );\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\treturn bone;\r\n\t\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// search into node subtree.\r\n\t\tif ( root.children ) {\r\n\t\r\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\t\r\n\t\t\tif ( subTreeNode ) {\r\n\t\r\n\t\t\t\treturn subTreeNode;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t// File:src/animation/tracks/VectorKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Vectors\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.VectorKeyframeTrack = function ( name, keys ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\t\r\n\t\t// local cache of value type to avoid allocations during runtime.\r\n\t\tthis.result = this.keys[0].value.clone();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VectorKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\t\r\n\tTHREE.VectorKeyframeTrack.prototype.constructor = THREE.VectorKeyframeTrack;\r\n\t\r\n\tTHREE.VectorKeyframeTrack.prototype.setResult = function( value ) {\r\n\t\r\n\t\tthis.result.copy( value );\r\n\t\r\n\t};\r\n\t\r\n\t// memoization of the lerp function for speed.\r\n\t// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\n\tTHREE.VectorKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\t\r\n\t\treturn value0.lerp( value1, alpha );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VectorKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\t\r\n\t\treturn value0.equals( value1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VectorKeyframeTrack.prototype.clone = function() {\r\n\t\r\n\t\tvar clonedKeys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\tvar key = this.keys[i];\r\n\t\t\tclonedKeys.push( {\r\n\t\t\t\ttime: key.time,\r\n\t\t\t\tvalue: key.value.clone()\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.VectorKeyframeTrack( this.name, clonedKeys );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VectorKeyframeTrack.parse = function( json ) {\r\n\t\r\n\t\tvar elementCount = json.keys[0].value.length;\r\n\t\tvar valueType = THREE[ 'Vector' + elementCount ];\r\n\t\r\n\t\tvar keys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < json.keys.length; i ++ ) {\r\n\t\t\tvar jsonKey = json.keys[i];\r\n\t\t\tkeys.push( {\r\n\t\t\t\tvalue: new valueType().fromArray( jsonKey.value ),\r\n\t\t\t\ttime: jsonKey.time\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.VectorKeyframeTrack( json.name, keys );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/tracks/QuaternionKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Quaternion\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack = function ( name, keys ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\t\r\n\t\t// local cache of value type to avoid allocations during runtime.\r\n\t\tthis.result = this.keys[0].value.clone();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype.constructor = THREE.QuaternionKeyframeTrack;\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype.setResult = function( value ) {\r\n\t\r\n\t\tthis.result.copy( value );\r\n\t\r\n\t};\r\n\t\r\n\t// memoization of the lerp function for speed.\r\n\t// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\n\tTHREE.QuaternionKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\t\r\n\t\treturn value0.slerp( value1, alpha );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\t\r\n\t\treturn value0.equals( value1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype.multiply = function( quat ) {\r\n\t\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\tthis.keys[i].value.multiply( quat );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.prototype.clone = function() {\r\n\t\r\n\t\tvar clonedKeys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\tvar key = this.keys[i];\r\n\t\t\tclonedKeys.push( {\r\n\t\t\t\ttime: key.time,\r\n\t\t\t\tvalue: key.value.clone()\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.QuaternionKeyframeTrack( this.name, clonedKeys );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuaternionKeyframeTrack.parse = function( json ) {\r\n\t\r\n\t\tvar keys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < json.keys.length; i ++ ) {\r\n\t\t\tvar jsonKey = json.keys[i];\r\n\t\t\tkeys.push( {\r\n\t\t\t\tvalue: new THREE.Quaternion().fromArray( jsonKey.value ),\r\n\t\t\t\ttime: jsonKey.time\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.QuaternionKeyframeTrack( json.name, keys );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/tracks/StringKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Strings\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.StringKeyframeTrack = function ( name, keys ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\t\r\n\t\t// local cache of value type to avoid allocations during runtime.\r\n\t\tthis.result = this.keys[0].value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.StringKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\t\r\n\tTHREE.StringKeyframeTrack.prototype.constructor = THREE.StringKeyframeTrack;\r\n\t\r\n\tTHREE.StringKeyframeTrack.prototype.setResult = function( value ) {\r\n\t\r\n\t\tthis.result = value;\r\n\t\r\n\t};\r\n\t\r\n\t// memoization of the lerp function for speed.\r\n\t// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\n\tTHREE.StringKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\t\r\n\t\treturn ( alpha < 1.0 ) ? value0 : value1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.StringKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\t\r\n\t\treturn ( value0 === value1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.StringKeyframeTrack.prototype.clone = function() {\r\n\t\r\n\t\tvar clonedKeys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\tvar key = this.keys[i];\r\n\t\t\tclonedKeys.push( {\r\n\t\t\t\ttime: key.time,\r\n\t\t\t\tvalue: key.value\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.StringKeyframeTrack( this.name, clonedKeys );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.StringKeyframeTrack.parse = function( json ) {\r\n\t\r\n\t\treturn new THREE.StringKeyframeTrack( json.name, json.keys );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/tracks/BooleanKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Boolean\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.BooleanKeyframeTrack = function ( name, keys ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\t\r\n\t\t// local cache of value type to avoid allocations during runtime.\r\n\t\tthis.result = this.keys[0].value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.prototype.constructor = THREE.BooleanKeyframeTrack;\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.prototype.setResult = function( value ) {\r\n\t\r\n\t\tthis.result = value;\r\n\t\r\n\t};\r\n\t\r\n\t// memoization of the lerp function for speed.\r\n\t// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\n\tTHREE.BooleanKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\t\r\n\t\treturn ( alpha < 1.0 ) ? value0 : value1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\t\r\n\t\treturn ( value0 === value1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.prototype.clone = function() {\r\n\t\r\n\t\tvar clonedKeys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\tvar key = this.keys[i];\r\n\t\t\tclonedKeys.push( {\r\n\t\t\t\ttime: key.time,\r\n\t\t\t\tvalue: key.value\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.BooleanKeyframeTrack( this.name, clonedKeys );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BooleanKeyframeTrack.parse = function( json ) {\r\n\t\r\n\t\treturn new THREE.BooleanKeyframeTrack( json.name, json.keys );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/animation/tracks/NumberKeyframeTrack.js\r\n\t\r\n\t/**\r\n\t *\r\n\t * A Track that interpolates Numbers\r\n\t *\r\n\t * @author Ben Houston / http://clara.io/\r\n\t * @author David Sarno / http://lighthaus.us/\r\n\t */\r\n\t\r\n\tTHREE.NumberKeyframeTrack = function ( name, keys ) {\r\n\t\r\n\t\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\t\r\n\t\t// local cache of value type to avoid allocations during runtime.\r\n\t\tthis.result = this.keys[0].value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.NumberKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\t\r\n\tTHREE.NumberKeyframeTrack.prototype.constructor = THREE.NumberKeyframeTrack;\r\n\t\r\n\tTHREE.NumberKeyframeTrack.prototype.setResult = function( value ) {\r\n\t\r\n\t\tthis.result = value;\r\n\t\r\n\t};\r\n\t\r\n\t// memoization of the lerp function for speed.\r\n\t// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\n\tTHREE.NumberKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\t\r\n\t\treturn value0 * ( 1 - alpha ) + value1 * alpha;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.NumberKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\t\r\n\t\treturn ( value0 === value1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.NumberKeyframeTrack.prototype.clone = function() {\r\n\t\r\n\t\tvar clonedKeys = [];\r\n\t\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\r\n\t\t\tvar key = this.keys[i];\r\n\t\t\tclonedKeys.push( {\r\n\t\t\t\ttime: key.time,\r\n\t\t\t\tvalue: key.value\r\n\t\t\t} );\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.NumberKeyframeTrack( this.name, clonedKeys );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.NumberKeyframeTrack.parse = function( json ) {\r\n\t\r\n\t\treturn new THREE.NumberKeyframeTrack( json.name, json.keys );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.texture.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.receiveShadow = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tObject.defineProperties( THREE.Light.prototype, {\r\n\t\tonlyShadow: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFov: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.fov = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraLeft: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.left = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraRight: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.right = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraTop: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.top = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraBottom: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraNear: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.near = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraFar: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.camera.far = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowCameraVisible: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.' );\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowBias: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.bias = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowDarkness: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.darkness = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapWidth: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapHeight: {\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\t\r\n\t\tif ( this.intensity !== undefined ) data.object.intensity = this.intensity;\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.exponent !== undefined ) data.object.exponent = this.exponent;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/LightShadow.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LightShadow = function ( camera ) {\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\r\n\t\tthis.bias = 0;\r\n\t\tthis.darkness = 1;\r\n\t\r\n\t\tthis.mapSize = new THREE.Vector2( 512, 512 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\tthis.matrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LightShadow.prototype = {\r\n\t\r\n\t\tconstructor: THREE.LightShadow,\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.camera = source.camera.clone();\r\n\t\r\n\t\t\tthis.bias = source.bias;\r\n\t\t\tthis.darkness = source.darkness;\r\n\t\r\n\t\t\tthis.mapSize.copy( source.mapSize );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t\tthis.castShadow = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.shadow = new THREE.LightShadow( new THREE.OrthographicCamera( - 500, 500, 500, - 500, 50, 5000 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.shadow = source.shadow.clone();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.castShadow = undefined;\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 1, 500 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.shadow = source.shadow.clone();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 50, 1, 50, 5000 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.shadow = source.shadow.clone();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar color, textureLoader, materialLoader;\r\n\t\r\n\t\t\treturn function ( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tif ( color === undefined ) color = new THREE.Color();\r\n\t\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\r\n\t\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\r\n\t\r\n\t\t\t\t// convert from old material format\r\n\t\r\n\t\t\t\tvar textures = {};\r\n\t\r\n\t\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( repeat !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\r\n\t\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy !== undefined ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\t\t\t\ttextures[ uuid ] = texture;\r\n\t\r\n\t\t\t\t\treturn uuid;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar json = {\r\n\t\t\t\t\tuuid: THREE.Math.generateUUID(),\r\n\t\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var name in m ) {\r\n\t\r\n\t\t\t\t\tvar value = m[ name ];\r\n\t\r\n\t\t\t\t\tswitch ( name ) {\r\n\t\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\t\t\tjson.color = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\t\t// These were never supported\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\t\tjson.blending = THREE[ value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\t\tjson.side = THREE.BackSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\t\tjson.side = THREE.DoubleSide;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.error( 'Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\t\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\t\r\n\t\t\t\tmaterialLoader.setTextures( textures );\r\n\t\r\n\t\t\t\treturn materialLoader.parse( json );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tvar handlers = this.handlers;\r\n\t\r\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = handlers[ i ];\r\n\t\t\t\tvar loader  = handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tvar response = event.target.response;\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\t\tparseAnimations();\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\t\r\n\t\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction parseAnimations() {\r\n\t\r\n\t\t\t\tvar outputAnimations = [];\r\n\t\r\n\t\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\t\tvar animations = [];\r\n\t\t\t\tif ( json.animation !== undefined ) {\r\n\t\t\t\t\tanimations.push( json.animation );\r\n\t\t\t\t}\r\n\t\t\t\tif ( json.animations !== undefined ) {\r\n\t\t\t\t\tif ( json.animations.length ) {\r\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tanimations.push( json.animations );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[i], geometry.bones );\r\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// parse implicit morph animations\r\n\t\t\t\tif ( geometry.morphTargets ) {\r\n\t\r\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.animations ) {\r\n\t\r\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseAnimations: function ( json ) {\r\n\t\r\n\t\t\tvar animations = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar clip = THREE.AnimationClip.parse( json[i] );\r\n\t\r\n\t\t\t\tanimations.push( clip );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn animations;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tfunction getGeometry( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction getMaterial( name ) {\r\n\t\r\n\t\t\t\t\tif ( name === undefined ) return undefined;\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar texture = new THREE.Texture();\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CubeTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CubeTextureLoader,\r\n\t\r\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( [] );\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tfunction loadTexture( i ) {\r\n\t\r\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded ++;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tfunction update() {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ){\r\n\t\r\n\t\t\tvar intersect;\r\n\t\t\tvar material = object.material;\r\n\t\r\n\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( intersect === null ) return null;\r\n\t\r\n\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\tobject: object\r\n\t\t\t};\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\t\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\t\r\n\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\tif ( uvs ) {\r\n\t\r\n\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\r\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\r\n\t\t\t\tintersection.faceIndex = a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn intersection;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) return;\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) return;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar uvs, intersection;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar a, b, c;\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.uv !== undefined ){\r\n\t\r\n\t\t\t\t\tuvs = attributes.uv.array;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\t\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\t\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\tfvC = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\t\tvC.add( fvC );\r\n\t\r\n\t\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\t\tfvC = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\t\r\n\t\t\t\t\tif ( intersection ) {\r\n\t\r\n\t\t\t\t\t\tif ( uvs ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\t\r\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/hemilight_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'hemilight_fragment'] = \"#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalAmbientLight += lightColor;\\n\\n\t}\\n\\n#endif\\n\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"vec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normal_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normal_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\\n\\n\t\tfloat shadow = 0.0;\\n\\n#if defined( POINT_LIGHT_SHADOWS )\\n\\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\\n\\n\t\tif ( isPointLight ) {\\n\\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\\n\\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\\n\\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\t\tfloat dp = length( lightToPosition );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\\n\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tconst float Dr = 1.25;\\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tconst float Dr = 2.25;\\n\t#endif\\n\\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\\n\\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\\n\\n\t#else \\n\t\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\t\tfloat dp = length( lightToPosition );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\t\t\tshadow *= realShadowDarkness;\\n\\n\t#endif\\n\\n\t\t} else {\\n\\n#endif \\n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\\n\\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\t\tif ( frustumTest ) {\\n\\n\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\\n\t\t\t\t/*\\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\t\tshadow += 1.0;\\n\t\t\t\t\t}\\n\t\t\t\t\tshadow /= 9.0;\\n\t\t\t\t*/\\n\\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = texelSizeX;\\n\t\t\t\tfloat yPixelOffset = texelSizeY;\\n\\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tshadow *= shadowDarkness[ i ];\\n\\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t\tfloat xPixelOffset = texelSizeX;\\n\t\t\t\tfloat yPixelOffset = texelSizeY;\\n\\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\\n\\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\\n\\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\\n\\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\\n\\n\t#else \\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\tshadow = shadowDarkness[ i ];\\n\\n\t#endif\\n\\n\t\t\t}\\n\\n#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) {\\n\\n\t\t\t\tif ( i == 0 ) {\\n\\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\\n\\n\t\t\t\t} else if ( i == 1 ) {\\n\\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\\n\\n\t\t\t\t} else {\\n\\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\\n\\n\t\t\t\t}\\n\\n\t\t\t}\\n\\n#endif\\n\\n#if defined( POINT_LIGHT_SHADOWS )\\n\\n\t\t}\\n\\n#endif\\n\\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n\t#if defined(POINT_LIGHT_SHADOWS)\\n\\n\\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\\n\\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\\n\t\t\t\tshadowValue += 1.0;\\n\\n\t\t}\\n\\n\\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\n\\n\t\t\tvec3 absV = abs( v );\\n\\n\\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\t\tabsV *= scaleToCube;\\n\\n\\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\n\\n\\n\t\t\tvec2 planar = v.xy;\\n\\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\t\tfloat almostOne = 1.0 - almostATexel;\\n\\n\t\t\tif ( absV.z >= almostOne ) {\\n\\n\t\t\t\tif ( v.z > 0.0 )\\n\t\t\t\t\tplanar.x = 4.0 - v.x;\\n\\n\t\t\t} else if ( absV.x >= almostOne ) {\\n\\n\t\t\t\tfloat signX = sign( v.x );\\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\\n\t\t\t} else if ( absV.y >= almostOne ) {\\n\\n\t\t\t\tfloat signY = sign( v.y );\\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\t\tplanar.y = v.z * signY - 2.0;\\n\\n\t\t\t}\\n\\n\\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform vec3 ambientLightColor;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"normal_phong_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"hemilight_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\t\"totalDiffuseLight *= shadowMask;\",\r\n\t\t\t\t\t\"totalSpecularLight *= shadowMask;\",\r\n\t\r\n\t\t\t\t\t\"#ifdef METAL\",\r\n\t\r\n\t\t\t\t\t\"\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\",\r\n\t\r\n\t\t\t\t\t\"#else\",\r\n\t\r\n\t\t\t\t\t\"\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\",\r\n\t\r\n\t\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * shadowMask;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\t'distanceRGBA': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3( 0, 0, 0 ) }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec4 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\r\n\t\t\t\t\t\"vWorldPosition = worldPosition;\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 lightPos;\",\r\n\t\t\t\t\"varying vec4 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack1K ( float depth ) {\",\r\n\t\r\n\t\t\t\t\"   depth /= 1000.0;\",\r\n\t\t\t\t\"   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t  \t\t\t\"\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t   \t\t\t\"\tvec4 res = fract( depth * bitSh );\",\r\n\t   \t\t\t\"\tres -= res.xxyz * bitMsk;\",\r\n\t   \t\t\t\"\treturn res; \",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"float unpack1K ( vec4 color ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\r\n\t\t\t\t\"\treturn dot( color, bitSh ) * 1000.0;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main () {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = - 1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = - 1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getViewport = function ( dimensions ) {\r\n\t\r\n\t\t\tdimensions.x = _viewportX / pixelRatio;\r\n\t\t\tdimensions.y = _viewportY / pixelRatio;\r\n\t\r\n\t\t\tdimensions.z = _viewportWidth / pixelRatio;\r\n\t\t\tdimensions.w = _viewportHeight / pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\r\n\t\t\tif ( ! renderTarget || textureProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget.texture );\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar dataStart = 0;\r\n\t\t\tvar dataCount = Infinity;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tdataCount = index.count\r\n\t\r\n\t\t\t} else if ( position !== undefined ) {\r\n\t\r\n\t\t\t\tdataCount = position.count;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar rangeStart = geometry.drawRange.start;\r\n\t\t\tvar rangeCount = geometry.drawRange.count;\r\n\t\r\n\t\t\tvar groupStart = group !== null ? group.start : 0;\r\n\t\t\tvar groupCount = group !== null ? group.count : Infinity;\r\n\t\r\n\t\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\r\n\t\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\t\r\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( drawStart, drawCount );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = - 1;\r\n\t\t\ttransparentObjectsLastIndex = - 1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene, camera );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar texture = renderTarget.texture;\r\n\t\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\t\t\t\tif ( texture.generateMipmaps && isTargetPowerOfTwo && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\t updateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( ( object.channels.mask & camera.channels.mask ) !== 0 ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\t\r\n\t\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights, camera );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) uvScaleMap = uvScaleMap.texture;\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights, camera ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( light.castShadow === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( light instanceof THREE.PointLight || light instanceof THREE.SpotLight || light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\t\tvar shadow = light.shadow;\r\n\t\r\n\t\t\t\t\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t\t\t\t\t// equal to inverse of the light's position\r\n\t\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n\t\t\t\t\t\t\t\tshadow.matrix.identity().setPosition( _vector3 );\r\n\t\r\n\t\t\t\t\t\t\t\t// for point lights we set the sign of the shadowDarkness uniform to be negative\r\n\t\t\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = - shadow.darkness;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = shadow.darkness;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = shadow.matrix;\r\n\t\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = shadow.map;\r\n\t\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = shadow.mapSize;\r\n\t\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = shadow.bias;\r\n\t\r\n\t\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t\t ( texture.image instanceof Array && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false ) {\r\n\t\r\n\t\t\t\ttexture.image = makePowerOfTwo( texture.image );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = isPowerOfTwo( image ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPowerOfTwo( image ) {\r\n\t\r\n\t\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\t\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction makePowerOfTwo( image ) {\r\n\t\r\n\t\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\r\n\t\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = isPowerOfTwo( image ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.texture.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\t\r\n\t\t\tif ( framebuffer ) {\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttry {\r\n\t\r\n\t\t\t\t\tvar texture = renderTarget.texture;\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat\r\n\t\t\t\t\t\t&& paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.type !== THREE.UnsignedByteType\r\n\t\t\t\t\t\t&& paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE )\r\n\t\t\t\t\t\t&& ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) )\r\n\t\t\t\t\t\t&& ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} finally {\r\n\t\r\n\t\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\t\r\n\t\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\r\n\t\r\n\t\t\tstate.bindTexture( target, texture );\r\n\t\t\t_gl.generateMipmap( target );\r\n\t\t\tstate.bindTexture( target, null );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy );\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tget wrapS() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\r\n\t\t\treturn this.texture.wrapS;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapS( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\r\n\t\t\tthis.texture.wrapS = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapT() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\r\n\t\t\treturn this.texture.wrapT;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapT( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\r\n\t\t\tthis.texture.wrapT = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget magFilter() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\r\n\t\t\treturn this.texture.magFilter;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset magFilter( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\r\n\t\t\tthis.texture.magFilter = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget minFilter() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\r\n\t\t\treturn this.texture.minFilter;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset minFilter( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\r\n\t\t\tthis.texture.minFilter = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget anisotropy() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\r\n\t\t\treturn this.texture.anisotropy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset anisotropy( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\r\n\t\t\tthis.texture.anisotropy = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offset() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\r\n\t\t\treturn this.texture.offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset offset( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\r\n\t\t\tthis.texture.offset = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget repeat() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\r\n\t\t\treturn this.texture.repeat;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset repeat( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\r\n\t\t\tthis.texture.repeat = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget format() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\r\n\t\t\treturn this.texture.format;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset format( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\r\n\t\t\tthis.texture.format = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget type() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\r\n\t\t\treturn this.texture.type;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset type( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\r\n\t\t\tthis.texture.type = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget generateMipmaps() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\r\n\t\t\treturn this.texture.generateMipmaps;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset generateMipmaps( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\r\n\t\t\tthis.texture.generateMipmaps = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.texture = source.texture.clone();\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\", \"pointLightShadows\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\t\tvar pointLightShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tmaxShadows ++;\r\n\t\t\t\t\tpointLightShadows ++;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'maxShadows': maxShadows, 'pointLightShadows': pointLightShadows };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar allocatedShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: allocatedShadows.maxShadows,\r\n\t\t\t\tpointLightShadows: allocatedShadows.pointLightShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && allocatedShadows.maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tfunction addLineNumbers( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_lookTarget = new THREE.Vector3(),\r\n\t\t_lightPositionWorld = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [],\r\n\t\r\n\t\t_MorphingFlag = 1,\r\n\t\t_SkinningFlag = 2,\r\n\t\r\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\t\r\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants );\r\n\t\r\n\t\tvar cubeDirections = [\r\n\t\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\r\n\t\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\r\n\t\t];\r\n\t\r\n\t\tvar cubeUps = [\r\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\r\n\t\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\r\n\t\t];\r\n\t\r\n\t\tvar cube2DViewPorts = [\r\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\r\n\t\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\r\n\t\t];\r\n\t\r\n\t\tvar _vector4 = new THREE.Vector4();\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\r\n\t\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\r\n\t\r\n\t\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\t\r\n\t\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\t\r\n\t\t\tvar depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\t\tuniforms: depthUniforms,\r\n\t\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\t\t\t} );\r\n\t\r\n\t\t\tdepthMaterial._shadowPass = true;\r\n\t\r\n\t\t\t_depthMaterials[ i ] = depthMaterial;\r\n\t\r\n\t\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\r\n\t\t\t\tuniforms: distanceUniforms,\r\n\t\t\t\tvertexShader: distanceShader.vertexShader,\r\n\t\t\t\tfragmentShader: distanceShader.fragmentShader,\r\n\t\t\t\tmorphTargets: useMorphing,\r\n\t\t\t\tskinning: useSkinning\r\n\t\t\t} );\r\n\t\r\n\t\t\tdistanceMaterial._shadowPass = true;\r\n\t\r\n\t\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene ) {\r\n\t\r\n\t\t\tvar faceCount, isPointLight;\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// Set GL state for depth map.\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\t\t_gl.cullFace( scope.cullFace === THREE.CullFaceFront ? _gl.FRONT : _gl.BACK );\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// save the existing viewport so it can be restored later\r\n\t\t\t_renderer.getViewport( _vector4 );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( light.castShadow === true ) {\r\n\t\r\n\t\t\t\t\tvar shadow = light.shadow;\r\n\t\t\t\t\tvar shadowCamera = shadow.camera;\r\n\t\t\t\t\tvar shadowMapSize = shadow.mapSize;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\t\tfaceCount = 6;\r\n\t\t\t\t\t\tisPointLight = true;\r\n\t\r\n\t\t\t\t\t\tvar vpWidth = shadowMapSize.x / 4.0;\r\n\t\t\t\t\t\tvar vpHeight = shadowMapSize.y / 2.0;\r\n\t\r\n\t\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t\t\t// following orientation:\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t//  xzXZ\r\n\t\t\t\t\t\t//   y Y\r\n\t\t\t\t\t\t//\r\n\t\t\t\t\t\t// X - Positive x direction\r\n\t\t\t\t\t\t// x - Negative x direction\r\n\t\t\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t\t\t// y - Negative y direction\r\n\t\t\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t\t\t// z - Negative z direction\r\n\t\r\n\t\t\t\t\t\t// positive X\r\n\t\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t\t// negative X\r\n\t\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t\t// positive Z\r\n\t\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t\t// negative Z\r\n\t\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t\t// positive Y\r\n\t\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t\t\t// negative Y\r\n\t\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tfaceCount = 1;\r\n\t\t\t\t\t\tisPointLight = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( shadow.map === null ) {\r\n\t\r\n\t\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( shadowMapSize.x, shadowMapSize.y, pars );\r\n\t\t\t\t\t\tshadow.matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\t\tshadowCamera.aspect = shadowMapSize.x / shadowMapSize.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar shadowMap = shadow.map;\r\n\t\t\t\t\tvar shadowMatrix = shadow.matrix;\r\n\t\r\n\t\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\t\r\n\t\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t\t\t// run a single pass if not\r\n\t\r\n\t\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointLight ) {\r\n\t\r\n\t\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t\t\t_renderer.setViewport( vpDimensions.x, vpDimensions.y, vpDimensions.z, vpDimensions.w );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\t\t\t\t\t// render shadow map\r\n\t\t\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, depthMaterial, object, group );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, depthMaterial, object, null );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// We must call _renderer.resetGLState() at the end of each iteration of\r\n\t\t\t\t\t// the light loop in order to force material updates for each light.\r\n\t\t\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.setViewport( _vector4.x, _vector4.y, _vector4.z, _vector4.w );\r\n\t\r\n\t\t\t// Restore GL state.\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar newMaterial = null;\r\n\t\r\n\t\t\tvar materialVariants = _depthMaterials;\r\n\t\t\tvar customMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\tif ( isPointLight ) {\r\n\t\r\n\t\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ! customMaterial ) {\r\n\t\r\n\t\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\r\n\t\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\r\n\t\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\t\tvar variantIndex = 0;\r\n\t\r\n\t\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\t\r\n\t\t\t\tnewMaterial = materialVariants[ variantIndex ];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewMaterial = customMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tnewMaterial.visible = material.visible;\r\n\t\t\tnewMaterial.wireframe = material.wireframe;\r\n\t\t\tnewMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\tif ( isPointLight && newMaterial.uniforms.lightPos !== undefined ) {\r\n\t\r\n\t\t\t\tnewMaterial.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn newMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\tvar attributeDivisors = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n\t\t\t\tattributeDivisors[ attribute ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\t\r\n\t\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tfunction init() {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tfunction init() {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/CurveUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.CurveUtils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.' );\r\n\t\r\n\t\t\tvar loader = new THREE.TextureLoader();\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\t\r\n\t\t\tif ( mapping ) texture.mapping = mapping;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\t\r\n\t\t\tvar loader = new THREE.CubeTextureLoader();\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\t\r\n\t\t\tif ( mapping ) texture.mapping = mapping;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ShapeUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.ShapeUtils = {\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tarea: function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttriangulate: ( function () {\r\n\t\r\n\t\t\t/**\r\n\t\t\t * This code is a quick port of code written in C++ which was submitted to\r\n\t\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t\t\t * See original code and more information here:\r\n\t\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t\t\t *\r\n\t\t\t * ported to actionscript by Zevan Rosser\r\n\t\t\t * www.actionsnippet.com\r\n\t\t\t *\r\n\t\t\t * ported to javascript by Joshua Koo\r\n\t\t\t * http://www.lab4games.net/zz85/blog\r\n\t\t\t *\r\n\t\t\t */\r\n\t\r\n\t\t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\t\tvar p;\r\n\t\t\t\tvar ax, ay, bx, by;\r\n\t\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// takes in an contour array and returns\r\n\t\r\n\t\t\treturn function ( contour, indices ) {\r\n\t\r\n\t\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\t\tvar result = [],\r\n\t\t\t\t\tverts = [],\r\n\t\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\t\tvar u, v, w;\r\n\t\r\n\t\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar nv = n;\r\n\t\r\n\t\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t\t//return null;\r\n\t\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\t\r\n\t\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.ShapeUtils.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2: ( function () {\r\n\t\r\n\t\t\tfunction b2p0( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn k * k * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b2p1( t, p ) {\r\n\t\r\n\t\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b2p2( t, p ) {\r\n\t\r\n\t\t\t\treturn t * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3: ( function () {\r\n\t\r\n\t\t\tfunction b3p0( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b3p1( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b3p2( t, p ) {\r\n\t\r\n\t\t\t\tvar k = 1 - t;\r\n\t\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction b3p3( t, p ) {\r\n\t\r\n\t\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Curve.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Curve,\r\n\t\r\n\t\t// Virtual base class method to overwrite and implement in subclasses\r\n\t\t//\t- t [0 .. 1]\r\n\t\r\n\t\tgetPoint: function ( t ) {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\t\treturn null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get point at relative position in curve according to arc length\r\n\t\t// - u [0 .. 1]\r\n\t\r\n\t\tgetPointAt: function ( u ) {\r\n\t\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getPoint( t );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get sequence of points using getPoint( t )\r\n\t\r\n\t\tgetPoints: function ( divisions ) {\r\n\t\r\n\t\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\t\tvar d, pts = [];\r\n\t\r\n\t\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn pts;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\t\tgetSpacedPoints: function ( divisions ) {\r\n\t\r\n\t\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\t\tvar d, pts = [];\r\n\t\r\n\t\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn pts;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get total curve arc length\r\n\t\r\n\t\tgetLength: function () {\r\n\t\r\n\t\t\tvar lengths = this.getLengths();\r\n\t\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Get list of cumulative segment lengths\r\n\t\r\n\t\tgetLengths: function ( divisions ) {\r\n\t\r\n\t\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\t\tif ( this.cacheArcLengths\r\n\t\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.needsUpdate = false;\r\n\t\r\n\t\t\tvar cache = [];\r\n\t\t\tvar current, last = this.getPoint( 0 );\r\n\t\t\tvar p, sum = 0;\r\n\t\r\n\t\t\tcache.push( 0 );\r\n\t\r\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\t\tsum += current.distanceTo( last );\r\n\t\t\t\tcache.push( sum );\r\n\t\t\t\tlast = current;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateArcLengths: function() {\r\n\t\r\n\t\t\tthis.needsUpdate = true;\r\n\t\t\tthis.getLengths();\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\t\tgetUtoTmapping: function ( u, distance ) {\r\n\t\r\n\t\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\t\tif ( distance ) {\r\n\t\r\n\t\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//var time = Date.now();\r\n\t\r\n\t\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thigh = i;\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t// DONE\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti = high;\r\n\t\r\n\t\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\t\tvar t = i / ( il - 1 );\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t\t// add that fractional amount to t\r\n\t\r\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\t\treturn t;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Returns a unit vector tangent at t\r\n\t\t// In case any sub curve does not implement its tangent derivation,\r\n\t\t// 2 points a small delta apart will be used to find its gradient\r\n\t\t// which seems to give a reasonable approximation\r\n\t\r\n\t\tgetTangent: function( t ) {\r\n\t\r\n\t\t\tvar delta = 0.0001;\r\n\t\t\tvar t1 = t - delta;\r\n\t\t\tvar t2 = t + delta;\r\n\t\r\n\t\t\t// Capping in case of danger\r\n\t\r\n\t\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\t\tvar pt1 = this.getPoint( t1 );\r\n\t\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\t\treturn vec.normalize();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTangentAt: function ( u ) {\r\n\t\r\n\t\t\tvar t = this.getUtoTmapping( u );\r\n\t\t\treturn this.getTangent( t );\r\n\t\r\n\t\t}\r\n\t\r\n\t}\r\n\t\r\n\tTHREE.Curve.Utils = THREE.CurveUtils; // backwards compatibility\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t*/\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};\r\n\t*/\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\r\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar point = points[ i ];\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: 'splineThru', args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: 'ellipse', args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, tx, ty;\r\n\t\r\n\t\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar item = this.actions[ i ];\r\n\t\r\n\t\t\tvar action = item.action;\r\n\t\t\tvar args = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase 'moveTo':\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'lineTo':\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'quadraticCurveTo':\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'bezierCurveTo':\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'splineThru':\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'arc':\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase 'ellipse':\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar item = inActions[ i ];\r\n\t\r\n\t\t\t\tvar args = item.args;\r\n\t\t\t\tvar action = item.action;\r\n\t\r\n\t\t\t\tif ( action === 'moveTo' ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles;\r\n\t\r\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\treturn new THREE.ExtrudeGeometry( this, options );\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\treturn new THREE.ShapeGeometry( this, options );\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar holesPts = [];\r\n\t\r\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.Utils = THREE.ShapeUtils; // backwards compatibility\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\r\n\t\r\n\t\treturn new THREE.Vector2(\r\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\r\n\t\r\n\t\treturn new THREE.Vector2(\r\n\t\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t\t).normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\t\r\n\t\treturn new THREE.Vector2( \r\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\r\n\t\r\n\t\treturn new THREE.Vector2( \r\n\t\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t\t).normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\t\r\n\t\treturn new THREE.Vector2(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n\t\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n\t\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\t\r\n\t\t\treturn new THREE.Vector3(\r\n\t\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t\t);\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.BoxGeometry(\r\n\t\t\tparameters.width,\r\n\t\t\tparameters.height,\r\n\t\t\tparameters.depth,\r\n\t\t\tparameters.widthSegments,\r\n\t\t\tparameters.heightSegments,\r\n\t\t\tparameters.depthSegments\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.CircleGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.segments,\r\n\t\t\tparameters.thetaStart,\r\n\t\t\tparameters.thetaLength\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 2 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i, i + 1, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.CircleBufferGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.segments,\r\n\t\t\tparameters.thetaStart,\r\n\t\t\tparameters.thetaLength\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.CylinderGeometry(\r\n\t\t\tparameters.radiusTop,\r\n\t\t\tparameters.radiusBottom,\r\n\t\t\tparameters.height,\r\n\t\t\tparameters.radialSegments,\r\n\t\t\tparameters.heightSegments,\r\n\t\t\tparameters.openEnded,\r\n\t\t\tparameters.thetaStart,\r\n\t\t\tparameters.thetaLength\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\r\n\t\tfunction sortFunction( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.PlaneGeometry(\r\n\t\t\tparameters.width,\r\n\t\t\tparameters.height,\r\n\t\t\tparameters.widthSegments,\r\n\t\t\tparameters.heightSegments\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.PlaneBufferGeometry(\r\n\t\t\tparameters.width,\r\n\t\t\tparameters.height,\r\n\t\t\tparameters.widthSegments,\r\n\t\t\tparameters.heightSegments\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.RingGeometry(\r\n\t\t\tparameters.innerRadius,\r\n\t\t\tparameters.outerRadius,\r\n\t\t\tparameters.thetaSegments,\r\n\t\t\tparameters.phiSegments,\r\n\t\t\tparameters.thetaStart,\r\n\t\t\tparameters.thetaLength\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.SphereGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.widthSegments,\r\n\t\t\tparameters.heightSegments,\r\n\t\t\tparameters.phiStart,\r\n\t\t\tparameters.phiLength,\r\n\t\t\tparameters.thetaStart,\r\n\t\t\tparameters.thetaLength\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.SphereBufferGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.widthSegments,\r\n\t\t\tparameters.heightSegments,\r\n\t\t\tparameters.phiStart,\r\n\t\t\tparameters.phiLength,\r\n\t\t\tparameters.thetaStart,\r\n\t\t\tparameters.thetaLength\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.TorusGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.tube,\r\n\t\t\tparameters.radialSegments,\r\n\t\t\tparameters.tubularSegments,\r\n\t\t\tparameters.arc\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.TorusKnotGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.tube,\r\n\t\t\tparameters.radialSegments,\r\n\t\t\tparameters.tubularSegments,\r\n\t\t\tparameters.p,\r\n\t\t\tparameters.q,\r\n\t\t\tparameters.heightScale\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed,\r\n\t\t\ttaper: taper\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\tTHREE.TubeGeometry.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.parameters.path,\r\n\t\t\tthis.parameters.segments, this.parameters.radius, this.parameters.radialSegments,\r\n\t\t\tthis.parameters.closed, this.parameters.taper\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > Number.EPSILON ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\t\tvar min = Math.min( x0, x1, x2 );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.PolyhedronGeometry(\r\n\t\t\tparameters.vertices,\r\n\t\t\tparameters.indices,\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.detail\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.DodecahedronGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.detail\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.IcosahedronGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.detail\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.OctahedronGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.detail\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar parameters = this.parameters;\r\n\t\r\n\t\treturn new THREE.TetrahedronGeometry(\r\n\t\t\tparameters.radius,\r\n\t\t\tparameters.detail\r\n\t\t);\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\r\n\t\tfunction sortFunction( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://clara.io\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.camera.updateProjectionMatrix();\r\n\t\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tfunction setPoint( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function ( material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.material = material;\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {'use strict';\n\t\n\tvar _Engine = __webpack_require__(3);\n\t\n\tvar _Engine2 = _interopRequireDefault(_Engine);\n\t\n\tvar _AssetManager = __webpack_require__(8);\n\t\n\tvar _AssetManager2 = _interopRequireDefault(_AssetManager);\n\t\n\tvar _path = __webpack_require__(11);\n\t\n\tvar _path2 = _interopRequireDefault(_path);\n\t\n\tvar _MenuBuilder = __webpack_require__(13);\n\t\n\tvar _MenuBuilder2 = _interopRequireDefault(_MenuBuilder);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ASSET_PATH = _path2.default.resolve(__dirname, '../../assets/');\n\tvar ASSET_CONFIG = {\n\t    paths: {\n\t        maps: ASSET_PATH + '/maps',\n\t        atlases: ASSET_PATH + '/spritesheets',\n\t        fonts: ASSET_PATH + '/fonts',\n\t        audio: ASSET_PATH + '/audio/sprites'\n\t    },\n\t    textureAtlases: ['soldier', 'tiles', 'world', 'ui'],\n\t    maps: ['level1', 'level2'],\n\t    fonts: ['long_shot'],\n\t    audio: ['guns', 'background', 'menu_effects']\n\t};\n\t\n\tvar Game = {\n\t\n\t    /**\n\t     * Load assets and start the game.\n\t     *\n\t     * @returns {void}\n\t     */\n\t\n\t    start: function start() {\n\t        _AssetManager2.default.init(ASSET_CONFIG).then(function () {\n\t            var engine = new _Engine2.default({\n\t                debugMode: true\n\t            });\n\t\n\t            var menuState = _MenuBuilder2.default.create(engine);\n\t\n\t            engine.addState('menu', menuState);\n\t\n\t            engine.changeState('menu');\n\t\n\t            engine.run();\n\t        }).catch(function (err) {\n\t            throw err;\n\t        });\n\t    }\n\t};\n\t\n\tmodule.exports = Game;\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _RenderDebug = __webpack_require__(4);\n\t\n\tvar _RenderDebug2 = _interopRequireDefault(_RenderDebug);\n\t\n\tvar _Renderer = __webpack_require__(6);\n\t\n\tvar _Renderer2 = _interopRequireDefault(_Renderer);\n\t\n\tvar _mainloop = __webpack_require__(7);\n\t\n\tvar _mainloop2 = _interopRequireDefault(_mainloop);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Engine = (function () {\n\t    function Engine() {\n\t        var options = arguments.length <= 0 || arguments[0] === undefined ? { debugMode: false } : arguments[0];\n\t\n\t        _classCallCheck(this, Engine);\n\t\n\t        this.debugMode = options.debugMode;\n\t        this.states = new Map();\n\t        this.currentState = null;\n\t        this._renderer = new _Renderer2.default();\n\t\n\t        if (this.debugMode) {\n\t            this._renderDebug = new _RenderDebug2.default(this._renderer);\n\t            this._renderDebug.init();\n\t        }\n\t    }\n\t\n\t    /**\n\t     * Add a State to the engine.\n\t     *\n\t     * @param {string} name - Name of the state.\n\t     * @param {State} state - Instance of the state.\n\t     *\n\t     * @returns {void}\n\t     */\n\t\n\t    _createClass(Engine, [{\n\t        key: 'addState',\n\t        value: function addState(name, state) {\n\t            this.states.set(name, state);\n\t        }\n\t\n\t        /**\n\t         * Change the current state and change the renderer's view to the view of the state.\n\t         *\n\t         * @param {string} name - Name of the state to change to.\n\t         *\n\t         * @returns {void}\n\t         */\n\t\n\t    }, {\n\t        key: 'changeState',\n\t        value: function changeState(name) {\n\t            this.currentState = this.states.get(name);\n\t            this.currentState.init();\n\t            if (this.currentState.views.size > 0) {\n\t                this._renderer.views = this.currentState.views;\n\t            } else {\n\t                console.warn('currentState has no View');\n\t            }\n\t        }\n\t\n\t        /**\n\t         * Remove a state from the engine.\n\t         *\n\t         * @param {string} name - Name of the state to remove.\n\t         *\n\t         * @returns {void}\n\t         */\n\t\n\t    }, {\n\t        key: 'removeState',\n\t        value: function removeState(name) {\n\t            this.states.delete(name);\n\t        }\n\t\n\t        /**\n\t         * The game loop. Updates the current state and renders it's Views.\n\t         *\n\t         * @returns {void}\n\t         */\n\t\n\t    }, {\n\t        key: 'run',\n\t        value: function run() {\n\t            var _this = this;\n\t\n\t            var render = function render(interpolationPercentage) {\n\t                _this.currentState.render(interpolationPercentage);\n\t                _this._renderer.render(interpolationPercentage);\n\t            };\n\t\n\t            var update = function update(delta) {\n\t                if (_this.currentState) {\n\t                    _this.currentState.update(delta);\n\t                } else {\n\t                    debug('no current State');\n\t                }\n\t            };\n\t\n\t            var before = function before() {\n\t                if (_this.debugMode) {\n\t                    _this._renderDebug.before();\n\t                }\n\t            };\n\t\n\t            var after = function after() {\n\t                if (_this.debugMode) {\n\t                    _this._renderDebug.after();\n\t                }\n\t            };\n\t\n\t            var loop = _mainloop2.default.setUpdate(update).setDraw(render).setBegin(before).setEnd(after);\n\t\n\t            loop.start();\n\t        }\n\t    }]);\n\t\n\t    return Engine;\n\t})();\n\t\n\texports.default = Engine;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _statsjs = __webpack_require__(5);\n\t\n\tvar _statsjs2 = _interopRequireDefault(_statsjs);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _rendererStats = function _rendererStats() {\n\t    var container = document.createElement('div');\n\t\n\t    container.style.cssText = 'width:80px;opacity:0.9;cursor:pointer';\n\t\n\t    var msDiv = document.createElement('div');\n\t\n\t    msDiv.style.cssText = 'padding:0 0 3px 3px;text-align:left;background-color:#200;';\n\t    container.appendChild(msDiv);\n\t\n\t    var msText = document.createElement('div');\n\t\n\t    msText.style.cssText = 'color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px';\n\t    msText.innerHTML = 'WebGLRenderer';\n\t    msDiv.appendChild(msText);\n\t\n\t    var msTexts = [];\n\t    var nLines = 9;\n\t\n\t    for (var i = 0; i < nLines; i++) {\n\t        msTexts[i] = document.createElement('div');\n\t        msTexts[i].style.cssText = 'color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px';\n\t        msDiv.appendChild(msTexts[i]);\n\t        msTexts[i].innerHTML = '-';\n\t    }\n\t\n\t    var lastTime = Date.now();\n\t\n\t    return {\n\t        domElement: container,\n\t\n\t        update: function update(info) {\n\t            // refresh only 30time per second\n\t            if (Date.now() - lastTime < 1000 / 30) {\n\t                return;\n\t            }\n\t\n\t            lastTime = Date.now();\n\t\n\t            var i = 0;\n\t\n\t            if (info) {\n\t                msTexts[i++].textContent = '== Memory =====';\n\t                msTexts[i++].textContent = 'Programs: ' + info.memory.programs;\n\t                msTexts[i++].textContent = 'Geometries: ' + info.memory.geometries;\n\t                msTexts[i++].textContent = 'Textures: ' + info.memory.textures;\n\t\n\t                msTexts[i++].textContent = '== Render =====';\n\t                msTexts[i++].textContent = 'Calls: ' + info.render.calls;\n\t                msTexts[i++].textContent = 'Vertices: ' + info.render.vertices;\n\t                msTexts[i++].textContent = 'Faces: ' + info.render.faces;\n\t                msTexts[i++].textContent = 'Points: ' + info.render.points;\n\t            }\n\t        }\n\t    };\n\t};\n\t\n\tvar RenderDebug = (function () {\n\t    function RenderDebug(renderer) {\n\t        _classCallCheck(this, RenderDebug);\n\t\n\t        this.renderer = renderer;\n\t    }\n\t\n\t    _createClass(RenderDebug, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.statjs = new _statsjs2.default();\n\t            this.statjs.setModes([0, 1, 2]);\n\t\n\t            // Stats.js\n\t            this.statjs.domElement.style.position = 'absolute';\n\t            this.statjs.domElement.style.right = '81px';\n\t            this.statjs.domElement.style.bottom = '0px';\n\t\n\t            document.body.appendChild(this.statjs.domElement);\n\t\n\t            this.rendererStats = _rendererStats();\n\t\n\t            // renderer-stats.js\n\t            this.rendererStats.domElement.style.position = 'absolute';\n\t\n\t            this.rendererStats.domElement.style.right = '0px';\n\t            this.rendererStats.domElement.style.bottom = '0px';\n\t\n\t            document.body.appendChild(this.rendererStats.domElement);\n\t        }\n\t    }, {\n\t        key: 'before',\n\t        value: function before() {\n\t            this.statjs.begin();\n\t        }\n\t    }, {\n\t        key: 'after',\n\t        value: function after() {\n\t            this.statjs.end();\n\t            this.rendererStats.update(this.renderer.info);\n\t        }\n\t    }]);\n\t\n\t    return RenderDebug;\n\t})();\n\t\n\texports.default = RenderDebug;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t/**\n\t * View that shows FPS, memory usage and render time.\n\t *\n\t * @returns {object} statsjs object\n\t */\n\tvar Stats = function Stats() {\n\t    var now = self.performance && self.performance.now ? self.performance.now.bind(performance) : Date.now;\n\t\n\t    var startTime = now();\n\t    var prevTime = startTime;\n\t    var frames = 0;\n\t    var modes = [0];\n\t\n\t    var createElement = function createElement(tag, id, css) {\n\t        var element = document.createElement(tag);\n\t\n\t        element.id = id;\n\t        element.style.cssText = css;\n\t\n\t        return element;\n\t    };\n\t\n\t    var createPanel = function createPanel(id, fg, bg) {\n\t        var div = createElement('div', id, 'padding:0 0 3px 3px;text-align:left;background:' + bg);\n\t\n\t        var text = createElement('div', id + 'Text', 'font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:' + fg);\n\t\n\t        text.innerHTML = id.toUpperCase();\n\t        div.appendChild(text);\n\t\n\t        var graph = createElement('div', id + 'Graph', 'width:74px;height:30px;background:' + fg);\n\t\n\t        div.appendChild(graph);\n\t\n\t        for (var i = 0; i < 74; i++) {\n\t            graph.appendChild(createElement('span', '', 'width:1px;height:30px;float:left;opacity:0.9;background:' + bg));\n\t        }\n\t\n\t        return div;\n\t    };\n\t\n\t    var setModes = function setModes(values) {\n\t        var children = container.children;\n\t\n\t        for (var i = 0; i < children.length; i++) {\n\t            if (values.indexOf(i) < 0) {\n\t                children[i].style.display = 'none';\n\t            } else {\n\t                children[i].style.display = 'block';\n\t            }\n\t        }\n\t\n\t        modes = values;\n\t    };\n\t\n\t    var setMode = function setMode(value) {\n\t        var children = container.children;\n\t\n\t        for (var i = 0; i < children.length; i++) {\n\t            children[i].style.display = i === value ? 'block' : 'none';\n\t        }\n\t\n\t        modes = [value];\n\t    };\n\t\n\t    var updateGraph = function updateGraph(dom, value) {\n\t        var child = dom.appendChild(dom.firstChild);\n\t\n\t        child.style.height = Math.min(30, 30 - value * 30) + 'px';\n\t    };\n\t\n\t    var container = createElement('div', 'stats', 'width:80px;opacity:0.9;cursor:pointer');\n\t\n\t    // FPS\n\t    var fps = 0;\n\t    var fpsMin = Number.POSITIVE_INFINITY;\n\t    var fpsMax = 0;\n\t\n\t    var fpsDiv = createPanel('fps', '#0ff', '#002');\n\t    var fpsText = fpsDiv.children[0];\n\t    var fpsGraph = fpsDiv.children[1];\n\t\n\t    container.appendChild(fpsDiv);\n\t\n\t    // MS\n\t    var ms = 0;\n\t    var msMin = Number.POSITIVE_INFINITY;\n\t    var msMax = 0;\n\t\n\t    var msDiv = createPanel('ms', '#0f0', '#020');\n\t    var msText = msDiv.children[0];\n\t    var msGraph = msDiv.children[1];\n\t\n\t    container.appendChild(msDiv);\n\t\n\t    var mem = 0;\n\t    var memMin = Number.POSITIVE_INFINITY;\n\t    var memMax = 0;\n\t    var memDiv = createPanel('mb', '#f08', '#201');\n\t    var memText = memDiv.children[0];\n\t    var memGraph = memDiv.children[1];\n\t\n\t    // MEM\n\t    if (self.performance && self.performance.memory) {\n\t        container.appendChild(memDiv);\n\t    }\n\t\n\t    setModes([modes]);\n\t\n\t    return {\n\t        REVISION: 14,\n\t        domElement: container,\n\t        setMode: setMode,\n\t        setModes: setModes,\n\t        begin: function begin() {\n\t            startTime = now();\n\t        },\n\t        end: function end() {\n\t            var time = now();\n\t\n\t            ms = time - startTime;\n\t            msMin = Math.min(msMin, ms);\n\t            msMax = Math.max(msMax, ms);\n\t\n\t            msText.textContent = (ms | 0) + ' MS (' + (msMin | 0) + '-' + (msMax | 0) + ')';\n\t            updateGraph(msGraph, ms / 200);\n\t\n\t            frames++;\n\t\n\t            if (time > prevTime + 1000) {\n\t                fps = Math.round(frames * 1000 / (time - prevTime));\n\t                fpsMin = Math.min(fpsMin, fps);\n\t                fpsMax = Math.max(fpsMax, fps);\n\t\n\t                fpsText.textContent = fps + ' FPS (' + fpsMin + '-' + fpsMax + ')';\n\t                updateGraph(fpsGraph, fps / 100);\n\t\n\t                prevTime = time;\n\t                frames = 0;\n\t\n\t                if (typeof mem !== 'undefined' && performance && performance.memory) {\n\t                    var heapSize = performance.memory.usedJSHeapSize;\n\t                    var heapSizeLimit = performance.memory.jsHeapSizeLimit;\n\t\n\t                    mem = Math.round(heapSize * 0.000000954);\n\t                    memMin = Math.min(memMin, mem);\n\t                    memMax = Math.max(memMax, mem);\n\t\n\t                    memText.textContent = mem + ' MB (' + memMin + '-' + memMax + ')';\n\t                    updateGraph(memGraph, heapSize / heapSizeLimit);\n\t                }\n\t            }\n\t\n\t            return time;\n\t        },\n\t\n\t        update: function update() {\n\t            startTime = this.end();\n\t        }\n\t    };\n\t};\n\t\n\texports.default = Stats;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DEFAULT_WIDTH = 800;\n\tvar DEFAULT_HEIGHT = 600;\n\t\n\t/**\n\t * Handles all the rendering. Uses the three.js renderer internally.\n\t *\n\t * @class\n\t */\n\t\n\tvar Renderer = (function () {\n\t\n\t    /**\n\t     * @constructor\n\t     *\n\t     * @param {string} [divName=gameDiv] - id of the html div to render into.\n\t     */\n\t\n\t    function Renderer() {\n\t        var divName = arguments.length <= 0 || arguments[0] === undefined ? 'gameDiv' : arguments[0];\n\t\n\t        _classCallCheck(this, Renderer);\n\t\n\t        this._views = null;\n\t\n\t        this._THREErenderer = new THREE.WebGLRenderer();\n\t\n\t        this._THREErenderer.setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);\n\t        this._THREErenderer.setClearColor(0x000000);\n\t        this._THREErenderer.setPixelRatio(window.devicePixelRatio);\n\t        this._THREErenderer.autoClear = false;\n\t\n\t        document.getElementById(divName).appendChild(this._THREErenderer.domElement);\n\t    }\n\t\n\t    _createClass(Renderer, [{\n\t        key: 'render',\n\t\n\t        /**\n\t         * Render the view\n\t         *\n\t         * @returns {void}\n\t         */\n\t        value: function render() {\n\t            this._THREErenderer.clear();\n\t\n\t            var info = {\n\t                memory: {\n\t                    programs: 0,\n\t                    geometries: 0,\n\t                    textures: 0\n\t                },\n\t                render: {\n\t                    calls: 0,\n\t                    vertices: 0,\n\t                    faces: 0,\n\t                    points: 0\n\t                }\n\t            };\n\t\n\t            var index = 0;\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this._views[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var view = _step.value;\n\t\n\t                    if (index > 0) {\n\t                        this._THREErenderer.clearDepth();\n\t                    }\n\t\n\t                    this._THREErenderer.render(view.scene, view.camera);\n\t\n\t                    info.memory.programs += this._THREErenderer.info.programs.length;\n\t                    info.memory.geometries += this._THREErenderer.info.memory.geometries;\n\t                    info.memory.textures += this._THREErenderer.info.memory.textures;\n\t                    info.render.calls += this._THREErenderer.info.render.calls;\n\t                    info.render.vertices += this._THREErenderer.info.render.vertices;\n\t                    info.render.faces += this._THREErenderer.info.render.faces;\n\t                    info.render.points += this._THREErenderer.info.render.points;\n\t\n\t                    index += 1;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.info = info;\n\t        }\n\t    }, {\n\t        key: 'views',\n\t        set: function set(views) {\n\t            this._views = views;\n\t\n\t            var index = 0;\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this._views[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var view = _step2.value;\n\t\n\t                    if (index === 0) {\n\t                        // Get the clear color from the first view\n\t                        this._THREErenderer.setClearColor(view.clearColor);\n\t                    }\n\t\n\t                    view.size = {\n\t                        width: DEFAULT_WIDTH,\n\t                        height: DEFAULT_HEIGHT\n\t                    };\n\t\n\t                    index += 1;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        },\n\t        get: function get() {\n\t            return this._views;\n\t        }\n\t    }]);\n\t\n\t    return Renderer;\n\t})();\n\t\n\texports.default = Renderer;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// https://github.com/IceCreamYou/MainLoop.js\n\t// The MIT License\n\t//\n\t// Copyright (C) 2015 Isaac Sukin\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a copy of\n\t// this software and associated documentation files (the \"Software\"), to deal in\n\t// the Software without restriction, including without limitation the rights to\n\t// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n\t// of the Software, and to permit persons to whom the Software is furnished to do\n\t// so, subject to the following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included in all\n\t// copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n\t// SOFTWARE.\n\t/*\n\t * A main loop useful for games and other animated applications.\n\t */\n\t\n\t// The amount of time (in milliseconds) to simulate each time update()\n\t// runs. See `MainLoop.setSimulationTimestep()` for details.\n\tvar simulationTimestep = 1000 / 60;\n\t\n\t// The cumulative amount of in-app time that hasn't been simulated yet.\n\t// See the comments inside animate() for details.\n\tvar frameDelta = 0;\n\t\n\t/**\n\t * The timestamp in milliseconds of the last time the main loop was run.\n\t * Used to compute the time elapsed between frames.\n\t */\n\tvar lastFrameTimeMs = 0;\n\t\n\t/**\n\t * An exponential moving average of the frames per second.\n\t */\n\tvar fps = 60;\n\t\n\t/**\n\t * The timestamp (in milliseconds) of the last time the `fps` moving average was updated.\n\t */\n\tvar lastFpsUpdate = 0;\n\t\n\t/**\n\t * The number of frames delivered in the current second.\n\t */\n\tvar framesThisSecond = 0;\n\t\n\t// The number of times update() is called in a given frame. This is only\n\t// relevant inside of animate(), but a reference is held externally so that\n\t// this variable is not marked for garbage collection every time the main\n\t// loop runs.\n\tvar numUpdateSteps = 0;\n\t\n\t// The minimum amount of time in milliseconds that must pass since the last\n\t// frame was executed before another frame can be executed. The\n\t// multiplicative inverse caps the FPS (the default of zero means there is\n\t// no cap).\n\tvar minFrameDelay = 0;\n\t\n\t/*\n\t * Whether the main loop is running.\n\t */\n\tvar running = false;\n\t\n\t// `true` if `MainLoop.start()` has been called and the most recent time it\n\t// was called has not been followed by a call to `MainLoop.stop()`. This is\n\t// different than `running` because there is a delay of a few milliseconds\n\t// after `MainLoop.start()` is called before the application is considered\n\t// \"running.\" This delay is due to waiting for the next frame.\n\tvar started = false;\n\t\n\t// Whether the simulation has fallen too far behind real time.\n\t// Specifically, `panic` will be set to `true` if too many updates occur in\n\t// one frame. This is only relevant inside of animate(), but a reference is\n\t// held externally so that this variable is not marked for garbage\n\t// collection every time the main loop runs.\n\tvar panic = false;\n\t\n\t// The function that runs the main loop. The unprefixed version of\n\t// `window.requestAnimationFrame()` is available in all modern browsers\n\t// now, but node.js doesn't have it, so fall back to timers. The polyfill\n\t// is adapted from the MIT-licensed\n\t// https://github.com/underscorediscovery/realtime-multiplayer-in-html5\n\tvar requestAnimationFrame = window.requestAnimationFrame || (function () {\n\t    var lastTimestamp = Date.now();\n\t\n\t    return function (callback) {\n\t        var now = Date.now();\n\t\n\t        // The next frame should run no sooner than the simulation allows,\n\t        // but as soon as possible if the current frame has already taken\n\t        // more time to run than is simulated in one timestep.\n\t        var timeout = Math.max(0, simulationTimestep - (now - lastTimestamp));\n\t\n\t        lastTimestamp = now + timeout;\n\t\n\t        return setTimeout(function () {\n\t            callback(now + timeout);\n\t        }, timeout);\n\t    };\n\t})();\n\t\n\t// The function that stops the main loop. The unprefixed version of\n\t// `window.cancelAnimationFrame()` is available in all modern browsers now,\n\t// but node.js doesn't have it, so fall back to timers.\n\tvar cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;\n\t\n\t// In all major browsers, replacing non-specified functions with NOOPs\n\t// seems to be as fast or slightly faster than using conditions to only\n\t// call the functions if they are specified. This is probably due to empty\n\t// functions being optimized away. http://jsperf.com/noop-vs-condition\n\tvar NOOP = function NOOP() {};\n\t\n\t// A function that runs at the beginning of the main loop.\n\t// See `MainLoop.setBegin()` for details.\n\tvar begin = NOOP;\n\t\n\t// A function that runs updates (i.e. AI and physics).\n\t// See `MainLoop.setUpdate()` for details.\n\tvar update = NOOP;\n\t\n\t// A function that draws things on the screen.\n\t// See `MainLoop.setDraw()` for details.\n\tvar draw = NOOP;\n\t\n\t// A function that runs at the end of the main loop.\n\t// See `MainLoop.setEnd()` for details.\n\tvar end = NOOP;\n\t\n\t// The ID of the currently executing frame. Used to cancel frames when\n\t// stopping the loop.\n\tvar rafHandle = null;\n\t\n\t/**\n\t * Manages the main loop that runs updates and rendering.\n\t *\n\t * The main loop is a core part of any application in which state changes\n\t * even if no events are handled. In games, it is typically responsible for\n\t * computing physics and AI as well as drawing the result on the screen.\n\t *\n\t * The body of this particular loop is run every time the browser is ready to\n\t * paint another frame. The frequency with which this happens depends primarily\n\t * on the monitor's refresh rate, which is typically 60 frames per second. Most\n\t * applications aim to run at 60 FPS for this reason, meaning that the main\n\t * loop runs about once every 16.7 milliseconds. With this target, everything\n\t * that happens in the main loop (e.g. all updates and drawing) needs to occur\n\t * within the \"budget\" of 16.7 milliseconds.  See\n\t * `MainLoop.setSimulationTimestep()` for more information about typical\n\t * monitor refresh rates and frame rate targets.\n\t *\n\t * The main loop can be started and stopped, but there can only be one MainLoop\n\t * (except that each Web Worker can have its own MainLoop). There are four main\n\t * parts of the loop: {@link #setBegin begin}(), {@link #setUpdate update}(),\n\t * {@link #setDraw draw}(), and {@link #setEnd end}(), in that order. See the\n\t * functions that set each of them for descriptions of what they are used for.\n\t * Note that update() can run zero or more times per loop.\n\t *\n\t * @class MainLoop\n\t */\n\tvar MainLoop = {\n\t\n\t    /**\n\t     * Gets how many milliseconds should be simulated by every run of update().\n\t     *\n\t     * See `MainLoop.setSimulationTimestep()` for details on this value.\n\t     *\n\t     * @return {Number}\n\t     *   The number of milliseconds that should be simulated by every run of\n\t     *   {@link #setUpdate update}().\n\t     */\n\t    getSimulationTimestep: function getSimulationTimestep() {\n\t        return simulationTimestep;\n\t    },\n\t\n\t    /**\n\t     * Sets how many milliseconds should be simulated by every run of update().\n\t     *\n\t     * The perceived frames per second (FPS) is effectively capped at the\n\t     * multiplicative inverse of the simulation timestep. That is, if the\n\t     * timestep is 1000 / 60 (which is the default), then the maximum perceived\n\t     * FPS is effectively 60. Decreasing the timestep increases the maximum\n\t     * perceived FPS at the cost of running {@link #setUpdate update}() more\n\t     * times per frame at lower frame rates. Since running update() more times\n\t     * takes more time to process, this can actually slow down the frame rate.\n\t     * Additionally, if the amount of time it takes to run update() exceeds or\n\t     * very nearly exceeds the timestep, the application will freeze and crash\n\t     * in a spiral of death (unless it is rescued; see `MainLoop.setEnd()` for\n\t     * an explanation of what can be done if a spiral of death is occurring).\n\t     *\n\t     * The exception to this is that interpolating between updates for each\n\t     * render can increase the perceived frame rate and reduce visual\n\t     * stuttering. See `MainLoop.setDraw()` for an explanation of how to do\n\t     * this.\n\t     *\n\t     * If you are considering decreasing the simulation timestep in order to\n\t     * raise the maximum perceived FPS, keep in mind that most monitors can't\n\t     * display more than 60 FPS. Whether humans can tell the difference among\n\t     * high frame rates depends on the application, but for reference, film is\n\t     * usually displayed at 24 FPS, other videos at 30 FPS, most games are\n\t     * acceptable above 30 FPS, and virtual reality might require 75 FPS to\n\t     * feel natural. Some gaming monitors go up to 144 FPS. Setting the\n\t     * timestep below 1000 / 144 is discouraged and below 1000 / 240 is\n\t     * strongly discouraged. The default of 1000 / 60 is good in most cases.\n\t     *\n\t     * The simulation timestep should typically only be changed at\n\t     * deterministic times (e.g. before the main loop starts for the first\n\t     * time, and not in response to user input or slow frame rates) to avoid\n\t     * introducing non-deterministic behavior. The update timestep should be\n\t     * the same for all players/users in multiplayer/multi-user applications.\n\t     *\n\t     * See also `MainLoop.getSimulationTimestep()`.\n\t     *\n\t     * @param {Number} timestep\n\t     *   The number of milliseconds that should be simulated by every run of\n\t     *   {@link #setUpdate update}().\n\t     */\n\t    setSimulationTimestep: function setSimulationTimestep(timestep) {\n\t        simulationTimestep = timestep;\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Returns the exponential moving average of the frames per second.\n\t     *\n\t     * @return {Number}\n\t     *   The exponential moving average of the frames per second.\n\t     */\n\t    getFPS: function getFPS() {\n\t        return fps;\n\t    },\n\t\n\t    /**\n\t     * Gets the maximum frame rate.\n\t     *\n\t     * Other factors also limit the FPS; see `MainLoop.setSimulationTimestep`\n\t     * for details.\n\t     *\n\t     * See also `MainLoop.setMaxAllowedFPS()`.\n\t     *\n\t     * @return {Number}\n\t     *   The maximum number of frames per second allowed.\n\t     */\n\t    getMaxAllowedFPS: function getMaxAllowedFPS() {\n\t        return 1000 / minFrameDelay;\n\t    },\n\t\n\t    /**\n\t     * Sets a maximum frame rate.\n\t     *\n\t     * See also `MainLoop.getMaxAllowedFPS()`.\n\t     *\n\t     * @param {Number} [fps=Infinity]\n\t     *   The maximum number of frames per second to execute. If Infinity or not\n\t     *   passed, there will be no FPS cap (although other factors do limit the\n\t     *   FPS; see `MainLoop.setSimulationTimestep` for details). If zero, this\n\t     *   will stop the loop, and when the loop is next started, it will return\n\t     *   to the previous maximum frame rate. Passing negative values will stall\n\t     *   the loop until this function is called again with a positive value.\n\t     *\n\t     * @chainable\n\t     */\n\t    setMaxAllowedFPS: function setMaxAllowedFPS(fps) {\n\t        if (typeof fps === 'undefined') {\n\t            fps = Infinity;\n\t        }\n\t\n\t        if (fps === 0) {\n\t            this.stop();\n\t        } else {\n\t            // Dividing by Infinity returns zero.\n\t            minFrameDelay = 1000 / fps;\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Reset the amount of time that has not yet been simulated to zero.\n\t     *\n\t     * This introduces non-deterministic behavior if called after the\n\t     * application has started running (unless it is being reset, in which case\n\t     * it doesn't matter). However, this can be useful in cases where the\n\t     * amount of time that has not yet been simulated has grown very large\n\t     * (for example, when the application's tab gets put in the background and\n\t     * the browser throttles the timers as a result). In applications with\n\t     * lockstep the player would get dropped, but in other networked\n\t     * applications it may be necessary to snap or ease the player/user to the\n\t     * authoritative state and discard pending updates in the process. In\n\t     * non-networked applications it may also be acceptable to simply resume\n\t     * the application where it last left off and ignore the accumulated\n\t     * unsimulated time.\n\t     *\n\t     * @return {Number}\n\t     *   The cumulative amount of elapsed time in milliseconds that has not yet\n\t     *   been simulated, but is being discarded as a result of calling this\n\t     *   function.\n\t     */\n\t    resetFrameDelta: function resetFrameDelta() {\n\t        var oldFrameDelta = frameDelta;\n\t\n\t        frameDelta = 0;\n\t\n\t        return oldFrameDelta;\n\t    },\n\t\n\t    /**\n\t     * Sets the function that runs at the beginning of the main loop.\n\t     *\n\t     * The begin() function is typically used to process input before the\n\t     * updates run. Processing input here (in chunks) can reduce the running\n\t     * time of event handlers, which is useful because long-running event\n\t     * handlers can sometimes delay frames.\n\t     *\n\t     * Unlike {@link #setUpdate update}(), which can run zero or more times per\n\t     * frame, begin() always runs exactly once per frame. This makes it useful\n\t     * for any updates that are not dependent on time in the simulation.\n\t     * Examples include adjusting HUD calculations or performing long-running\n\t     * updates incrementally. Compared to {@link #setEnd end}(), generally\n\t     * actions should occur in begin() if they affect anything that\n\t     * {@link #setUpdate update}() or {@link #setDraw draw}() use.\n\t     *\n\t     * @param {Function} begin\n\t     *   The begin() function.\n\t     * @param {Number} [begin.timestamp]\n\t     *   The current timestamp (when the frame started), in milliseconds. This\n\t     *   should only be used for comparison to other timestamps because the\n\t     *   epoch (i.e. the \"zero\" time) depends on the engine running this code.\n\t     *   In engines that support `DOMHighResTimeStamp` (all modern browsers\n\t     *   except iOS Safari 8) the epoch is the time the page started loading,\n\t     *   specifically `performance.timing.navigationStart`. Everywhere else,\n\t     *   including node.js, the epoch is the Unix epoch (1970-01-01T00:00:00Z).\n\t     * @param {Number} [begin.delta]\n\t     *   The total elapsed time that has not yet been simulated, in\n\t     *   milliseconds.\n\t     */\n\t    setBegin: function setBegin(fun) {\n\t        begin = fun || begin;\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the function that runs updates (e.g. AI and physics).\n\t     *\n\t     * The update() function should simulate anything that is affected by time.\n\t     * It can be called zero or more times per frame depending on the frame\n\t     * rate.\n\t     *\n\t     * As with everything in the main loop, the running time of update()\n\t     * directly affects the frame rate. If update() takes long enough that the\n\t     * frame rate drops below the target (\"budgeted\") frame rate, parts of the\n\t     * update() function that do not need to execute between every frame can be\n\t     * moved into Web Workers. (Various sources on the internet sometimes\n\t     * suggest other scheduling patterns using setTimeout() or setInterval().\n\t     * These approaches sometimes offer modest improvements with minimal\n\t     * changes to existing code, but because JavaScript is single-threaded, the\n\t     * updates will still block rendering and drag down the frame rate. Web\n\t     * Workers execute in separate threads, so they free up more time in the\n\t     * main loop.)\n\t     *\n\t     * This script can be imported into a Web Worker using importScripts() and\n\t     * used to run a second main loop in the worker. Some considerations:\n\t     *\n\t     * - Profile your code before doing the work to move it into Web Workers.\n\t     *   It could be the rendering that is the bottleneck, in which case the\n\t     *   solution is to decrease the visual complexity of the scene.\n\t     * - It doesn't make sense to move the *entire* contents of update() into\n\t     *   workers unless {@link #setDraw draw}() can interpolate between frames.\n\t     *   The lowest-hanging fruit is background updates (like calculating\n\t     *   citizens' happiness in a city-building game), physics that doesn't\n\t     *   affect the scene (like flags waving in the wind), and anything that is\n\t     *   occluded or happening far off screen.\n\t     * - If draw() needs to interpolate physics based on activity that occurs\n\t     *   in a worker, the worker needs to pass the interpolation value back to\n\t     *   the main thread so that is is available to draw().\n\t     * - Web Workers can't access the state of the main thread, so they can't\n\t     *   directly modify objects in your scene. Moving data to and from Web\n\t     *   Workers is a pain. The fastest way to do it is with Transferable\n\t     *   Objects: basically, you can pass an ArrayBuffer to a worker,\n\t     *   destroying the original reference in the process.\n\t     *\n\t     * You can read more about Web Workers and Transferable Objects at\n\t     * [HTML5 Rocks](http://www.html5rocks.com/en/tutorials/workers/basics/).\n\t     *\n\t     * @param {Function} update\n\t     *   The update() function.\n\t     * @param {Number} [update.delta]\n\t     *   The amount of time in milliseconds to simulate in the update. In most\n\t     *   cases this timestep never changes in order to ensure deterministic\n\t     *   updates. The timestep is the same as that returned by\n\t     *   `MainLoop.getSimulationTimestep()`.\n\t     */\n\t    setUpdate: function setUpdate(fun) {\n\t        update = fun || update;\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the function that draws things on the screen.\n\t     *\n\t     * The draw() function gets passed the percent of time that the next run of\n\t     * {@link #setUpdate update}() will simulate that has actually elapsed, as\n\t     * a decimal. In other words, draw() gets passed how far between update()\n\t     * calls it is. This is useful because the time simulated by update() and\n\t     * the time between draw() calls is usually different, so the parameter to\n\t     * draw() can be used to interpolate motion between frames to make\n\t     * rendering appear smoother. To illustrate, if update() advances the\n\t     * simulation at each vertical bar in the first row below, and draw() calls\n\t     * happen at each vertical bar in the second row below, then some frames\n\t     * will have time left over that is not yet simulated by update() when\n\t     * rendering occurs in draw():\n\t     *\n\t     *     update() timesteps:  |  |  |  |  |  |  |  |  |\n\t     *     draw() calls:        |   |   |   |   |   |   |\n\t     *\n\t     * To interpolate motion for rendering purposes, objects' state after the\n\t     * last update() must be retained and used to calculate an intermediate\n\t     * state. Note that this means renders will be up to one update() behind.\n\t     * This is still better than extrapolating (projecting objects' state after\n\t     * a future update()) which can produce bizarre results. Storing multiple\n\t     * states can be difficult to set up, and keep in mind that running this\n\t     * process takes time that could push the frame rate down, so it's often\n\t     * not worthwhile unless stuttering is visible.\n\t     *\n\t     * @param {Function} draw\n\t     *   The draw() function.\n\t     * @param {Number} [draw.interpolationPercentage]\n\t     *   The cumulative amount of time that hasn't been simulated yet, divided\n\t     *   by the amount of time that will be simulated the next time update()\n\t     *   runs. Useful for interpolating frames.\n\t     */\n\t    setDraw: function setDraw(fun) {\n\t        draw = fun || draw;\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Sets the function that runs at the end of the main loop.\n\t     *\n\t     * Unlike {@link #setUpdate update}(), which can run zero or more times per\n\t     * frame, end() always runs exactly once per frame. This makes it useful\n\t     * for any updates that are not dependent on time in the simulation.\n\t     * Examples include cleaning up any temporary state set up by\n\t     * {@link #setBegin begin}(), lowering the visual quality if the frame rate\n\t     * is too low, or performing long-running updates incrementally. Compared\n\t     * to begin(), generally actions should occur in end() if they use anything\n\t     * that update() or {@link #setDraw draw}() affect.\n\t     *\n\t     * @param {Function} end\n\t     *   The end() function.\n\t     * @param {Number} [end.fps]\n\t     *   The exponential moving average of the frames per second. This is the\n\t     *   same value returned by `MainLoop.getFPS()`. It can be used to take\n\t     *   action when the FPS is too low (or to restore to normalcy if the FPS\n\t     *   moves back up). Examples of actions to take if the FPS is too low\n\t     *   include exiting the application, lowering the visual quality, stopping\n\t     *   or reducing activities outside of the main loop like event handlers or\n\t     *   audio playback, performing non-critical updates less frequently, or\n\t     *   increasing the simulation timestep (by calling\n\t     *   `MainLoop.setSimulationTimestep()`). Note that this last option\n\t     *   results in more time being simulated per update() call, which causes\n\t     *   the application to behave non-deterministically.\n\t     * @param {Boolean} [end.panic=false]\n\t     *   Indicates whether the simulation has fallen too far behind real time.\n\t     *   Specifically, `panic` will be `true` if too many updates occurred in\n\t     *   one frame. In networked lockstep applications, the application should\n\t     *   wait for some amount of time to see if the user can catch up before\n\t     *   dropping the user. In networked but non-lockstep applications, this\n\t     *   typically indicates that the user needs to be snapped or eased to the\n\t     *   current authoritative state. When this happens, it may be convenient\n\t     *   to call `MainLoop.resetFrameDelta()` to discard accumulated pending\n\t     *   updates. In non-networked applications, it may be acceptable to allow\n\t     *   the application to keep running for awhile to see if it will catch up.\n\t     *   However, this could also cause the application to look like it is\n\t     *   running very quickly for a few frames as it transitions through the\n\t     *   intermediate states. An alternative that may be acceptable is to\n\t     *   simply ignore the unsimulated elapsed time by calling\n\t     *   `MainLoop.resetFrameDelta()` even though this introduces\n\t     *   non-deterministic behavior. In all cases, if the application panics\n\t     *   frequently, this is an indication that the main loop is running too\n\t     *   slowly. However, most of the time the drop in frame rate will probably\n\t     *   be noticeable before a panic occurs. To help the application catch up\n\t     *   after a panic caused by a spiral of death, the same steps can be taken\n\t     *   that are suggested above if the FPS drops too low.\n\t     */\n\t    setEnd: function setEnd(fun) {\n\t        end = fun || end;\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Starts the main loop.\n\t     *\n\t     * Note that the application is not considered \"running\" immediately after\n\t     * this function returns; rather, it is considered \"running\" after the\n\t     * application draws its first frame. The distinction is that event\n\t     * handlers should remain paused until the application is running, even\n\t     * after `MainLoop.start()` is called. Check `MainLoop.isRunning()` for the\n\t     * current status. To act after the application starts, register a callback\n\t     * with requestAnimationFrame() after calling this function and execute the\n\t     * action in that callback. It is safe to call `MainLoop.start()` multiple\n\t     * times even before the application starts running and without calling\n\t     * `MainLoop.stop()` in between, although there is no reason to do this;\n\t     * the main loop will only start if it is not already started.\n\t     *\n\t     * See also `MainLoop.stop()`.\n\t     */\n\t    start: function start() {\n\t        if (!started) {\n\t            // Since the application doesn't start running immediately, track\n\t            // whether this function was called and use that to keep it from\n\t            // starting the main loop multiple times.\n\t            started = true;\n\t\n\t            // In the main loop, draw() is called after update(), so if we\n\t            // entered the main loop immediately, we would never render the\n\t            // initial state before any updates occur. Instead, we run one\n\t            // frame where all we do is draw, and then start the main loop with\n\t            // the next frame.\n\t            rafHandle = requestAnimationFrame(function (timestamp) {\n\t                // Render the initial state before any updates occur.\n\t                draw(1);\n\t\n\t                // The application isn't considered \"running\" until the\n\t                // application starts drawing.\n\t                running = true;\n\t\n\t                // Reset variables that are used for tracking time so that we\n\t                // don't simulate time passed while the application was paused.\n\t                lastFrameTimeMs = timestamp;\n\t                lastFpsUpdate = timestamp;\n\t                framesThisSecond = 0;\n\t\n\t                // Start the main loop.\n\t                rafHandle = requestAnimationFrame(animate);\n\t            });\n\t        }\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Stops the main loop.\n\t     *\n\t     * Event handling and other background tasks should also be paused when the\n\t     * main loop is paused.\n\t     *\n\t     * Note that pausing in multiplayer/multi-user applications will cause the\n\t     * player's/user's client to become out of sync. In this case the\n\t     * simulation should exit, or the player/user needs to be snapped to their\n\t     * updated position when the main loop is started again.\n\t     *\n\t     * See also `MainLoop.start()` and `MainLoop.isRunning()`.\n\t     */\n\t    stop: function stop() {\n\t        running = false;\n\t        started = false;\n\t        cancelAnimationFrame(rafHandle);\n\t\n\t        return this;\n\t    },\n\t\n\t    /**\n\t     * Returns whether the main loop is currently running.\n\t     *\n\t     * See also `MainLoop.start()` and `MainLoop.stop()`.\n\t     *\n\t     * @return {Boolean}\n\t     *   Whether the main loop is currently running.\n\t     */\n\t    isRunning: function isRunning() {\n\t        return running;\n\t    }\n\t};\n\t\n\t/**\n\t * The main loop that runs updates and rendering.\n\t *\n\t * @param {DOMHighResTimeStamp} timestamp\n\t *   The current timestamp. In practice this is supplied by\n\t *   requestAnimationFrame at the time that it starts to fire callbacks. This\n\t *   should only be used for comparison to other timestamps because the epoch\n\t *   (i.e. the \"zero\" time) depends on the engine running this code. In engines\n\t *   that support `DOMHighResTimeStamp` (all modern browsers except iOS Safari\n\t *   8) the epoch is the time the page started loading, specifically\n\t *   `performance.timing.navigationStart`. Everywhere else, including node.js,\n\t *   the epoch is the Unix epoch (1970-01-01T00:00:00Z).\n\t *\n\t * @ignore\n\t */\n\tfunction animate(timestamp) {\n\t    // Throttle the frame rate (if minFrameDelay is set to a non-zero value by\n\t    // `MainLoop.setMaxAllowedFPS()`).\n\t    if (timestamp < lastFrameTimeMs + minFrameDelay) {\n\t        // Run the loop again the next time the browser is ready to render.\n\t        rafHandle = requestAnimationFrame(animate);\n\t\n\t        return;\n\t    }\n\t\n\t    // frameDelta is the cumulative amount of in-app time that hasn't been\n\t    // simulated yet. Add the time since the last frame. We need to track total\n\t    // not-yet-simulated time (as opposed to just the time elapsed since the\n\t    // last frame) because not all actually elapsed time is guaranteed to be\n\t    // simulated each frame. See the comments below for details.\n\t    frameDelta += timestamp - lastFrameTimeMs;\n\t    lastFrameTimeMs = timestamp;\n\t\n\t    // Run any updates that are not dependent on time in the simulation. See\n\t    // `MainLoop.setBegin()` for additional details on how to use this.\n\t    begin(timestamp, frameDelta);\n\t\n\t    // Update the estimate of the frame rate, `fps`. Every second, the number\n\t    // of frames that occurred in that second are included in an exponential\n\t    // moving average of all frames per second, with an alpha of 0.25. This\n\t    // means that more recent seconds affect the estimated frame rate more than\n\t    // older seconds.\n\t    if (timestamp > lastFpsUpdate + 1000) {\n\t        // Compute the new exponential moving average with an alpha of 0.25.\n\t        // Using constants inline is okay here.\n\t        fps = 0.25 * framesThisSecond + 0.75 * fps;\n\t\n\t        lastFpsUpdate = timestamp;\n\t        framesThisSecond = 0;\n\t    }\n\t\n\t    framesThisSecond++;\n\t\n\t    /*\n\t     * A naive way to move an object along its X-axis might be to write a main\n\t     * loop containing the statement `obj.x += 10;` which would move the object\n\t     * 10 units per frame. This approach suffers from the issue that it is\n\t     * dependent on the frame rate. In other words, if your application is\n\t     * running slowly (that is, fewer frames per second), your object will also\n\t     * appear to move slowly, whereas if your application is running quickly\n\t     * (that is, more frames per second), your object will appear to move\n\t     * quickly. This is undesirable, especially in multiplayer/multi-user\n\t     * applications.\n\t     *\n\t     * One solution is to multiply the speed by the amount of time that has\n\t     * passed between rendering frames. For example, if you want your object to\n\t     * move 600 units per second, you might write `obj.x += 600 * delta`, where\n\t     * `delta` is the time passed since the last frame. (For convenience, let's\n\t     * move this statement to an update() function that takes `delta` as a\n\t     * parameter.) This way, your object will move a constant distance over\n\t     * time. However, at low frame rates and high speeds, your object will move\n\t     * large distances every frame, which can cause it to do strange things\n\t     * such as move through walls. Additionally, we would like our program to\n\t     * be deterministic. That is, every time we run the application with the\n\t     * same input, we would like exactly the same output. If the time between\n\t     * frames (the `delta`) varies, our output will diverge the longer the\n\t     * program runs due to accumulated rounding errors, even at normal frame\n\t     * rates.\n\t     *\n\t     * A better solution is to separate the amount of time simulated in each\n\t     * update() from the amount of time between frames. Our update() function\n\t     * doesn't need to change; we just need to change the delta we pass to it\n\t     * so that each update() simulates a fixed amount of time (that is, `delta`\n\t     * should have the same value each time update() is called). The update()\n\t     * function can be run multiple times per frame if needed to simulate the\n\t     * total amount of time passed since the last frame. (If the time that has\n\t     * passed since the last frame is less than the fixed simulation time, we\n\t     * just won't run an update() until the the next frame. If there is\n\t     * unsimulated time left over that is less than our timestep, we'll just\n\t     * leave it to be simulated during the next frame.) This approach avoids\n\t     * inconsistent rounding errors and ensures that there are no giant leaps\n\t     * through walls between frames.\n\t     *\n\t     * That is what is done below. It introduces a new problem, but it is a\n\t     * manageable one: if the amount of time spent simulating is consistently\n\t     * longer than the amount of time between frames, the application could\n\t     * freeze and crash in a spiral of death. This won't happen as long as the\n\t     * fixed simulation time is set to a value that is high enough that\n\t     * update() calls usually take less time than the amount of time they're\n\t     * simulating. If it does start to happen anyway, see `MainLoop.setEnd()`\n\t     * for a discussion of ways to stop it.\n\t     *\n\t     * Additionally, see `MainLoop.setUpdate()` for a discussion of performance\n\t     * considerations.\n\t     *\n\t     * Further reading for those interested:\n\t     *\n\t     * - http://gameprogrammingpatterns.com/game-loop.html\n\t     * - http://gafferongames.com/game-physics/fix-your-timestep/\n\t     * - https://gamealchemist.wordpress.com/2013/03/16/thoughts-on-the-javascript-game-loop/\n\t     * - https://developer.mozilla.org/en-US/docs/Games/Anatomy\n\t     */\n\t    numUpdateSteps = 0;\n\t    while (frameDelta >= simulationTimestep) {\n\t        update(simulationTimestep);\n\t        frameDelta -= simulationTimestep;\n\t\n\t        /*\n\t         * Sanity check: bail if we run the loop too many times.\n\t         *\n\t         * One way this could happen is if update() takes longer to run than\n\t         * the time it simulates, thereby causing a spiral of death. For ways\n\t         * to avoid this, see `MainLoop.setEnd()`. Another way this could\n\t         * happen is if the browser throttles serving frames, which typically\n\t         * occurs when the tab is in the background or the device battery is\n\t         * low. An event outside of the main loop such as audio processing or\n\t         * synchronous resource reads could also cause the application to hang\n\t         * temporarily and accumulate not-yet-simulated time as a result.\n\t         *\n\t         * 240 is chosen because, for any sane value of simulationTimestep, 240\n\t         * updates will simulate at least one second, and it will simulate four\n\t         * seconds with the default value of simulationTimestep. (Safari\n\t         * notifies users that the script is taking too long to run if it takes\n\t         * more than five seconds.)\n\t         *\n\t         * If there are more updates to run in a frame than this, the\n\t         * application will appear to slow down to the user until it catches\n\t         * back up. In networked applications this will usually cause the user\n\t         * to get out of sync with their peers, but if the updates are taking\n\t         * this long already, they're probably already out of sync.\n\t         */\n\t        if (++numUpdateSteps >= 240) {\n\t            panic = true;\n\t            break;\n\t        }\n\t    }\n\t\n\t    /*\n\t     * Render the screen. We do this regardless of whether update() has run\n\t     * during this frame because it is possible to interpolate between updates\n\t     * to make the frame rate appear faster than updates are actually\n\t     * happening. See `MainLoop.setDraw()` for an explanation of how to do\n\t     * that.\n\t     *\n\t     * We draw after updating because we want the screen to reflect a state of\n\t     * the application that is as up-to-date as possible. (`MainLoop.start()`\n\t     * draws the very first frame in the application's initial state, before\n\t     * any updates have occurred.) Some sources speculate that rendering\n\t     * earlier in the requestAnimationFrame callback can get the screen painted\n\t     * faster; this is mostly not true, and even when it is, it's usually just\n\t     * a trade-off between rendering the current frame sooner and rendering the\n\t     * next frame later.\n\t     *\n\t     * See `MainLoop.setDraw()` for details about draw() itself.\n\t     */\n\t    draw(frameDelta / simulationTimestep);\n\t\n\t    // Run any updates that are not dependent on time in the simulation. See\n\t    // `MainLoop.setEnd()` for additional details on how to use this.\n\t    end(fps, panic);\n\t\n\t    panic = false;\n\t\n\t    // Run the loop again the next time the browser is ready to render.\n\t    rafHandle = requestAnimationFrame(animate);\n\t}\n\t\n\texports.default = MainLoop;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _howler = __webpack_require__(9);\n\t\n\tvar _howler2 = _interopRequireDefault(_howler);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _assets = {\n\t    atlases: new Map(),\n\t    textures: new Map(),\n\t    maps: new Map(),\n\t    fonts: new Map(),\n\t    audio: new Map()\n\t};\n\t\n\tvar _loadHowlerAudio = function _loadHowlerAudio(name, spriteJson) {\n\t    return new Promise(function (resolve, reject) {\n\t        spriteJson.onload = function () {\n\t            return resolve();\n\t        };\n\t\n\t        spriteJson.onloaderror = function (soundId, err) {\n\t            return reject(err);\n\t        };\n\t\n\t        var sound = new _howler2.default.Howl(spriteJson);\n\t\n\t        var audio = {\n\t            mapping: spriteJson,\n\t            sound: sound\n\t        };\n\t\n\t        _assets.audio.set(name, audio);\n\t        console.log(_assets);\n\t    });\n\t};\n\t\n\tvar _loadAudioSprite = function _loadAudioSprite(audioSpritePath, name) {\n\t    return _loadJson(audioSpritePath + name + '.json').then(function (spriteJson) {\n\t        // FIXME change \"urls\" to \"src\" to work with Howler 2\n\t        spriteJson.src = spriteJson.urls;\n\t\n\t        var fullSources = [];\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = spriteJson.src[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var src = _step.value;\n\t\n\t                fullSources.push(audioSpritePath + src);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t\n\t        spriteJson.src = fullSources;\n\t\n\t        return _loadHowlerAudio(name, spriteJson);\n\t    });\n\t};\n\t\n\tvar _loadFont = function _loadFont(fontsPath, name) {\n\t    var font = {\n\t        mapping: null,\n\t        texture: null\n\t    };\n\t\n\t    return _loadJson(fontsPath + name + '.json').then(function (fontJson) {\n\t        font.mapping = fontJson;\n\t\n\t        // TODO only supports 1 font page for now\n\t        return _loadTexture(name, fontsPath + fontJson.pages[0]);\n\t    }).then(function () {\n\t        font.texture = _assets.textures.get(name);\n\t\n\t        _assets.fonts.set(name, font);\n\t    });\n\t};\n\t\n\tvar _loadTexture = function _loadTexture(name, url) {\n\t    return new Promise(function (resolve, reject) {\n\t        _textureLoader.load(url, function (texture) {\n\t            _assets.textures.set(name, texture);\n\t\n\t            return resolve();\n\t        }, function (progress) {\n\t            console.log(progress.loaded / progress.total * 100 + '% loaded');\n\t        }, function (err) {\n\t            return reject(err);\n\t        });\n\t    });\n\t};\n\t\n\tvar _loadXhr = function _loadXhr(url) {\n\t    return new Promise(function (resolve, reject) {\n\t        _xhrLoader.load(url, function (response) {\n\t            return resolve(response);\n\t        }, function (progress) {\n\t            console.log(progress.loaded / progress.total * 100 + '% loaded');\n\t        }, function (err) {\n\t            return reject(err);\n\t        });\n\t    });\n\t};\n\t\n\tvar _loadJson = function _loadJson(url) {\n\t    return _loadXhr(url).then(function (response) {\n\t        try {\n\t            return JSON.parse(response);\n\t        } catch (err) {\n\t            throw err;\n\t        }\n\t    });\n\t};\n\t\n\tvar _loadAtlas = function _loadAtlas(atlasesPath, name) {\n\t    return _loadJson(atlasesPath + name + '.json').then(function (atlas) {\n\t        return atlas;\n\t    }).then(function (atlas) {\n\t        _assets.atlases.set(name, atlas);\n\t        return _loadTexture(name, atlasesPath + atlas.meta.image);\n\t    });\n\t};\n\t\n\tvar _loadMap = function _loadMap(mapsPath, name) {\n\t    return _loadJson(mapsPath + name + '.json').then(function (atlas) {\n\t        _assets.maps.set(name, atlas);\n\t    });\n\t};\n\t\n\tvar _textureLoader = null;\n\tvar _xhrLoader = null;\n\t\n\tvar AssetLoader = {\n\t    init: function init(assetConfig) {\n\t        _textureLoader = new THREE.TextureLoader();\n\t        _xhrLoader = new THREE.XHRLoader();\n\t\n\t        var assetsToLoad = [];\n\t        var paths = assetConfig.paths;\n\t\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t            for (var _iterator2 = assetConfig.textureAtlases[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                var atlasName = _step2.value;\n\t\n\t                assetsToLoad.push(_loadAtlas(paths.atlases + '/', atlasName));\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError2 = true;\n\t            _iteratorError2 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                    _iterator2.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError2) {\n\t                    throw _iteratorError2;\n\t                }\n\t            }\n\t        }\n\t\n\t        var _iteratorNormalCompletion3 = true;\n\t        var _didIteratorError3 = false;\n\t        var _iteratorError3 = undefined;\n\t\n\t        try {\n\t            for (var _iterator3 = assetConfig.maps[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                var mapName = _step3.value;\n\t\n\t                assetsToLoad.push(_loadMap(paths.maps + '/', mapName));\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                    _iterator3.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError3) {\n\t                    throw _iteratorError3;\n\t                }\n\t            }\n\t        }\n\t\n\t        var _iteratorNormalCompletion4 = true;\n\t        var _didIteratorError4 = false;\n\t        var _iteratorError4 = undefined;\n\t\n\t        try {\n\t            for (var _iterator4 = assetConfig.fonts[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                var fontName = _step4.value;\n\t\n\t                assetsToLoad.push(_loadFont(paths.fonts + '/', fontName));\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError4 = true;\n\t            _iteratorError4 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                    _iterator4.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError4) {\n\t                    throw _iteratorError4;\n\t                }\n\t            }\n\t        }\n\t\n\t        var _iteratorNormalCompletion5 = true;\n\t        var _didIteratorError5 = false;\n\t        var _iteratorError5 = undefined;\n\t\n\t        try {\n\t            for (var _iterator5 = assetConfig.audio[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                var audioSpriteName = _step5.value;\n\t\n\t                assetsToLoad.push(_loadAudioSprite(paths.audio + '/', audioSpriteName));\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError5 = true;\n\t            _iteratorError5 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                    _iterator5.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError5) {\n\t                    throw _iteratorError5;\n\t                }\n\t            }\n\t        }\n\t\n\t        return Promise.all(assetsToLoad);\n\t    },\n\t\n\t    getTexture: function getTexture(name) {\n\t        var texture = _assets.textures.get(name);\n\t\n\t        if (!texture) {\n\t            throw new Error('Texture does not exist: ' + name);\n\t        }\n\t\n\t        return texture;\n\t    },\n\t    cloneTexture: function cloneTexture(name) {\n\t        var texture = this.getTexture(name);\n\t        var clone = texture.clone();\n\t\n\t        clone.needsUpdate = true;\n\t\n\t        return clone;\n\t    },\n\t    getMap: function getMap(name) {\n\t        var map = _assets.maps.get(name);\n\t\n\t        if (!map) {\n\t            throw new Error('Map does not exist: ' + name);\n\t        }\n\t\n\t        return map;\n\t    },\n\t    getAtlasMapping: function getAtlasMapping(name) {\n\t        var mapping = _assets.atlases.get(name);\n\t\n\t        if (!mapping) {\n\t            throw new Error('Atlas mapping does not exist: ' + name);\n\t        }\n\t\n\t        return mapping;\n\t    },\n\t    getFont: function getFont(name) {\n\t        var font = _assets.fonts.get(name);\n\t\n\t        if (!font) {\n\t            throw new Error('Font does not exist: ' + name);\n\t        }\n\t\n\t        return font;\n\t    },\n\t    getAudioSprite: function getAudioSprite(name) {\n\t        var audioSprite = _assets.audio.get(name);\n\t\n\t        if (!audioSprite) {\n\t            throw new Error('Audio sprite does not exist: ' + name);\n\t        }\n\t\n\t        return audioSprite;\n\t    }\n\t};\n\t\n\texports.default = AssetLoader;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! howler.js v2.0.0-beta5 | (c) 2013-2015, James Simpson of GoldFire Studios | MIT License | howlerjs.com */\n\t!function(){\"use strict\";function e(){try{\"undefined\"!=typeof AudioContext?n=new AudioContext:\"undefined\"!=typeof webkitAudioContext?n=new webkitAudioContext:o=!1}catch(e){o=!1}if(!o)if(\"undefined\"!=typeof Audio)try{var u=new Audio;\"undefined\"==typeof u.oncanplaythrough&&(d=\"canplay\")}catch(e){t=!0}else t=!0;try{var u=new Audio;u.muted&&(t=!0)}catch(e){}o&&(r=\"undefined\"==typeof n.createGain?n.createGainNode():n.createGain(),r.gain.value=1,r.connect(n.destination))}var n=null,o=!0,t=!1,r=null,d=\"canplaythrough\";e();var u=function(){this.init()};u.prototype={init:function(){var e=this||i;return e._codecs={},e._howls=[],e._muted=!1,e._volume=1,e.state=\"running\",e.autoSuspend=!0,e._autoSuspend(),e.mobileAutoEnable=!0,e.noAudio=t,e.usingWebAudio=o,e.ctx=n,t||e._setupCodecs(),e},volume:function(e){var n=this||i;if(e=parseFloat(e),\"undefined\"!=typeof e&&e>=0&&1>=e){n._volume=e,o&&(r.gain.value=e);for(var t=0;t<n._howls.length;t++)if(!n._howls[t]._webAudio)for(var d=n._howls[t]._getSoundIds(),u=0;u<d.length;u++){var a=n._howls[t]._soundById(d[u]);a&&a._node&&(a._node.volume=a._volume*e)}return n}return n._volume},mute:function(e){var n=this||i;n._muted=e,o&&(r.gain.value=e?0:n._volume);for(var t=0;t<n._howls.length;t++)if(!n._howls[t]._webAudio)for(var d=n._howls[t]._getSoundIds(),u=0;u<d.length;u++){var a=n._howls[t]._soundById(d[u]);a&&a._node&&(a._node.muted=e?!0:a._muted)}return n},unload:function(){for(var o=this||i,t=o._howls.length-1;t>=0;t--)o._howls[t].unload();return o.usingWebAudio&&\"undefined\"!=typeof n.close&&(o.ctx=null,n.close(),e(),o.ctx=n),o},codecs:function(e){return(this||i)._codecs[e]},_setupCodecs:function(){var e=this||i,n=new Audio,o=n.canPlayType(\"audio/mpeg;\").replace(/^no$/,\"\"),t=/OPR\\//.test(navigator.userAgent);return e._codecs={mp3:!(t||!o&&!n.canPlayType(\"audio/mp3;\").replace(/^no$/,\"\")),mpeg:!!o,opus:!!n.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/,\"\"),ogg:!!n.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,\"\"),wav:!!n.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/,\"\"),aac:!!n.canPlayType(\"audio/aac;\").replace(/^no$/,\"\"),m4a:!!(n.canPlayType(\"audio/x-m4a;\")||n.canPlayType(\"audio/m4a;\")||n.canPlayType(\"audio/aac;\")).replace(/^no$/,\"\"),mp4:!!(n.canPlayType(\"audio/x-mp4;\")||n.canPlayType(\"audio/mp4;\")||n.canPlayType(\"audio/aac;\")).replace(/^no$/,\"\"),weba:!!n.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/,\"\"),webm:!!n.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/,\"\")},e},_enableMobileAudio:function(){var e=this||i,o=/iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk/i.test(navigator.userAgent),t=!!(\"ontouchend\"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0);if(!n||!e._mobileEnabled&&o&&t){e._mobileEnabled=!1;var r=function(){var o=n.createBuffer(1,1,22050),t=n.createBufferSource();t.buffer=o,t.connect(n.destination),\"undefined\"==typeof t.start?t.noteOn(0):t.start(0),t.onended=function(){t.disconnect(0),e._mobileEnabled=!0,e.mobileAutoEnable=!1,document.removeEventListener(\"touchend\",r,!0)}};return document.addEventListener(\"touchend\",r,!0),e}},_autoSuspend:function(){var e=this;if(e.autoSuspend&&n&&\"undefined\"!=typeof n.suspend&&o){for(var t=0;t<e._howls.length;t++)if(e._howls[t]._webAudio)for(var r=0;r<e._howls[t]._sounds.length;r++)if(!e._howls[t]._sounds[r]._paused)return e;return e._suspendTimer=setTimeout(function(){e.autoSuspend&&(e._suspendTimer=null,e.state=\"suspending\",n.suspend().then(function(){e.state=\"suspended\",e._resumeAfterSuspend&&(delete e._resumeAfterSuspend,e._autoResume())}))},3e4),e}},_autoResume:function(){var e=this;if(n&&\"undefined\"!=typeof n.resume&&o)return\"running\"===e.state&&e._suspendTimer?(clearTimeout(e._suspendTimer),e._suspendTimer=null):\"suspended\"===e.state?(e.state=\"resuming\",n.resume().then(function(){e.state=\"running\"})):\"suspending\"===e.state&&(e._resumeAfterSuspend=!0),e}};var i=new u,a=function(e){var n=this;return e.src&&0!==e.src.length?void n.init(e):void console.error(\"An array of source files must be passed with any new Howl.\")};a.prototype={init:function(e){var t=this;return t._autoplay=e.autoplay||!1,t._ext=e.ext||null,t._html5=e.html5||!1,t._muted=e.mute||!1,t._loop=e.loop||!1,t._pool=e.pool||5,t._preload=\"boolean\"==typeof e.preload?e.preload:!0,t._rate=e.rate||1,t._sprite=e.sprite||{},t._src=\"string\"!=typeof e.src?e.src:[e.src],t._volume=void 0!==e.volume?e.volume:1,t._duration=0,t._loaded=!1,t._sounds=[],t._endTimers={},t._onend=e.onend?[{fn:e.onend}]:[],t._onfaded=e.onfaded?[{fn:e.onfaded}]:[],t._onload=e.onload?[{fn:e.onload}]:[],t._onloaderror=e.onloaderror?[{fn:e.onloaderror}]:[],t._onpause=e.onpause?[{fn:e.onpause}]:[],t._onplay=e.onplay?[{fn:e.onplay}]:[],t._onstop=e.onstop?[{fn:e.onstop}]:[],t._webAudio=o&&!t._html5,\"undefined\"!=typeof n&&n&&i.mobileAutoEnable&&i._enableMobileAudio(),i._howls.push(t),t._preload&&t.load(),t},load:function(){var e=this,n=null;if(t)return void e._emit(\"loaderror\",null,\"No audio support.\");\"string\"==typeof e._src&&(e._src=[e._src]);for(var o=0;o<e._src.length;o++){var r,d;if(e._ext&&e._ext[o]?r=e._ext[o]:(d=e._src[o],r=/^data:audio\\/([^;,]+);/i.exec(d),r||(r=/\\.([^.]+)$/.exec(d.split(\"?\",1)[0])),r&&(r=r[1].toLowerCase())),i.codecs(r)){n=e._src[o];break}}return n?(e._src=n,\"https:\"===window.location.protocol&&\"http:\"===n.slice(0,5)&&(e._html5=!0,e._webAudio=!1),new _(e),e._webAudio&&l(e),e):void e._emit(\"loaderror\",null,\"No codec support for selected audio sources.\")},play:function(e){var o=this,t=arguments,r=null;if(\"number\"==typeof e)r=e,e=null;else if(\"undefined\"==typeof e){e=\"__default\";for(var u=0,a=0;a<o._sounds.length;a++)o._sounds[a]._paused&&!o._sounds[a]._ended&&(u++,r=o._sounds[a]._id);1===u?e=null:r=null}var _=r?o._soundById(r):o._inactiveSound();if(!_)return null;if(r&&!e&&(e=_._sprite||\"__default\"),!o._loaded&&!o._sprite[e])return o.once(\"load\",function(){o.play(o._soundById(_._id)?_._id:void 0)}),_._id;if(r&&!_._paused)return _._id;o._webAudio&&i._autoResume();var s=_._seek>0?_._seek:o._sprite[e][0]/1e3,l=(o._sprite[e][0]+o._sprite[e][1])/1e3-s,f=1e3*l/Math.abs(_._rate);f!==1/0&&(o._endTimers[_._id]=setTimeout(o._ended.bind(o,_),f)),_._paused=!1,_._ended=!1,_._sprite=e,_._seek=s,_._start=o._sprite[e][0]/1e3,_._stop=(o._sprite[e][0]+o._sprite[e][1])/1e3,_._loop=!(!_._loop&&!o._sprite[e][2]);var c=_._node;if(o._webAudio){var p=function(){o._refreshBuffer(_);var e=_._muted||o._muted?0:_._volume*i.volume();c.gain.setValueAtTime(e,n.currentTime),_._playStart=n.currentTime,\"undefined\"==typeof c.bufferSource.start?_._loop?c.bufferSource.noteGrainOn(0,s,86400):c.bufferSource.noteGrainOn(0,s,l):_._loop?c.bufferSource.start(0,s,86400):c.bufferSource.start(0,s,l),o._endTimers[_._id]||f===1/0||(o._endTimers[_._id]=setTimeout(o._ended.bind(o,_),f)),t[1]||setTimeout(function(){o._emit(\"play\",_._id)},0)};o._loaded?p():(o.once(\"load\",p),o._clearTimer(_._id))}else{var m=function(){c.currentTime=s,c.muted=_._muted||o._muted||i._muted||c.muted,c.volume=_._volume*i.volume(),c.playbackRate=_._rate,setTimeout(function(){c.play(),t[1]||o._emit(\"play\",_._id)},0)};if(4===c.readyState||!c.readyState&&navigator.isCocoonJS)m();else{var v=function(){f!==1/0&&(o._endTimers[_._id]=setTimeout(o._ended.bind(o,_),f)),m(),c.removeEventListener(d,v,!1)};c.addEventListener(d,v,!1),o._clearTimer(_._id)}}return _._id},pause:function(e){var n=this;if(!n._loaded)return n.once(\"play\",function(){n.pause(e)}),n;for(var o=n._getSoundIds(e),t=0;t<o.length;t++){n._clearTimer(o[t]);var r=n._soundById(o[t]);if(r&&!r._paused){if(r._seek=n.seek(o[t]),r._paused=!0,n._stopFade(o[t]),r._node)if(n._webAudio){if(!r._node.bufferSource)return n;\"undefined\"==typeof r._node.bufferSource.stop?r._node.bufferSource.noteOff(0):r._node.bufferSource.stop(0),r._node.bufferSource=null}else isNaN(r._node.duration)&&r._node.duration!==1/0||r._node.pause();arguments[1]||n._emit(\"pause\",r._id)}}return n},stop:function(e){var n=this;if(!n._loaded)return\"undefined\"!=typeof n._sounds[0]._sprite&&n.once(\"play\",function(){n.stop(e)}),n;for(var o=n._getSoundIds(e),t=0;t<o.length;t++){n._clearTimer(o[t]);var r=n._soundById(o[t]);if(r&&!r._paused){if(r._seek=r._start||0,r._paused=!0,r._ended=!0,n._stopFade(o[t]),r._node)if(n._webAudio){if(!r._node.bufferSource)return n;\"undefined\"==typeof r._node.bufferSource.stop?r._node.bufferSource.noteOff(0):r._node.bufferSource.stop(0),r._node.bufferSource=null}else isNaN(r._node.duration)&&r._node.duration!==1/0||(r._node.pause(),r._node.currentTime=r._start||0);n._emit(\"stop\",r._id)}}return n},mute:function(e,o){var t=this;if(!t._loaded)return t.once(\"play\",function(){t.mute(e,o)}),t;if(\"undefined\"==typeof o){if(\"boolean\"!=typeof e)return t._muted;t._muted=e}for(var r=t._getSoundIds(o),d=0;d<r.length;d++){var u=t._soundById(r[d]);u&&(u._muted=e,t._webAudio&&u._node?u._node.gain.setValueAtTime(e?0:u._volume*i.volume(),n.currentTime):u._node&&(u._node.muted=i._muted?!0:e))}return t},volume:function(){var e,o,t=this,r=arguments;if(0===r.length)return t._volume;if(1===r.length){var d=t._getSoundIds(),u=d.indexOf(r[0]);u>=0?o=parseInt(r[0],10):e=parseFloat(r[0])}else r.length>=2&&(e=parseFloat(r[0]),o=parseInt(r[1],10));var a;if(!(\"undefined\"!=typeof e&&e>=0&&1>=e))return a=o?t._soundById(o):t._sounds[0],a?a._volume:0;if(!t._loaded)return t.once(\"play\",function(){t.volume.apply(t,r)}),t;\"undefined\"==typeof o&&(t._volume=e),o=t._getSoundIds(o);for(var _=0;_<o.length;_++)a=t._soundById(o[_]),a&&(a._volume=e,r[2]||t._stopFade(o[_]),t._webAudio&&a._node&&!a._muted?a._node.gain.setValueAtTime(e*i.volume(),n.currentTime):a._node&&!a._muted&&(a._node.volume=e*i.volume()));return t},fade:function(e,o,t,r){var d=this;if(!d._loaded)return d.once(\"play\",function(){d.fade(e,o,t,r)}),d;d.volume(e,r);for(var u=d._getSoundIds(r),i=0;i<u.length;i++){var a=d._soundById(u[i]);if(a)if(d._webAudio&&!a._muted){var _=n.currentTime,s=_+t/1e3;a._volume=e,a._node.gain.setValueAtTime(e,_),a._node.gain.linearRampToValueAtTime(o,s),a._timeout=setTimeout(function(e,t){delete t._timeout,setTimeout(function(){t._volume=o,d._emit(\"faded\",e)},s-n.currentTime>0?Math.ceil(1e3*(s-n.currentTime)):0)}.bind(d,u[i],a),t)}else{var l=Math.abs(e-o),f=e>o?\"out\":\"in\",c=l/.01,p=t/c;!function(){var n=e;a._interval=setInterval(function(e,t){n+=\"in\"===f?.01:-.01,n=Math.max(0,n),n=Math.min(1,n),n=Math.round(100*n)/100,d.volume(n,e,!0),n===o&&(clearInterval(t._interval),delete t._interval,d._emit(\"faded\",e))}.bind(d,u[i],a),p)}()}}return d},_stopFade:function(e){var o=this,t=o._soundById(e);return t._interval?(clearInterval(t._interval),delete t._interval,o._emit(\"faded\",e)):t._timeout&&(clearTimeout(t._timeout),delete t._timeout,t._node.gain.cancelScheduledValues(n.currentTime),o._emit(\"faded\",e)),o},loop:function(){var e,n,o,t=this,r=arguments;if(0===r.length)return t._loop;if(1===r.length){if(\"boolean\"!=typeof r[0])return o=t._soundById(parseInt(r[0],10)),o?o._loop:!1;e=r[0],t._loop=e}else 2===r.length&&(e=r[0],n=parseInt(r[1],10));for(var d=t._getSoundIds(n),u=0;u<d.length;u++)o=t._soundById(d[u]),o&&(o._loop=e,t._webAudio&&o._node&&o._node.bufferSource&&(o._node.bufferSource.loop=e));return t},rate:function(){var e,n,o=this,t=arguments;if(0===t.length)n=o._sounds[0]._id;else if(1===t.length){var r=o._getSoundIds(),d=r.indexOf(t[0]);d>=0?n=parseInt(t[0],10):e=parseFloat(t[0])}else 2===t.length&&(e=parseFloat(t[0]),n=parseInt(t[1],10));var u;if(\"number\"!=typeof e)return u=o._soundById(n),u?u._rate:o._rate;if(!o._loaded)return o.once(\"load\",function(){o.rate.apply(o,t)}),o;\"undefined\"==typeof n&&(o._rate=e),n=o._getSoundIds(n);for(var i=0;i<n.length;i++)if(u=o._soundById(n[i])){u._rate=e,o._webAudio&&u._node&&u._node.bufferSource?u._node.bufferSource.playbackRate.value=e:u._node&&(u._node.playbackRate=e);var a=o.seek(n[i]),_=(o._sprite[u._sprite][0]+o._sprite[u._sprite][1])/1e3-a,s=1e3*_/Math.abs(u._rate);o._clearTimer(n[i]),o._endTimers[n[i]]=setTimeout(o._ended.bind(o,u),s)}return o},seek:function(){var e,o,t=this,r=arguments;if(0===r.length)o=t._sounds[0]._id;else if(1===r.length){var d=t._getSoundIds(),u=d.indexOf(r[0]);u>=0?o=parseInt(r[0],10):(o=t._sounds[0]._id,e=parseFloat(r[0]))}else 2===r.length&&(e=parseFloat(r[0]),o=parseInt(r[1],10));if(\"undefined\"==typeof o)return t;if(!t._loaded)return t.once(\"load\",function(){t.seek.apply(t,r)}),t;var i=t._soundById(o);if(i){if(!(e>=0))return t._webAudio?i._seek+(t.playing(o)?n.currentTime-i._playStart:0):i._node.currentTime;var a=t.playing(o);a&&t.pause(o,!0),i._seek=e,t._clearTimer(o),a&&t.play(o,!0)}return t},playing:function(e){var n=this,o=n._soundById(e)||n._sounds[0];return o?!o._paused:!1},duration:function(){return this._duration},unload:function(){for(var e=this,n=e._sounds,o=0;o<n.length;o++){n[o]._paused||(e.stop(n[o]._id),e._emit(\"end\",n[o]._id)),e._webAudio||(n[o]._node.src=\"\",n[o]._node.removeEventListener(\"error\",n[o]._errorFn,!1),n[o]._node.removeEventListener(d,n[o]._loadFn,!1)),delete n[o]._node,e._clearTimer(n[o]._id);var t=i._howls.indexOf(e);t>=0&&i._howls.splice(t,1)}return s&&delete s[e._src],e._sounds=[],e=null,null},on:function(e,n,o,t){var r=this,d=r[\"_on\"+e];return\"function\"==typeof n&&d.push(t?{id:o,fn:n,once:t}:{id:o,fn:n}),r},off:function(e,n,o){var t=this,r=t[\"_on\"+e];if(n){for(var d=0;d<r.length;d++)if(n===r[d].fn&&o===r[d].id){r.splice(d,1);break}}else if(e)t[\"_on\"+e]=[];else for(var u=Object.keys(t),d=0;d<u.length;d++)0===u[d].indexOf(\"_on\")&&Array.isArray(t[u[d]])&&(t[u[d]]=[]);return t},once:function(e,n,o){var t=this;return t.on(e,n,o,1),t},_emit:function(e,n,o){for(var t=this,r=t[\"_on\"+e],d=0;d<r.length;d++)r[d].id&&r[d].id!==n||(setTimeout(function(e){e.call(this,n,o)}.bind(t,r[d].fn),0),r[d].once&&t.off(e,r[d].fn,r[d].id));return t},_ended:function(e){var o=this,t=e._sprite,r=!(!e._loop&&!o._sprite[t][2]);if(o._emit(\"end\",e._id),!o._webAudio&&r&&o.stop(e._id).play(e._id),o._webAudio&&r){o._emit(\"play\",e._id),e._seek=e._start||0,e._playStart=n.currentTime;var d=1e3*(e._stop-e._start)/Math.abs(e._rate);o._endTimers[e._id]=setTimeout(o._ended.bind(o,e),d)}return o._webAudio&&!r&&(e._paused=!0,e._ended=!0,e._seek=e._start||0,o._clearTimer(e._id),e._node.bufferSource=null,i._autoSuspend()),o._webAudio||r||o.stop(e._id),o},_clearTimer:function(e){var n=this;return n._endTimers[e]&&(clearTimeout(n._endTimers[e]),delete n._endTimers[e]),n},_soundById:function(e){for(var n=this,o=0;o<n._sounds.length;o++)if(e===n._sounds[o]._id)return n._sounds[o];return null},_inactiveSound:function(){var e=this;e._drain();for(var n=0;n<e._sounds.length;n++)if(e._sounds[n]._ended)return e._sounds[n].reset();return new _(e)},_drain:function(){var e=this,n=e._pool,o=0,t=0;if(!(e._sounds.length<n)){for(t=0;t<e._sounds.length;t++)e._sounds[t]._ended&&o++;for(t=e._sounds.length-1;t>=0;t--){if(n>=o)return;e._sounds[t]._ended&&(e._webAudio&&e._sounds[t]._node&&e._sounds[t]._node.disconnect(0),e._sounds.splice(t,1),o--)}}},_getSoundIds:function(e){var n=this;if(\"undefined\"==typeof e){for(var o=[],t=0;t<n._sounds.length;t++)o.push(n._sounds[t]._id);return o}return[e]},_refreshBuffer:function(e){var o=this;return e._node.bufferSource=n.createBufferSource(),e._node.bufferSource.buffer=s[o._src],e._node.bufferSource.connect(e._panner?e._panner:e._node),e._node.bufferSource.loop=e._loop,e._loop&&(e._node.bufferSource.loopStart=e._start||0,e._node.bufferSource.loopEnd=e._stop),e._node.bufferSource.playbackRate.value=o._rate,o}};var _=function(e){this._parent=e,this.init()};if(_.prototype={init:function(){var e=this,n=e._parent;return e._muted=n._muted,e._loop=n._loop,e._volume=n._volume,e._muted=n._muted,e._rate=n._rate,e._seek=0,e._paused=!0,e._ended=!0,e._sprite=\"__default\",e._id=Math.round(Date.now()*Math.random()),n._sounds.push(e),e.create(),e},create:function(){var e=this,o=e._parent,t=i._muted||e._muted||e._parent._muted?0:e._volume*i.volume();return o._webAudio?(e._node=\"undefined\"==typeof n.createGain?n.createGainNode():n.createGain(),e._node.gain.setValueAtTime(t,n.currentTime),e._node.paused=!0,e._node.connect(r)):(e._node=new Audio,e._errorFn=e._errorListener.bind(e),e._node.addEventListener(\"error\",e._errorFn,!1),e._loadFn=e._loadListener.bind(e),e._node.addEventListener(d,e._loadFn,!1),e._node.src=o._src,e._node.preload=\"auto\",e._node.volume=t,e._node.load()),e},reset:function(){var e=this,n=e._parent;return e._muted=n._muted,e._loop=n._loop,e._volume=n._volume,e._muted=n._muted,e._rate=n._rate,e._seek=0,e._paused=!0,e._ended=!0,e._sprite=\"__default\",e._id=Math.round(Date.now()*Math.random()),e},_errorListener:function(){var e=this;e._node.error&&4===e._node.error.code&&(i.noAudio=!0),e._parent._emit(\"loaderror\",e._id,e._node.error?e._node.error.code:0),e._node.removeEventListener(\"error\",e._errorListener,!1)},_loadListener:function(){var e=this,n=e._parent;n._duration=Math.ceil(10*e._node.duration)/10,0===Object.keys(n._sprite).length&&(n._sprite={__default:[0,1e3*n._duration]}),n._loaded||(n._loaded=!0,n._emit(\"load\")),n._autoplay&&n.play(),e._node.removeEventListener(d,e._loadFn,!1)}},o)var s={},l=function(e){var n=e._src;if(s[n])return e._duration=s[n].duration,void p(e);if(/^data:[^;]+;base64,/.test(n)){window.atob=window.atob||function(e){for(var n,o,t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",r=String(e).replace(/=+$/,\"\"),d=0,u=0,i=\"\";o=r.charAt(u++);~o&&(n=d%4?64*n+o:o,d++%4)?i+=String.fromCharCode(255&n>>(-2*d&6)):0)o=t.indexOf(o);return i};for(var o=atob(n.split(\",\")[1]),t=new Uint8Array(o.length),r=0;r<o.length;++r)t[r]=o.charCodeAt(r);c(t.buffer,e)}else{var d=new XMLHttpRequest;d.open(\"GET\",n,!0),d.responseType=\"arraybuffer\",d.onload=function(){c(d.response,e)},d.onerror=function(){e._webAudio&&(e._html5=!0,e._webAudio=!1,e._sounds=[],delete s[n],e.load())},f(d)}},f=function(e){try{e.send()}catch(n){e.onerror()}},c=function(e,o){n.decodeAudioData(e,function(e){e&&o._sounds.length>0&&(s[o._src]=e,p(o,e))},function(){o._emit(\"loaderror\",null,\"Decoding audio data failed.\")})},p=function(e,n){n&&!e._duration&&(e._duration=n.duration),0===Object.keys(e._sprite).length&&(e._sprite={__default:[0,1e3*e._duration]}),e._loaded||(e._loaded=!0,e._emit(\"load\")),e._autoplay&&e.play()};\"function\"==\"function\"&&__webpack_require__(10)&&!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){return{Howler:i,Howl:a}}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)),\"undefined\"!=typeof exports&&(exports.Howler=i,exports.Howl=a),\"undefined\"!=typeof window&&(window.HowlerGlobal=u,window.Howler=i,window.Howl=a,window.Sound=_)}();\n\t/*! Effects Plugin */\n\t!function(){\"use strict\";HowlerGlobal.prototype.init=function(e){return function(){var n=this;return n._pos=[0,0,0],n._orientation=[0,0,-1,0,1,0],n._velocity=[0,0,0],n._listenerAttr={dopplerFactor:1,speedOfSound:343.3},e.call(this,o)}}(HowlerGlobal.prototype.init),HowlerGlobal.prototype.pos=function(e,n,t){var o=this;return o.ctx&&o.ctx.listener?(n=\"number\"!=typeof n?o._pos[1]:n,t=\"number\"!=typeof t?o._pos[2]:t,\"number\"!=typeof e?o._pos:(o._pos=[e,n,t],o.ctx.listener.setPosition(o._pos[0],o._pos[1],o._pos[2]),o)):o},HowlerGlobal.prototype.orientation=function(e,n,t,o,r,i){var a=this;if(!a.ctx||!a.ctx.listener)return a;var p=a._orientation;return n=\"number\"!=typeof n?p[1]:n,t=\"number\"!=typeof t?p[2]:t,o=\"number\"!=typeof o?p[3]:o,r=\"number\"!=typeof r?p[4]:r,i=\"number\"!=typeof i?p[5]:i,\"number\"!=typeof e?p:(a._orientation=[e,n,t,o,r,i],a.ctx.listener.setOrientation(p[0],p[1],p[2],p[3],p[4],p[5]),a)},HowlerGlobal.prototype.velocity=function(e,n,t){var o=this;return o.ctx&&o.ctx.listener?(n=\"number\"!=typeof n?o._velocity[1]:n,t=\"number\"!=typeof t?o._velocity[2]:t,\"number\"!=typeof e?o._velocity:(o._velocity=[e,n,t],o.ctx.listener.setVelocity(o._velocity[0],o._velocity[1],o._velocity[2]),o)):o},HowlerGlobal.prototype.listenerAttr=function(e){var n=this;if(!n.ctx||!n.ctx.listener)return n;var t=n._listenerAttr;return e?(n._listenerAttr={dopplerFactor:\"undefined\"!=typeof e.dopplerFactor?e.dopplerFactor:t.dopplerFactor,speedOfSound:\"undefined\"!=typeof e.speedOfSound?e.speedOfSound:t.speedOfSound},n.ctx.listener.dopplerFactor=t.dopplerFactor,n.ctx.listener.speedOfSound=t.speedOfSound,n):t},Howl.prototype.init=function(e){return function(n){var t=this;return t._orientation=n.orientation||[1,0,0],t._pos=n.pos||null,t._velocity=n.velocity||[0,0,0],t._pannerAttr={coneInnerAngle:\"undefined\"!=typeof n.coneInnerAngle?n.coneInnerAngle:360,coneOUterAngle:\"undefined\"!=typeof n.coneOUterAngle?n.coneOUterAngle:360,coneOuterGain:\"undefined\"!=typeof n.coneOuterGain?n.coneOuterGain:0,distanceModel:\"undefined\"!=typeof n.distanceModel?n.distanceModel:\"inverse\",maxDistance:\"undefined\"!=typeof n.maxDistance?n.maxDistance:1e4,panningModel:\"undefined\"!=typeof n.panningModel?n.panningModel:\"HRTF\",refDistance:\"undefined\"!=typeof n.refDistance?n.refDistance:1,rolloffFactor:\"undefined\"!=typeof n.rolloffFactor?n.rolloffFactor:1},e.call(this,n)}}(Howl.prototype.init),Howl.prototype.pos=function(n,t,o,r){var i=this;if(!i._webAudio)return i;if(!i._loaded)return i.once(\"play\",function(){i.pos(n,t,o,r)}),i;if(t=\"number\"!=typeof t?0:t,o=\"number\"!=typeof o?-.5:o,\"undefined\"==typeof r){if(\"number\"!=typeof n)return i._pos;i._pos=[n,t,o]}for(var a=i._getSoundIds(r),p=0;p<a.length;p++){var l=i._soundById(a[p]);if(l){if(\"number\"!=typeof n)return l._pos;l._pos=[n,t,o],l._node&&(l._panner||e(l),l._panner.setPosition(n,t,o))}}return i},Howl.prototype.orientation=function(n,t,o,r){var i=this;if(!i._webAudio)return i;if(!i._loaded)return i.once(\"play\",function(){i.orientation(n,t,o,r)}),i;if(t=\"number\"!=typeof t?i._orientation[1]:t,o=\"number\"!=typeof o?i._orientation[1]:o,\"undefined\"==typeof r){if(\"number\"!=typeof n)return i._orientation;i._orientation=[n,t,o]}for(var a=i._getSoundIds(r),p=0;p<a.length;p++){var l=i._soundById(a[p]);if(l){if(\"number\"!=typeof n)return l._orientation;l._orientation=[n,t,o],l._node&&(l._panner||e(l),l._panner.setOrientation(n,t,o))}}return i},Howl.prototype.velocity=function(n,t,o,r){var i=this;if(!i._webAudio)return i;if(!i._loaded)return i.once(\"play\",function(){i.velocity(n,t,o,r)}),i;if(t=\"number\"!=typeof t?i._velocity[1]:t,o=\"number\"!=typeof o?i._velocity[1]:o,\"undefined\"==typeof r){if(\"number\"!=typeof n)return i._velocity;i._velocity=[n,t,o]}for(var a=i._getSoundIds(r),p=0;p<a.length;p++){var l=i._soundById(a[p]);if(l){if(\"number\"!=typeof n)return l._velocity;l._velocity=[n,t,o],l._node&&(l._panner||e(l),l._panner.setVelocity(n,t,o))}}return i},Howl.prototype.pannerAttr=function(){var n,t,o,r=this,i=arguments;if(!r._webAudio)return r;if(0===i.length)return r._pannerAttr;if(1===i.length){if(\"object\"!=typeof i[0])return o=r._soundById(parseInt(i[0],10)),o?o._pannerAttr:r._pannerAttr;n=i[0],\"undefined\"==typeof t&&(r._pannerAttr={coneInnerAngle:\"undefined\"!=typeof n.coneInnerAngle?n.coneInnerAngle:r._coneInnerAngle,coneOUterAngle:\"undefined\"!=typeof n.coneOUterAngle?n.coneOUterAngle:r._coneOUterAngle,coneOuterGain:\"undefined\"!=typeof n.coneOuterGain?n.coneOuterGain:r._coneOuterGain,distanceModel:\"undefined\"!=typeof n.distanceModel?n.distanceModel:r._distanceModel,maxDistance:\"undefined\"!=typeof n.maxDistance?n.maxDistance:r._maxDistance,panningModel:\"undefined\"!=typeof n.panningModel?n.panningModel:r._panningModel,refDistance:\"undefined\"!=typeof n.refDistance?n.refDistance:r._refDistance,rolloffFactor:\"undefined\"!=typeof n.rolloffFactor?n.rolloffFactor:r._rolloffFactor})}else 2===i.length&&(n=i[0],t=parseInt(i[1],10));for(var a=r._getSoundIds(t),p=0;p<a.length;p++)if(o=r._soundById(a[p])){var l=o._pannerAttr;l={coneInnerAngle:\"undefined\"!=typeof n.coneInnerAngle?n.coneInnerAngle:l.coneInnerAngle,coneOUterAngle:\"undefined\"!=typeof n.coneOUterAngle?n.coneOUterAngle:l.coneOUterAngle,coneOuterGain:\"undefined\"!=typeof n.coneOuterGain?n.coneOuterGain:l.coneOuterGain,distanceModel:\"undefined\"!=typeof n.distanceModel?n.distanceModel:l.distanceModel,maxDistance:\"undefined\"!=typeof n.maxDistance?n.maxDistance:l.maxDistance,panningModel:\"undefined\"!=typeof n.panningModel?n.panningModel:l.panningModel,refDistance:\"undefined\"!=typeof n.refDistance?n.refDistance:l.refDistance,rolloffFactor:\"undefined\"!=typeof n.rolloffFactor?n.rolloffFactor:l.rolloffFactor};var c=o._panner;c?(c.coneInnerAngle=l.coneInnerAngle,c.coneOUterAngle=l.coneOUterAngle,c.coneOuterGain=l.coneOuterGain,c.distanceModel=l.distanceModel,c.maxDistance=l.maxDistance,c.panningModel=l.panningModel,c.refDistance=l.refDistance,c.rolloffFactor=l.rolloffFactor):(o._pos||(o._pos=r._pos||[0,0,-.5]),e(o))}return r},Sound.prototype.init=function(e){return function(){var n=this,t=n._parent;n._orientation=t._orientation,n._pos=t._pos,n._velocity=t._velocity,n._pannerAttr=t._pannerAttr,e.call(this),n._pos&&t.pos(n._pos[0],n._pos[1],n._pos[2],n._id)}}(Sound.prototype.init),Sound.prototype.reset=function(e){return function(){var n=this,t=n._parent;return n._orientation=t._orientation,n._pos=t._pos,n._velocity=t._velocity,n._pannerAttr=t._pannerAttr,e.call(this)}}(Sound.prototype.reset);var e=function(e){e._panner=Howler.ctx.createPanner(),e._panner.coneInnerAngle=e._pannerAttr.coneInnerAngle,e._panner.coneOUterAngle=e._pannerAttr.coneOUterAngle,e._panner.coneOuterGain=e._pannerAttr.coneOuterGain,e._panner.distanceModel=e._pannerAttr.distanceModel,e._panner.maxDistance=e._pannerAttr.maxDistance,e._panner.panningModel=e._pannerAttr.panningModel,e._panner.refDistance=e._pannerAttr.refDistance,e._panner.rolloffFactor=e._pannerAttr.rolloffFactor,e._panner.setPosition(e._pos[0],e._pos[1],e._pos[2]),e._panner.setOrientation(e._orientation[0],e._orientation[1],e._orientation[2]),e._panner.setVelocity(e._velocity[0],e._velocity[1],e._velocity[2]),e._panner.connect(e._node),e._paused||e._parent.pause(e._id).play(e._id)}}();\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {module.exports = __webpack_amd_options__;\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, {}))\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\t// Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\tvar splitPathRe =\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\tvar splitPath = function(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t};\n\t\n\t// path.resolve([from ...], to)\n\t// posix version\n\texports.resolve = function() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\t\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\n\t\n\t    // Skip empty and invalid entries\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\t\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  }\n\t\n\t  // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t\n\t  // Normalize the path\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n\t};\n\t\n\t// path.normalize(path)\n\t// posix version\n\texports.normalize = function(path) {\n\t  var isAbsolute = exports.isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/';\n\t\n\t  // Normalize the path\n\t  path = normalizeArray(filter(path.split('/'), function(p) {\n\t    return !!p;\n\t  }), !isAbsolute).join('/');\n\t\n\t  if (!path && !isAbsolute) {\n\t    path = '.';\n\t  }\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\t\n\t  return (isAbsolute ? '/' : '') + path;\n\t};\n\t\n\t// posix version\n\texports.isAbsolute = function(path) {\n\t  return path.charAt(0) === '/';\n\t};\n\t\n\t// posix version\n\texports.join = function() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return exports.normalize(filter(paths, function(p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\t    return p;\n\t  }).join('/'));\n\t};\n\t\n\t\n\t// path.relative(from, to)\n\t// posix version\n\texports.relative = function(from, to) {\n\t  from = exports.resolve(from).substr(1);\n\t  to = exports.resolve(to).substr(1);\n\t\n\t  function trim(arr) {\n\t    var start = 0;\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\t\n\t    var end = arr.length - 1;\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\t\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\t\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var outputParts = [];\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\t\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t\n\t  return outputParts.join('/');\n\t};\n\t\n\texports.sep = '/';\n\texports.delimiter = ':';\n\t\n\texports.dirname = function(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\t\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\t\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\t\n\t  return root + dir;\n\t};\n\t\n\t\n\texports.basename = function(path, ext) {\n\t  var f = splitPath(path)[2];\n\t  // TODO: make this comparison case-insensitive on windows?\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\t  return f;\n\t};\n\t\n\t\n\texports.extname = function(path) {\n\t  return splitPath(path)[3];\n\t};\n\t\n\tfunction filter (xs, f) {\n\t    if (xs.filter) return xs.filter(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (f(xs[i], i, xs)) res.push(xs[i]);\n\t    }\n\t    return res;\n\t}\n\t\n\t// String.prototype.substr - negative index don't work in IE8\n\tvar substr = 'ab'.substr(-1) === 'b'\n\t    ? function (str, start, len) { return str.substr(start, len) }\n\t    : function (str, start, len) {\n\t        if (start < 0) start = str.length + start;\n\t        return str.substr(start, len);\n\t    }\n\t;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(12)))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\t\n\tvar process = module.exports = {};\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = setTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    clearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        setTimeout(drainQueue, 0);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tvar _MenuItem = __webpack_require__(40);\n\t\n\tvar _MenuItem2 = _interopRequireDefault(_MenuItem);\n\t\n\tvar _MenuInput = __webpack_require__(41);\n\t\n\tvar _MenuInput2 = _interopRequireDefault(_MenuInput);\n\t\n\tvar _MenuItemsView = __webpack_require__(46);\n\t\n\tvar _MenuItemsView2 = _interopRequireDefault(_MenuItemsView);\n\t\n\tvar _MenuRenderView = __webpack_require__(48);\n\t\n\tvar _MenuRenderView2 = _interopRequireDefault(_MenuRenderView);\n\t\n\tvar _LogoView = __webpack_require__(47);\n\t\n\tvar _LogoView2 = _interopRequireDefault(_LogoView);\n\t\n\tvar _MenuAudio = __webpack_require__(49);\n\t\n\tvar _MenuAudio2 = _interopRequireDefault(_MenuAudio);\n\t\n\tvar _Menu = __webpack_require__(51);\n\t\n\tvar _Menu2 = _interopRequireDefault(_Menu);\n\t\n\tvar _OptionsMenu = __webpack_require__(52);\n\t\n\tvar _OptionsMenu2 = _interopRequireDefault(_OptionsMenu);\n\t\n\tvar _HelpMenu = __webpack_require__(54);\n\t\n\tvar _HelpMenu2 = _interopRequireDefault(_HelpMenu);\n\t\n\tvar _PlayBuilder = __webpack_require__(55);\n\t\n\tvar _PlayBuilder2 = _interopRequireDefault(_PlayBuilder);\n\t\n\tvar _MenuState = __webpack_require__(99);\n\t\n\tvar _MenuState2 = _interopRequireDefault(_MenuState);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Create the play state.\n\t *\n\t * @param {Engine} engine Game engine.\n\t * @param {object} options Options for the play state.\n\t *\n\t * @return {PlayState} The created play state.\n\t */\n\tfunction createPlayState(engine, options) {\n\t    var playOptions = Object.assign({\n\t        poolLimit: 200,\n\t        teams: ['american', 'german'],\n\t        cpuCount: 7,\n\t        map: 'level2',\n\t        playerName: 'unknown soldier'\n\t    }, options);\n\t\n\t    var playState = _PlayBuilder2.default.createSingleplayer(engine, playOptions);\n\t\n\t    engine.addState('play', playState);\n\t\n\t    return playState;\n\t}\n\t\n\tvar MenuBuilder = {\n\t    create: function create(engine) {\n\t        this.engine = engine;\n\t        this.state = new _MenuState2.default();\n\t        this.menu = new _Menu2.default();\n\t\n\t        var menuInput = new _MenuInput2.default(this.state);\n\t\n\t        this.state.inputs.add(menuInput);\n\t\n\t        this.subMenus = new Map([['options', _OptionsMenu2.default.create(this.state)], ['help', _HelpMenu2.default.create(this.state)]]);\n\t\n\t        this._createMenuItems();\n\t\n\t        this.state.currentMenu = 'main';\n\t        this.state.audio = new _MenuAudio2.default(this.state, 'menu_effects', 'background');\n\t\n\t        this._createView();\n\t\n\t        return this.state;\n\t    },\n\t    _createMenuItems: function _createMenuItems() {\n\t        var _this = this;\n\t\n\t        this.menu.addMenuItem(new _MenuItem2.default('createGame', 'Create game', function (menuItem) {\n\t            var playState = _this.engine.states.get('play');\n\t\n\t            if (!playState) {\n\t                playState = createPlayState(_this.engine, {\n\t                    playerName: _this.state.options.get('name')\n\t                });\n\t\n\t                menuItem.text = 'Create game';\n\t            } else {\n\t                _this.state.gamePlaying = true;\n\t\n\t                playState.player.name = _this.state.options.get('name');\n\t                menuItem.text = 'Continue game';\n\t            }\n\t\n\t            playState.resume();\n\t\n\t            _this.engine.changeState('play');\n\t        }));\n\t\n\t        this.menu.addMenuItem(new _MenuItem2.default('options', 'Options', function () {\n\t            _this.state.currentMenu = 'options';\n\t        }));\n\t\n\t        this.menu.addMenuItem(new _MenuItem2.default('help', 'Help', function () {\n\t            _this.state.currentMenu = 'help';\n\t        }));\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = this.subMenus.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var _step$value = _slicedToArray(_step.value, 2);\n\t\n\t                var subMenuName = _step$value[0];\n\t                var subMenu = _step$value[1];\n\t\n\t                this.state.addMenu(subMenuName, subMenu.menu);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t\n\t        this.state.addMenu('main', this.menu);\n\t    },\n\t    _createView: function _createView() {\n\t        var menuView = new _MenuRenderView2.default(this.state);\n\t        var viewContainer = new _graphics.ViewContainer();\n\t        var background1 = new _graphics.BackgroundView('normandy', 'ui');\n\t\n\t        viewContainer.addDynamicView(new _MenuItemsView2.default(this.menu), { x: 500, y: 100, z: 0 });\n\t        viewContainer.addStaticView(new _LogoView2.default('logo', 'ui'), { x: 300, y: 300, z: 0 });\n\t\n\t        background1.lightness = 0.5;\n\t        viewContainer.backgroundView = background1;\n\t\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t            for (var _iterator2 = this.subMenus.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                var _step2$value = _slicedToArray(_step2.value, 2);\n\t\n\t                var subMenuName = _step2$value[0];\n\t                var subMenu = _step2$value[1];\n\t\n\t                menuView.addViewContainer(subMenuName, subMenu.viewContainer);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError2 = true;\n\t            _iteratorError2 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                    _iterator2.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError2) {\n\t                    throw _iteratorError2;\n\t                }\n\t            }\n\t        }\n\t\n\t        menuView.addViewContainer('main', viewContainer);\n\t\n\t        menuView.currentViewContainer = 'main';\n\t\n\t        this.state.addView(menuView);\n\t    }\n\t};\n\t\n\texports.default = MenuBuilder;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.ViewContainer = exports.BackgroundView = exports.View = exports.TextView = exports.TextureManager = exports.TextureFrame = exports.TextureAtlas = exports.RenderView = exports.Renderer = exports.Animation = undefined;\n\t\n\tvar _Animation = __webpack_require__(15);\n\t\n\tvar _Animation2 = _interopRequireDefault(_Animation);\n\t\n\tvar _Renderer = __webpack_require__(6);\n\t\n\tvar _Renderer2 = _interopRequireDefault(_Renderer);\n\t\n\tvar _RenderView = __webpack_require__(17);\n\t\n\tvar _RenderView2 = _interopRequireDefault(_RenderView);\n\t\n\tvar _TextureAtlas = __webpack_require__(18);\n\t\n\tvar _TextureAtlas2 = _interopRequireDefault(_TextureAtlas);\n\t\n\tvar _TextureFrame = __webpack_require__(16);\n\t\n\tvar _TextureFrame2 = _interopRequireDefault(_TextureFrame);\n\t\n\tvar _TextureManager = __webpack_require__(19);\n\t\n\tvar _TextureManager2 = _interopRequireDefault(_TextureManager);\n\t\n\tvar _TextView = __webpack_require__(20);\n\t\n\tvar _TextView2 = _interopRequireDefault(_TextView);\n\t\n\tvar _View = __webpack_require__(21);\n\t\n\tvar _View2 = _interopRequireDefault(_View);\n\t\n\tvar _ViewContainer = __webpack_require__(38);\n\t\n\tvar _ViewContainer2 = _interopRequireDefault(_ViewContainer);\n\t\n\tvar _BackgroundView = __webpack_require__(39);\n\t\n\tvar _BackgroundView2 = _interopRequireDefault(_BackgroundView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Animation = _Animation2.default;\n\texports.Renderer = _Renderer2.default;\n\texports.RenderView = _RenderView2.default;\n\texports.TextureAtlas = _TextureAtlas2.default;\n\texports.TextureFrame = _TextureFrame2.default;\n\texports.TextureManager = _TextureManager2.default;\n\texports.TextView = _TextView2.default;\n\texports.View = _View2.default;\n\texports.BackgroundView = _BackgroundView2.default;\n\texports.ViewContainer = _ViewContainer2.default;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _TextureFrame = __webpack_require__(16);\n\t\n\tvar _TextureFrame2 = _interopRequireDefault(_TextureFrame);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Animation = (function () {\n\t    function Animation(textureAtlas, geometry) {\n\t        var interval = arguments.length <= 2 || arguments[2] === undefined ? 10 : arguments[2];\n\t        var repeat = arguments.length <= 3 || arguments[3] === undefined ? true : arguments[3];\n\t        var frames = arguments.length <= 4 || arguments[4] === undefined ? [] : arguments[4];\n\t        var framePrefix = arguments.length <= 5 || arguments[5] === undefined ? '' : arguments[5];\n\t        var fixed = arguments.length <= 6 || arguments[6] === undefined ? false : arguments[6];\n\t\n\t        _classCallCheck(this, Animation);\n\t\n\t        this.textureAtlas = textureAtlas;\n\t        this.geometry = geometry;\n\t\n\t        // Use the first frame as a size reference\n\t        this.textureFrame = new _TextureFrame2.default(this.textureAtlas, geometry, framePrefix + frames[0], fixed);\n\t\n\t        this.interval = interval;\n\t        this.frames = frames;\n\t        this.framePrefix = framePrefix;\n\t        this.currentFrameIndex = 0;\n\t        this.currentDisplayTime = 0;\n\t\n\t        this._updateTexture();\n\t    }\n\t\n\t    _createClass(Animation, [{\n\t        key: '_updateTexture',\n\t        value: function _updateTexture() {\n\t            var currentFrame = this.framePrefix + this.frames[this.currentFrameIndex];\n\t\n\t            this.textureFrame.frame = currentFrame;\n\t        }\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this.currentFrameIndex = 0;\n\t            this.currentDisplayTime = 0;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            this.currentDisplayTime += 1;\n\t\n\t            if (this.currentDisplayTime > this.interval) {\n\t                this.currentDisplayTime = 0;\n\t\n\t                this.currentFrameIndex++;\n\t\n\t                if (this.currentFrameIndex >= this.frames.length) {\n\t                    this.currentFrameIndex = 0;\n\t                }\n\t\n\t                this._updateTexture();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'texture',\n\t        get: function get() {\n\t            return this.textureAtlas.texture;\n\t        }\n\t    }, {\n\t        key: 'currentFrame',\n\t        get: function get() {\n\t            return this.frames[this.currentFrameIndex];\n\t        }\n\t    }]);\n\t\n\t    return Animation;\n\t})();\n\t\n\t;\n\t\n\texports.default = Animation;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TextureFrame = (function () {\n\t    function TextureFrame(textureAtlas, geometry, initialFrame) {\n\t        var fixed = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\n\t\n\t        _classCallCheck(this, TextureFrame);\n\t\n\t        this.textureAtlas = textureAtlas;\n\t        this.geometry = geometry;\n\t        this.fixed = fixed;\n\t\n\t        if (initialFrame) {\n\t            this.frame = initialFrame;\n\t\n\t            if (fixed) {\n\t                var size = this.textureAtlas.getFrameSize(initialFrame);\n\t\n\t                this._changeSize(size.width, size.height);\n\t            }\n\t        }\n\t    }\n\t\n\t    _createClass(TextureFrame, [{\n\t        key: \"_changeSize\",\n\t        value: function _changeSize(width, height) {\n\t            this.width = width;\n\t            this.height = height;\n\t            var aw = this.textureAtlas.width;\n\t            var ah = this.textureAtlas.height;\n\t\n\t            if (this.geometry) {\n\t                // TODO make this more efficient (no new instances necessary)\n\t                var bounds = [new THREE.Vector2(0, ah / ah), // lower left\n\t                new THREE.Vector2(0, (ah - height) / ah), // upper left\n\t                new THREE.Vector2(width / aw, (ah - height) / ah), // upper right\n\t                new THREE.Vector2(width / aw, ah / ah) // lower right\n\t                ];\n\t\n\t                // If a geometry is merged, for example multiple planes\n\t                for (var i = 1; i < this.geometry.faceVertexUvs[0].length; i += 2) {\n\t                    this.geometry.faceVertexUvs[0][i - 1] = [bounds[0], bounds[1], bounds[3]];\n\t                    this.geometry.faceVertexUvs[0][i] = [bounds[1], bounds[2], bounds[3]];\n\t                }\n\t\n\t                this.geometry.uvsNeedUpdate = true;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"texture\",\n\t        get: function get() {\n\t            return this.textureAtlas.texture;\n\t        }\n\t    }, {\n\t        key: \"frame\",\n\t        set: function set(frameName) {\n\t            var offset = this.textureAtlas.getFrameOffset(frameName);\n\t            var size = this.textureAtlas.getFrameSize(frameName);\n\t\n\t            // Size changed\n\t            if (!this.fixed) {\n\t                if (size.width !== this.width || size.height !== this.height) {\n\t                    this._changeSize(size.width, size.height);\n\t                }\n\t            }\n\t\n\t            this.texture.offset = offset;\n\t        }\n\t    }]);\n\t\n\t    return TextureFrame;\n\t})();\n\t\n\texports.default = TextureFrame;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar RenderView = (function () {\n\t    function RenderView() {\n\t        _classCallCheck(this, RenderView);\n\t\n\t        this.width = 800;\n\t        this.height = 600;\n\t        this._initialized = false;\n\t        this.clearColor = 0x000000;\n\t        this.viewContainers = new Map();\n\t        this._currentViewContainer = null;\n\t        this.currentViewContainerName = null;\n\t        this.camera = null;\n\t    }\n\t\n\t    _createClass(RenderView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.scene = new THREE.Scene();\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.viewContainers.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var _step$value = _slicedToArray(_step.value, 2);\n\t\n\t                    var name = _step$value[0];\n\t                    var viewContainer = _step$value[1];\n\t\n\t                    viewContainer.init();\n\t                    viewContainer.width = this.width;\n\t                    viewContainer.height = this.height;\n\t\n\t                    this.scene.add(viewContainer.mesh);\n\t\n\t                    if (name === this.currentViewContainerName) {\n\t                        viewContainer.visible = true;\n\t                        this._currentViewContainer = viewContainer;\n\t                    } else {\n\t                        viewContainer.visible = false;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (this._currentViewContainer) {\n\t                this._currentViewContainer.update(delta);\n\t            } else {\n\t                console.warn('no current ViewContainer');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addViewContainer',\n\t        value: function addViewContainer(name, viewContainer) {\n\t            if (this._initialized) {\n\t                viewContainer.init();\n\t                viewContainer.width = this.width;\n\t                viewContainer.height = this.height;\n\t\n\t                this.scene.add(viewContainer.mesh);\n\t            }\n\t            this.viewContainers.set(name, viewContainer);\n\t        }\n\t    }, {\n\t        key: 'size',\n\t        set: function set(size) {\n\t            this.width = size.width;\n\t            this.height = size.height;\n\t\n\t            if (this.camera) {\n\t                this.camera.aspect = this.width / this.height;\n\t                this.camera.updateProjectionMatrix();\n\t            }\n\t\n\t            if (this._initialized) {\n\t                var _iteratorNormalCompletion2 = true;\n\t                var _didIteratorError2 = false;\n\t                var _iteratorError2 = undefined;\n\t\n\t                try {\n\t                    for (var _iterator2 = this.viewContainers.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                        var viewContainer = _step2.value;\n\t\n\t                        viewContainer.width = this.width;\n\t                        viewContainer.height = this.height;\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError2 = true;\n\t                    _iteratorError2 = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                            _iterator2.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError2) {\n\t                            throw _iteratorError2;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'currentViewContainer',\n\t        set: function set(name) {\n\t            var newViewContainer = this.viewContainers.get(name);\n\t\n\t            if (this._initialized) {\n\t                if (this._currentViewContainer) {\n\t                    this._currentViewContainer.visible = false;\n\t                }\n\t\n\t                newViewContainer.visible = true;\n\t            }\n\t\n\t            this.currentViewContainerName = name;\n\t            this._currentViewContainer = newViewContainer;\n\t        },\n\t        get: function get() {\n\t            return this._currentViewContainer;\n\t        }\n\t    }]);\n\t\n\t    return RenderView;\n\t})();\n\t\n\texports.default = RenderView;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _AssetManager = __webpack_require__(8);\n\t\n\tvar _AssetManager2 = _interopRequireDefault(_AssetManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar TextureAtlas = (function () {\n\t    function TextureAtlas(name, clone) {\n\t        var filter = arguments.length <= 2 || arguments[2] === undefined ? {} : arguments[2];\n\t\n\t        _classCallCheck(this, TextureAtlas);\n\t\n\t        this.mapping = _AssetManager2.default.getAtlasMapping(name);\n\t\n\t        if (!this.mapping) {\n\t            throw new Error('TextureAtlas does not exists', name);\n\t        }\n\t\n\t        if (clone) {\n\t            this.texture = _AssetManager2.default.cloneTexture(name);\n\t        } else {\n\t            this.texture = _AssetManager2.default.getTexture(name);\n\t        }\n\t\n\t        this.texture.wrapS = THREE.RepeatWrapping;\n\t        this.texture.wrapT = THREE.RepeatWrapping;\n\t\n\t        this.width = this.mapping.meta.size.w;\n\t        this.height = this.mapping.meta.size.h;\n\t\n\t        this.frames = new Map();\n\t\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t            for (var _iterator = this.mapping.frames[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                var frame = _step.value;\n\t\n\t                var d = frame.frame;\n\t\n\t                // Origin image is y-inverted compared to what THREE wants\n\t                var bounds = [new THREE.Vector2(d.x / this.width, (this.height - d.y) / this.height), // lower left\n\t                new THREE.Vector2(d.x / this.width, (this.height - (d.y + d.h)) / this.height), // upper left\n\t                new THREE.Vector2((d.x + d.w) / this.width, (this.height - (d.y + d.h)) / this.height), // upper right\n\t                new THREE.Vector2((d.x + d.w) / this.width, (this.height - d.y) / this.height) // lower right\n\t                ];\n\t\n\t                this.frames.set(frame.filename, {\n\t                    bounds: bounds,\n\t                    frame: frame,\n\t                    framePosition: {\n\t                        x: d.x,\n\t                        y: d.y\n\t                    },\n\t                    frameSize: {\n\t                        width: d.w,\n\t                        height: d.h\n\t                    }\n\t                });\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError = true;\n\t            _iteratorError = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion && _iterator.return) {\n\t                    _iterator.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError) {\n\t                    throw _iteratorError;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    _createClass(TextureAtlas, [{\n\t        key: 'getFrameOffset',\n\t        value: function getFrameOffset(name) {\n\t            var d = this.frames.get(name + '.png').framePosition;\n\t\n\t            return new THREE.Vector2(d.x / this.width, (this.height - d.y) / this.height);\n\t        }\n\t    }, {\n\t        key: 'getFrameSize',\n\t        value: function getFrameSize(name) {\n\t            return this.frames.get(name + '.png').frameSize;\n\t        }\n\t    }, {\n\t        key: 'getBounds',\n\t        value: function getBounds(name) {\n\t            return this.frames.get(name + '.png').bounds;\n\t        }\n\t    }]);\n\t\n\t    return TextureAtlas;\n\t})();\n\t\n\texports.default = TextureAtlas;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _TextureAtlas = __webpack_require__(18);\n\t\n\tvar _TextureAtlas2 = _interopRequireDefault(_TextureAtlas);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _atlases = new Map();\n\t\n\tvar TextureManager = {\n\t    getAtlas: function getAtlas(name, clone) {\n\t        if (clone) {\n\t            return new _TextureAtlas2.default(name, clone);\n\t        }\n\t\n\t        var atlas = _atlases.get(name);\n\t\n\t        if (!atlas) {\n\t            atlas = new _TextureAtlas2.default(name);\n\t\n\t            _atlases.set(name, atlas);\n\t        }\n\t\n\t        return atlas;\n\t    }\n\t};\n\t\n\texports.default = TextureManager;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _View2 = __webpack_require__(21);\n\t\n\tvar _View3 = _interopRequireDefault(_View2);\n\t\n\tvar _AssetManager = __webpack_require__(8);\n\t\n\tvar _AssetManager2 = _interopRequireDefault(_AssetManager);\n\t\n\tvar _threeBmfontText = __webpack_require__(22);\n\t\n\tvar _threeBmfontText2 = _interopRequireDefault(_threeBmfontText);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar TextView = (function (_View) {\n\t    _inherits(TextView, _View);\n\t\n\t    function TextView(text) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t        _classCallCheck(this, TextView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(TextView).call(this));\n\t\n\t        var fontName = options.font || 'long_shot';\n\t\n\t        _this._text = text;\n\t        _this.font = _AssetManager2.default.getFont(fontName);\n\t        _this.width = options.width || 100;\n\t        _this.align = options.aligh || 'left';\n\t        _this._color = options.color || 0xff0000;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(TextView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.geometry = (0, _threeBmfontText2.default)({\n\t                text: this._text,\n\t                width: this.width,\n\t                align: this.align,\n\t                font: this.font.mapping\n\t            });\n\t\n\t            this.texture = this.font.texture;\n\t\n\t            this.material = new THREE.MeshBasicMaterial({\n\t                map: this.texture,\n\t                transparent: true,\n\t                color: this._color\n\t            });\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\n\t            this.mesh.rotation.y = 180 * (Math.PI / 180);\n\t            this.mesh.rotation.z = 180 * (Math.PI / 180);\n\t\n\t            _get(Object.getPrototypeOf(TextView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: '_updateGeometry',\n\t        value: function _updateGeometry() {\n\t            this.geometry.update({\n\t                text: this._text,\n\t                width: this.width,\n\t                align: this.align,\n\t                font: this.font.mapping\n\t            });\n\t\n\t            this.geometry.uvsNeedUpdate = true;\n\t        }\n\t    }, {\n\t        key: 'color',\n\t        get: function get() {\n\t            return this._color;\n\t        },\n\t        set: function set(color) {\n\t            this.material.color.setHex(color);\n\t        }\n\t    }, {\n\t        key: 'text',\n\t        get: function get() {\n\t            return this._text;\n\t        },\n\t        set: function set(text) {\n\t            text = text.toString();\n\t\n\t            // Check if text is not the same\n\t            if (text !== this._text) {\n\t                this._text = text;\n\t                this._updateGeometry();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'height',\n\t        get: function get() {\n\t            return this.geometry.layout.height;\n\t        }\n\t    }]);\n\t\n\t    return TextView;\n\t})(_View3.default);\n\t\n\texports.default = TextView;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar View = (function () {\n\t    function View() {\n\t        _classCallCheck(this, View);\n\t\n\t        this.mesh = null;\n\t        this.initialPosition = null;\n\t        this._initialized = false;\n\t    }\n\t\n\t    _createClass(View, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            if (this.initialPosition) {\n\t                if (!this.mesh) {\n\t                    throw new Error('No mesh initialized!');\n\t                }\n\t\n\t                this.mesh.position.x = this.initialPosition.x;\n\t                this.mesh.position.y = this.initialPosition.y;\n\t                this.mesh.position.z = this.initialPosition.z;\n\t            }\n\t\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'position',\n\t        get: function get() {\n\t            return this.mesh.position;\n\t        },\n\t        set: function set(_ref) {\n\t            var x = _ref.x;\n\t            var y = _ref.y;\n\t            var z = _ref.z;\n\t\n\t            if (this.mesh && this.initialized) {\n\t                if (x) {\n\t                    this.mesh.position.x = x;\n\t                }\n\t\n\t                if (y) {\n\t                    this.mesh.position.y = y;\n\t                }\n\t\n\t                if (z) {\n\t                    this.mesh.position.z = z;\n\t                }\n\t            } else {\n\t                this.initialPosition = {\n\t                    x: x,\n\t                    y: y,\n\t                    z: z\n\t                };\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return View;\n\t})();\n\t\n\texports.default = View;\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar createLayout = __webpack_require__(23)\n\tvar inherits = __webpack_require__(28)\n\tvar createIndices = __webpack_require__(29)\n\tvar buffer = __webpack_require__(33)\n\tvar assign = __webpack_require__(35)\n\t\n\tvar vertices = __webpack_require__(36)\n\tvar utils = __webpack_require__(37)\n\t\n\tvar Base = THREE.BufferGeometry\n\t\n\tmodule.exports = function createTextGeometry (opt) {\n\t  return new TextGeometry(opt)\n\t}\n\t\n\tfunction TextGeometry (opt) {\n\t  Base.call(this)\n\t\n\t  if (typeof opt === 'string') {\n\t    opt = { text: opt }\n\t  }\n\t\n\t  // use these as default values for any subsequent\n\t  // calls to update()\n\t  this._opt = assign({}, opt)\n\t\n\t  // also do an initial setup...\n\t  if (opt) this.update(opt)\n\t}\n\t\n\tinherits(TextGeometry, Base)\n\t\n\tTextGeometry.prototype.update = function (opt) {\n\t  if (typeof opt === 'string') {\n\t    opt = { text: opt }\n\t  }\n\t\n\t  // use constructor defaults\n\t  opt = assign({}, this._opt, opt)\n\t\n\t  if (!opt.font) {\n\t    throw new TypeError('must specify a { font } in options')\n\t  }\n\t\n\t  this.layout = createLayout(opt)\n\t\n\t  // get vec2 texcoords\n\t  var flipY = opt.flipY !== false\n\t\n\t  // the desired BMFont data\n\t  var font = opt.font\n\t\n\t  // determine texture size from font file\n\t  var texWidth = font.common.scaleW\n\t  var texHeight = font.common.scaleH\n\t\n\t  // get visible glyphs\n\t  var glyphs = this.layout.glyphs.filter(function (glyph) {\n\t    var bitmap = glyph.data\n\t    return bitmap.width * bitmap.height > 0\n\t  })\n\t\n\t  // provide visible glyphs for convenience\n\t  this.visibleGlyphs = glyphs\n\t\n\t  // get common vertex data\n\t  var positions = vertices.positions(glyphs)\n\t  var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY)\n\t  var indices = createIndices({\n\t    clockwise: true,\n\t    type: 'uint16',\n\t    count: glyphs.length\n\t  })\n\t\n\t  // update vertex data\n\t  buffer.index(this, indices, 1, 'uint16')\n\t  buffer.attr(this, 'position', positions, 2)\n\t  buffer.attr(this, 'uv', uvs, 2)\n\t\n\t  // update multipage data\n\t  if (!opt.multipage && 'page' in this.attributes) {\n\t    // disable multipage rendering\n\t    this.removeAttribute('page')\n\t  } else if (opt.multipage) {\n\t    var pages = vertices.pages(glyphs)\n\t    // enable multipage rendering\n\t    buffer.attr(this, 'page', pages, 1)\n\t  }\n\t}\n\t\n\tTextGeometry.prototype.computeBoundingSphere = function () {\n\t  if (this.boundingSphere === null) {\n\t    this.boundingSphere = new THREE.Sphere()\n\t  }\n\t\n\t  var positions = this.attributes.position.array\n\t  var itemSize = this.attributes.position.itemSize\n\t  if (!positions || !itemSize || positions.length < 2) {\n\t    this.boundingSphere.radius = 0\n\t    this.boundingSphere.center.set(0, 0, 0)\n\t    return\n\t  }\n\t  utils.computeSphere(positions, this.boundingSphere)\n\t  if (isNaN(this.boundingSphere.radius)) {\n\t    console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n\t      'Computed radius is NaN. The ' +\n\t      '\"position\" attribute is likely to have NaN values.')\n\t  }\n\t}\n\t\n\tTextGeometry.prototype.computeBoundingBox = function () {\n\t  if (this.boundingBox === null) {\n\t    this.boundingBox = new THREE.Box3()\n\t  }\n\t\n\t  var bbox = this.boundingBox\n\t  var positions = this.attributes.position.array\n\t  var itemSize = this.attributes.position.itemSize\n\t  if (!positions || !itemSize || positions.length < 2) {\n\t    bbox.makeEmpty()\n\t    return\n\t  }\n\t  utils.computeBox(positions, bbox)\n\t}\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar wordWrap = __webpack_require__(24)\n\tvar xtend = __webpack_require__(25)\n\tvar findChar = __webpack_require__(26)('id')\n\tvar number = __webpack_require__(27)\n\t\n\tvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z']\n\tvar M_WIDTHS = ['m', 'w']\n\tvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\t\n\t\n\tvar TAB_ID = '\\t'.charCodeAt(0)\n\tvar SPACE_ID = ' '.charCodeAt(0)\n\tvar ALIGN_LEFT = 0, \n\t    ALIGN_CENTER = 1, \n\t    ALIGN_RIGHT = 2\n\t\n\tmodule.exports = function createLayout(opt) {\n\t  return new TextLayout(opt)\n\t}\n\t\n\tfunction TextLayout(opt) {\n\t  this.glyphs = []\n\t  this._measure = this.computeMetrics.bind(this)\n\t  this.update(opt)\n\t}\n\t\n\tTextLayout.prototype.update = function(opt) {\n\t  opt = xtend({\n\t    measure: this._measure\n\t  }, opt)\n\t  this._opt = opt\n\t  this._opt.tabSize = number(this._opt.tabSize, 4)\n\t\n\t  if (!opt.font)\n\t    throw new Error('must provide a valid bitmap font')\n\t\n\t  var glyphs = this.glyphs\n\t  var text = opt.text||'' \n\t  var font = opt.font\n\t  this._setupSpaceGlyphs(font)\n\t  \n\t  var lines = wordWrap.lines(text, opt)\n\t  var minWidth = opt.width || 0\n\t\n\t  //clear glyphs\n\t  glyphs.length = 0\n\t\n\t  //get max line width\n\t  var maxLineWidth = lines.reduce(function(prev, line) {\n\t    return Math.max(prev, line.width, minWidth)\n\t  }, 0)\n\t\n\t  //the pen position\n\t  var x = 0\n\t  var y = 0\n\t  var lineHeight = number(opt.lineHeight, font.common.lineHeight)\n\t  var baseline = font.common.base\n\t  var descender = lineHeight-baseline\n\t  var letterSpacing = opt.letterSpacing || 0\n\t  var height = lineHeight * lines.length - descender\n\t  var align = getAlignType(this._opt.align)\n\t\n\t  //draw text along baseline\n\t  y -= height\n\t  \n\t  //the metrics for this text layout\n\t  this._width = maxLineWidth\n\t  this._height = height\n\t  this._descender = font.common.lineHeight - baseline\n\t  this._baseline = baseline\n\t  this._xHeight = getXHeight(font)\n\t  this._capHeight = getCapHeight(font)\n\t  this._lineHeight = lineHeight\n\t  this._ascender = lineHeight - descender - this._xHeight\n\t    \n\t  //layout each glyph\n\t  var self = this\n\t  lines.forEach(function(line, lineIndex) {\n\t    var start = line.start\n\t    var end = line.end\n\t    var lineWidth = line.width\n\t    var lastGlyph\n\t    \n\t    //for each glyph in that line...\n\t    for (var i=start; i<end; i++) {\n\t      var id = text.charCodeAt(i)\n\t      var glyph = self.getGlyph(font, id)\n\t      if (glyph) {\n\t        if (lastGlyph) \n\t          x += getKerning(font, lastGlyph.id, glyph.id)\n\t\n\t        var tx = x\n\t        if (align === ALIGN_CENTER) \n\t          tx += (maxLineWidth-lineWidth)/2\n\t        else if (align === ALIGN_RIGHT)\n\t          tx += (maxLineWidth-lineWidth)\n\t\n\t        glyphs.push({\n\t          position: [tx, y],\n\t          data: glyph,\n\t          index: i,\n\t          line: lineIndex\n\t        })  \n\t\n\t        //move pen forward\n\t        x += glyph.xadvance + letterSpacing\n\t        lastGlyph = glyph\n\t      }\n\t    }\n\t\n\t    //next line down\n\t    y += lineHeight\n\t    x = 0\n\t  })\n\t  this._linesTotal = lines.length;\n\t}\n\t\n\tTextLayout.prototype._setupSpaceGlyphs = function(font) {\n\t  //These are fallbacks, when the font doesn't include\n\t  //' ' or '\\t' glyphs\n\t  this._fallbackSpaceGlyph = null\n\t  this._fallbackTabGlyph = null\n\t\n\t  if (!font.chars || font.chars.length === 0)\n\t    return\n\t\n\t  //try to get space glyph\n\t  //then fall back to the 'm' or 'w' glyphs\n\t  //then fall back to the first glyph available\n\t  var space = getGlyphById(font, SPACE_ID) \n\t          || getMGlyph(font) \n\t          || font.chars[0]\n\t\n\t  //and create a fallback for tab\n\t  var tabWidth = this._opt.tabSize * space.xadvance\n\t  this._fallbackSpaceGlyph = space\n\t  this._fallbackTabGlyph = xtend(space, {\n\t    x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, \n\t    xoffset: 0, yoffset: 0, width: 0, height: 0\n\t  })\n\t}\n\t\n\tTextLayout.prototype.getGlyph = function(font, id) {\n\t  var glyph = getGlyphById(font, id)\n\t  if (glyph)\n\t    return glyph\n\t  else if (id === TAB_ID) \n\t    return this._fallbackTabGlyph\n\t  else if (id === SPACE_ID) \n\t    return this._fallbackSpaceGlyph\n\t  return null\n\t}\n\t\n\tTextLayout.prototype.computeMetrics = function(text, start, end, width) {\n\t  var letterSpacing = this._opt.letterSpacing || 0\n\t  var font = this._opt.font\n\t  var curPen = 0\n\t  var curWidth = 0\n\t  var count = 0\n\t  var glyph\n\t  var lastGlyph\n\t\n\t  if (!font.chars || font.chars.length === 0) {\n\t    return {\n\t      start: start,\n\t      end: start,\n\t      width: 0\n\t    }\n\t  }\n\t\n\t  end = Math.min(text.length, end)\n\t  for (var i=start; i < end; i++) {\n\t    var id = text.charCodeAt(i)\n\t    var glyph = this.getGlyph(font, id)\n\t\n\t    if (glyph) {\n\t      //move pen forward\n\t      var xoff = glyph.xoffset\n\t      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0\n\t      curPen += kern\n\t\n\t      var nextPen = curPen + glyph.xadvance + letterSpacing\n\t      var nextWidth = curPen + glyph.width\n\t\n\t      //we've hit our limit; we can't move onto the next glyph\n\t      if (nextWidth >= width || nextPen >= width)\n\t        break\n\t\n\t      //otherwise continue along our line\n\t      curPen = nextPen\n\t      curWidth = nextWidth\n\t      lastGlyph = glyph\n\t    }\n\t    count++\n\t  }\n\t  \n\t  //make sure rightmost edge lines up with rendered glyphs\n\t  if (lastGlyph)\n\t    curWidth += lastGlyph.xoffset\n\t\n\t  return {\n\t    start: start,\n\t    end: start + count,\n\t    width: curWidth\n\t  }\n\t}\n\t\n\t//getters for the private vars\n\t;['width', 'height', \n\t  'descender', 'ascender',\n\t  'xHeight', 'baseline',\n\t  'capHeight',\n\t  'lineHeight' ].forEach(addGetter)\n\t\n\tfunction addGetter(name) {\n\t  Object.defineProperty(TextLayout.prototype, name, {\n\t    get: wrapper(name),\n\t    configurable: true\n\t  })\n\t}\n\t\n\t//create lookups for private vars\n\tfunction wrapper(name) {\n\t  return (new Function([\n\t    'return function '+name+'() {',\n\t    '  return this._'+name,\n\t    '}'\n\t  ].join('\\n')))()\n\t}\n\t\n\tfunction getGlyphById(font, id) {\n\t  if (!font.chars || font.chars.length === 0)\n\t    return null\n\t\n\t  var glyphIdx = findChar(font.chars, id)\n\t  if (glyphIdx >= 0)\n\t    return font.chars[glyphIdx]\n\t  return null\n\t}\n\t\n\tfunction getXHeight(font) {\n\t  for (var i=0; i<X_HEIGHTS.length; i++) {\n\t    var id = X_HEIGHTS[i].charCodeAt(0)\n\t    var idx = findChar(font.chars, id)\n\t    if (idx >= 0) \n\t      return font.chars[idx].height\n\t  }\n\t  return 0\n\t}\n\t\n\tfunction getMGlyph(font) {\n\t  for (var i=0; i<M_WIDTHS.length; i++) {\n\t    var id = M_WIDTHS[i].charCodeAt(0)\n\t    var idx = findChar(font.chars, id)\n\t    if (idx >= 0) \n\t      return font.chars[idx]\n\t  }\n\t  return 0\n\t}\n\t\n\tfunction getCapHeight(font) {\n\t  for (var i=0; i<CAP_HEIGHTS.length; i++) {\n\t    var id = CAP_HEIGHTS[i].charCodeAt(0)\n\t    var idx = findChar(font.chars, id)\n\t    if (idx >= 0) \n\t      return font.chars[idx].height\n\t  }\n\t  return 0\n\t}\n\t\n\tfunction getKerning(font, left, right) {\n\t  if (!font.kernings || font.kernings.length === 0)\n\t    return 0\n\t\n\t  var table = font.kernings\n\t  for (var i=0; i<table.length; i++) {\n\t    var kern = table[i]\n\t    if (kern.first === left && kern.second === right)\n\t      return kern.amount\n\t  }\n\t  return 0\n\t}\n\t\n\tfunction getAlignType(align) {\n\t  if (align === 'center')\n\t    return ALIGN_CENTER\n\t  else if (align === 'right')\n\t    return ALIGN_RIGHT\n\t  return ALIGN_LEFT\n\t}\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tvar newline = /\\n/\n\tvar newlineChar = '\\n'\n\tvar whitespace = /\\s/\n\t\n\tmodule.exports = function(text, opt) {\n\t    var lines = module.exports.lines(text, opt)\n\t    return lines.map(function(line) {\n\t        return text.substring(line.start, line.end)\n\t    }).join('\\n')\n\t}\n\t\n\tmodule.exports.lines = function wordwrap(text, opt) {\n\t    opt = opt||{}\n\t\n\t    //zero width results in nothing visible\n\t    if (opt.width === 0 && opt.mode !== 'nowrap') \n\t        return []\n\t\n\t    text = text||''\n\t    var width = typeof opt.width === 'number' ? opt.width : Number.MAX_VALUE\n\t    var start = Math.max(0, opt.start||0)\n\t    var end = typeof opt.end === 'number' ? opt.end : text.length\n\t    var mode = opt.mode\n\t\n\t    var measure = opt.measure || monospace\n\t    if (mode === 'pre')\n\t        return pre(measure, text, start, end, width)\n\t    else\n\t        return greedy(measure, text, start, end, width, mode)\n\t}\n\t\n\tfunction idxOf(text, chr, start, end) {\n\t    var idx = text.indexOf(chr, start)\n\t    if (idx === -1 || idx > end)\n\t        return end\n\t    return idx\n\t}\n\t\n\tfunction isWhitespace(chr) {\n\t    return whitespace.test(chr)\n\t}\n\t\n\tfunction pre(measure, text, start, end, width) {\n\t    var lines = []\n\t    var lineStart = start\n\t    for (var i=start; i<end && i<text.length; i++) {\n\t        var chr = text.charAt(i)\n\t        var isNewline = newline.test(chr)\n\t\n\t        //If we've reached a newline, then step down a line\n\t        //Or if we've reached the EOF\n\t        if (isNewline || i===end-1) {\n\t            var lineEnd = isNewline ? i : i+1\n\t            var measured = measure(text, lineStart, lineEnd, width)\n\t            lines.push(measured)\n\t            \n\t            lineStart = i+1\n\t        }\n\t    }\n\t    return lines\n\t}\n\t\n\tfunction greedy(measure, text, start, end, width, mode) {\n\t    //A greedy word wrapper based on LibGDX algorithm\n\t    //https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n\t    var lines = []\n\t\n\t    var testWidth = width\n\t    //if 'nowrap' is specified, we only wrap on newline chars\n\t    if (mode === 'nowrap')\n\t        testWidth = Number.MAX_VALUE\n\t\n\t    while (start < end && start < text.length) {\n\t        //get next newline position\n\t        var newLine = idxOf(text, newlineChar, start, end)\n\t\n\t        //eat whitespace at start of line\n\t        while (start < newLine) {\n\t            if (!isWhitespace( text.charAt(start) ))\n\t                break\n\t            start++\n\t        }\n\t\n\t        //determine visible # of glyphs for the available width\n\t        var measured = measure(text, start, newLine, testWidth)\n\t\n\t        var lineEnd = start + (measured.end-measured.start)\n\t        var nextStart = lineEnd + newlineChar.length\n\t\n\t        //if we had to cut the line before the next newline...\n\t        if (lineEnd < newLine) {\n\t            //find char to break on\n\t            while (lineEnd > start) {\n\t                if (isWhitespace(text.charAt(lineEnd)))\n\t                    break\n\t                lineEnd--\n\t            }\n\t            if (lineEnd === start) {\n\t                if (nextStart > start + newlineChar.length) nextStart--\n\t                lineEnd = nextStart // If no characters to break, show all.\n\t            } else {\n\t                nextStart = lineEnd\n\t                //eat whitespace at end of line\n\t                while (lineEnd > start) {\n\t                    if (!isWhitespace(text.charAt(lineEnd - newlineChar.length)))\n\t                        break\n\t                    lineEnd--\n\t                }\n\t            }\n\t        }\n\t        if (lineEnd >= start) {\n\t            var result = measure(text, start, lineEnd, testWidth)\n\t            lines.push(result)\n\t        }\n\t        start = nextStart\n\t    }\n\t    return lines\n\t}\n\t\n\t//determines the visible number of glyphs within a given width\n\tfunction monospace(text, start, end, width) {\n\t    var glyphs = Math.min(width, end-start)\n\t    return {\n\t        start: start,\n\t        end: start+glyphs\n\t    }\n\t}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = extend\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\tfunction extend() {\n\t    var target = {}\n\t\n\t    for (var i = 0; i < arguments.length; i++) {\n\t        var source = arguments[i]\n\t\n\t        for (var key in source) {\n\t            if (hasOwnProperty.call(source, key)) {\n\t                target[key] = source[key]\n\t            }\n\t        }\n\t    }\n\t\n\t    return target\n\t}\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function compile(property) {\n\t\tif (!property || typeof property !== 'string')\n\t\t\tthrow new Error('must specify property for indexof search')\n\t\n\t\treturn new Function('array', 'value', 'start', [\n\t\t\t'start = start || 0',\n\t\t\t'for (var i=start; i<array.length; i++)',\n\t\t\t'  if (array[i][\"' + property +'\"] === value)',\n\t\t\t'      return i',\n\t\t\t'return -1'\n\t\t].join('\\n'))\n\t}\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function numtype(num, def) {\n\t\treturn typeof num === 'number'\n\t\t\t? num \n\t\t\t: (typeof def === 'number' ? def : 0)\n\t}\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dtype = __webpack_require__(30)\n\tvar anArray = __webpack_require__(31)\n\tvar isBuffer = __webpack_require__(32)\n\t\n\tvar CW = [0, 2, 3]\n\tvar CCW = [2, 1, 3]\n\t\n\tmodule.exports = function createQuadElements(array, opt) {\n\t    //if user didn't specify an output array\n\t    if (!array || !(anArray(array) || isBuffer(array))) {\n\t        opt = array || {}\n\t        array = null\n\t    }\n\t\n\t    if (typeof opt === 'number') //backwards-compatible\n\t        opt = { count: opt }\n\t    else\n\t        opt = opt || {}\n\t\n\t    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n\t    var count = typeof opt.count === 'number' ? opt.count : 1\n\t    var start = (opt.start || 0) \n\t\n\t    var dir = opt.clockwise !== false ? CW : CCW,\n\t        a = dir[0], \n\t        b = dir[1],\n\t        c = dir[2]\n\t\n\t    var numIndices = count * 6\n\t\n\t    var indices = array || new (dtype(type))(numIndices)\n\t    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n\t        var x = i + start\n\t        indices[x + 0] = j + 0\n\t        indices[x + 1] = j + 1\n\t        indices[x + 2] = j + 2\n\t        indices[x + 3] = j + a\n\t        indices[x + 4] = j + b\n\t        indices[x + 5] = j + c\n\t    }\n\t    return indices\n\t}\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(dtype) {\n\t  switch (dtype) {\n\t    case 'int8':\n\t      return Int8Array\n\t    case 'int16':\n\t      return Int16Array\n\t    case 'int32':\n\t      return Int32Array\n\t    case 'uint8':\n\t      return Uint8Array\n\t    case 'uint16':\n\t      return Uint16Array\n\t    case 'uint32':\n\t      return Uint32Array\n\t    case 'float32':\n\t      return Float32Array\n\t    case 'float64':\n\t      return Float64Array\n\t    case 'array':\n\t      return Array\n\t    case 'uint8_clamped':\n\t      return Uint8ClampedArray\n\t  }\n\t}\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tvar str = Object.prototype.toString\n\t\n\tmodule.exports = anArray\n\t\n\tfunction anArray(arr) {\n\t  return (\n\t       arr.BYTES_PER_ELEMENT\n\t    && str.call(arr.buffer) === '[object ArrayBuffer]'\n\t    || Array.isArray(arr)\n\t  )\n\t}\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Determine if an object is Buffer\n\t *\n\t * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * License:  MIT\n\t *\n\t * `npm install is-buffer`\n\t */\n\t\n\tmodule.exports = function (obj) {\n\t  return !!(obj != null &&\n\t    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n\t      (obj.constructor &&\n\t      typeof obj.constructor.isBuffer === 'function' &&\n\t      obj.constructor.isBuffer(obj))\n\t    ))\n\t}\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar flatten = __webpack_require__(34)\n\t\n\tmodule.exports.attr = setAttribute\n\tmodule.exports.index = setIndex\n\t\n\tfunction setIndex (geometry, data, itemSize, dtype) {\n\t  if (typeof itemSize !== 'number') itemSize = 1\n\t  if (typeof dtype !== 'number') dtype = 'uint16'\n\t\n\t  var isR69 = !geometry.index && typeof geometry.setIndex !== 'function'\n\t  var attrib = isR69 ? geometry.getAttribute('index') : geometry.index\n\t  var newAttrib = updateAttribute(attrib, data, itemSize, dtype)\n\t  if (newAttrib) {\n\t    if (isR69) geometry.addAttribute('index', newAttrib)\n\t    else geometry.index = newAttrib\n\t  }\n\t}\n\t\n\tfunction setAttribute (geometry, key, data, itemSize, dtype) {\n\t  if (typeof itemSize !== 'number') itemSize = 3\n\t  if (typeof dtype !== 'number') dtype = 'float32'\n\t  if (Array.isArray(data) &&\n\t    Array.isArray(data[0]) &&\n\t    data[0].length !== itemSize) {\n\t    throw new Error('Nested vertex array has unexpected size; expected ' +\n\t      itemSize + ' but found ' + data[0].length)\n\t  }\n\t\n\t  var attrib = geometry.getAttribute(key)\n\t  var newAttrib = updateAttribute(attrib, data, itemSize, dtype)\n\t  if (newAttrib) {\n\t    geometry.addAttribute(key, newAttrib)\n\t  }\n\t}\n\t\n\tfunction updateAttribute (attrib, data, itemSize, dtype) {\n\t  data = data || []\n\t  if (!attrib || rebuildAttribute(attrib, data, itemSize)) {\n\t    // create a new array with desired type\n\t    data = flatten(data, dtype)\n\t    attrib = new THREE.BufferAttribute(data, itemSize)\n\t    attrib.needsUpdate = true\n\t    return attrib\n\t  } else {\n\t    // copy data into the existing array\n\t    flatten(data, attrib.array)\n\t    attrib.needsUpdate = true\n\t    return null\n\t  }\n\t}\n\t\n\t// Test whether the attribute needs to be re-created,\n\t// returns false if we can re-use it as-is.\n\tfunction rebuildAttribute (attrib, data, itemSize) {\n\t  if (attrib.itemSize !== itemSize) return true\n\t  if (!attrib.array) return true\n\t  var attribLength = attrib.array.length\n\t  if (Array.isArray(data) && Array.isArray(data[0])) {\n\t    // [ [ x, y, z ] ]\n\t    return attribLength !== data.length * itemSize\n\t  } else {\n\t    // [ x, y, z ]\n\t    return attribLength !== data.length\n\t  }\n\t  return false\n\t}\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*eslint new-cap:0*/\n\tvar dtype = __webpack_require__(30)\n\tmodule.exports = flattenVertexData\n\tfunction flattenVertexData (data, output, offset) {\n\t  if (!data) throw new TypeError('must specify data as first parameter')\n\t  offset = +(offset || 0) | 0\n\t\n\t  if (Array.isArray(data) && Array.isArray(data[0])) {\n\t    var dim = data[0].length\n\t    var length = data.length * dim\n\t\n\t    // no output specified, create a new typed array\n\t    if (!output || typeof output === 'string') {\n\t      output = new (dtype(output || 'float32'))(length + offset)\n\t    }\n\t\n\t    var dstLength = output.length - offset\n\t    if (length !== dstLength) {\n\t      throw new Error('source length ' + length + ' (' + dim + 'x' + data.length + ')' +\n\t        ' does not match destination length ' + dstLength)\n\t    }\n\t\n\t    for (var i = 0, k = offset; i < data.length; i++) {\n\t      for (var j = 0; j < dim; j++) {\n\t        output[k++] = data[i][j]\n\t      }\n\t    }\n\t  } else {\n\t    if (!output || typeof output === 'string') {\n\t      // no output, create a new one\n\t      var Ctor = dtype(output || 'float32')\n\t      if (offset === 0) {\n\t        output = new Ctor(data)\n\t      } else {\n\t        output = new Ctor(data.length + offset)\n\t        output.set(data, offset)\n\t      }\n\t    } else {\n\t      // store output in existing array\n\t      output.set(data, offset)\n\t    }\n\t  }\n\t\n\t  return output\n\t}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t/* eslint-disable no-unused-vars */\n\t'use strict';\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tmodule.exports = Object.assign || function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports.pages = function pages (glyphs) {\n\t  var pages = new Float32Array(glyphs.length * 4 * 1)\n\t  var i = 0\n\t  glyphs.forEach(function (glyph) {\n\t    var id = glyph.data.page || 0\n\t    pages[i++] = id\n\t    pages[i++] = id\n\t    pages[i++] = id\n\t    pages[i++] = id\n\t  })\n\t  return pages\n\t}\n\t\n\tmodule.exports.uvs = function uvs (glyphs, texWidth, texHeight, flipY) {\n\t  var uvs = new Float32Array(glyphs.length * 4 * 2)\n\t  var i = 0\n\t  glyphs.forEach(function (glyph) {\n\t    var bitmap = glyph.data\n\t    var bw = (bitmap.x + bitmap.width)\n\t    var bh = (bitmap.y + bitmap.height)\n\t\n\t    // top left position\n\t    var u0 = bitmap.x / texWidth\n\t    var v1 = bitmap.y / texHeight\n\t    var u1 = bw / texWidth\n\t    var v0 = bh / texHeight\n\t\n\t    if (flipY) {\n\t      v1 = (texHeight - bitmap.y) / texHeight\n\t      v0 = (texHeight - bh) / texHeight\n\t    }\n\t\n\t    // BL\n\t    uvs[i++] = u0\n\t    uvs[i++] = v1\n\t    // TL\n\t    uvs[i++] = u0\n\t    uvs[i++] = v0\n\t    // TR\n\t    uvs[i++] = u1\n\t    uvs[i++] = v0\n\t    // BR\n\t    uvs[i++] = u1\n\t    uvs[i++] = v1\n\t  })\n\t  return uvs\n\t}\n\t\n\tmodule.exports.positions = function positions (glyphs) {\n\t  var positions = new Float32Array(glyphs.length * 4 * 2)\n\t  var i = 0\n\t  glyphs.forEach(function (glyph) {\n\t    var bitmap = glyph.data\n\t\n\t    // bottom left position\n\t    var x = glyph.position[0] + bitmap.xoffset\n\t    var y = glyph.position[1] + bitmap.yoffset\n\t\n\t    // quad size\n\t    var w = bitmap.width\n\t    var h = bitmap.height\n\t\n\t    // BL\n\t    positions[i++] = x\n\t    positions[i++] = y\n\t    // TL\n\t    positions[i++] = x\n\t    positions[i++] = y + h\n\t    // TR\n\t    positions[i++] = x + w\n\t    positions[i++] = y + h\n\t    // BR\n\t    positions[i++] = x + w\n\t    positions[i++] = y\n\t  })\n\t  return positions\n\t}\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\tvar itemSize = 2\n\tvar box = { min: [0, 0], max: [0, 0] }\n\t\n\tfunction bounds (positions) {\n\t  var count = positions.length / itemSize\n\t  box.min[0] = positions[0]\n\t  box.min[1] = positions[1]\n\t  box.max[0] = positions[0]\n\t  box.max[1] = positions[1]\n\t\n\t  for (var i = 0; i < count; i++) {\n\t    var x = positions[i * itemSize + 0]\n\t    var y = positions[i * itemSize + 1]\n\t    box.min[0] = Math.min(x, box.min[0])\n\t    box.min[1] = Math.min(y, box.min[1])\n\t    box.max[0] = Math.max(x, box.max[0])\n\t    box.max[1] = Math.max(y, box.max[1])\n\t  }\n\t}\n\t\n\tmodule.exports.computeBox = function (positions, output) {\n\t  bounds(positions)\n\t  output.min.set(box.min[0], box.min[1], 0)\n\t  output.max.set(box.max[0], box.max[1], 0)\n\t}\n\t\n\tmodule.exports.computeSphere = function (positions, output) {\n\t  bounds(positions)\n\t  var minX = box.min[0]\n\t  var minY = box.min[1]\n\t  var maxX = box.max[0]\n\t  var maxY = box.max[1]\n\t  var width = maxX - minX\n\t  var height = maxY - minY\n\t  var length = Math.sqrt(width * width + height * height)\n\t  output.center.set(minX + width / 2, minY + height / 2, 0)\n\t  output.radius = length / 2\n\t}\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ViewContainer = (function () {\n\t    function ViewContainer() {\n\t        _classCallCheck(this, ViewContainer);\n\t\n\t        this.staticViews = new Set();\n\t        this.dynamicViews = new Set();\n\t        this._backgroundView = null;\n\t        this._width = 800;\n\t        this._height = 600;\n\t\n\t        this._initialized = false;\n\t    }\n\t\n\t    _createClass(ViewContainer, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            if (this._backgroundView) {\n\t                this._backgroundView.init();\n\t                this._backgroundView.width = this._width;\n\t                this._backgroundView.height = this._height;\n\t                this._backgroundView.mesh.renderOrder = -1;\n\t                this.mesh.add(this._backgroundView.mesh);\n\t            }\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.staticViews[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var staticView = _step.value;\n\t\n\t                    staticView.init();\n\t                    this.mesh.add(staticView.mesh);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.dynamicViews[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var view = _step2.value;\n\t\n\t                    view.init();\n\t                    this.mesh.add(view.mesh);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (!this._initialized) {\n\t                throw new Error('View not initialized.');\n\t            }\n\t\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this.dynamicViews[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var view = _step3.value;\n\t\n\t                    view.update(delta);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'addStaticView',\n\t        value: function addStaticView(staticView, position) {\n\t            if (this._initialized) {\n\t                staticView.init();\n\t                this.mesh.add(staticView.mesh);\n\t            }\n\t\n\t            if (position) {\n\t                staticView.position = { x: position.x, y: position.y, z: position.z };\n\t            }\n\t\n\t            this.staticViews.add(staticView);\n\t        }\n\t    }, {\n\t        key: 'addDynamicView',\n\t        value: function addDynamicView(dynamicView, position) {\n\t            if (this._initialized) {\n\t                dynamicView.init();\n\t                this.mesh.add(dynamicView.mesh);\n\t            }\n\t\n\t            if (position) {\n\t                dynamicView.position = { x: position.x, y: position.y, z: position.z };\n\t            }\n\t\n\t            this.dynamicViews.add(dynamicView);\n\t        }\n\t    }, {\n\t        key: 'backgroundView',\n\t        set: function set(backgroundView) {\n\t            if (backgroundView !== this._backgroundView) {\n\t                if (this._initialized) {\n\t                    this._backgroundView.init();\n\t                    this._backgroundView.width = this._width;\n\t                    this._backgroundView.height = this._height;\n\t                    this._backgroundView.mesh.renderOrder = -1;\n\t                    this.mesh.remove(this._backgroundView);\n\t                }\n\t\n\t                this._backgroundView = backgroundView;\n\t            } else {\n\t                console.warn('backgroundView is the same');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'visible',\n\t        set: function set(visible) {\n\t            this.mesh.visible = visible;\n\t        },\n\t        get: function get() {\n\t            return this.mesh.visible;\n\t        }\n\t    }, {\n\t        key: 'width',\n\t        set: function set(width) {\n\t            var scale = width / this._width;\n\t\n\t            this._width = width;\n\t\n\t            if (this._backgroundView) {\n\t                this._backgroundView.width = this._width;\n\t            }\n\t\n\t            this.mesh.scale.x = scale;\n\t        }\n\t    }, {\n\t        key: 'height',\n\t        set: function set(height) {\n\t            var scale = height / this._height;\n\t\n\t            this._height = height;\n\t\n\t            if (this._backgroundView) {\n\t                this._backgroundView.height = this._height;\n\t            }\n\t\n\t            this.mesh.scale.y = scale;\n\t        }\n\t    }]);\n\t\n\t    return ViewContainer;\n\t})();\n\t\n\texports.default = ViewContainer;\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _TextureManager = __webpack_require__(19);\n\t\n\tvar _TextureManager2 = _interopRequireDefault(_TextureManager);\n\t\n\tvar _TextureFrame = __webpack_require__(16);\n\t\n\tvar _TextureFrame2 = _interopRequireDefault(_TextureFrame);\n\t\n\tvar _View2 = __webpack_require__(21);\n\t\n\tvar _View3 = _interopRequireDefault(_View2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BackgroundView = (function (_View) {\n\t    _inherits(BackgroundView, _View);\n\t\n\t    function BackgroundView(textureName, textureAtlasName) {\n\t        _classCallCheck(this, BackgroundView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BackgroundView).call(this));\n\t\n\t        _this.textureName = textureName;\n\t        _this.textureAtlasName = textureAtlasName;\n\t        _this._width = null;\n\t        _this._height = null;\n\t        _this._lightness = 1;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(BackgroundView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var textureAtlas = _TextureManager2.default.getAtlas(this.textureAtlasName, true);\n\t            var size = textureAtlas.getFrameSize(this.textureName);\n\t\n\t            this._width = size.width;\n\t            this._height = size.height;\n\t\n\t            this.geometry = new THREE.PlaneGeometry(size.width, size.height);\n\t\n\t            var textureFrame = new _TextureFrame2.default(textureAtlas, this.geometry, this.textureName);\n\t\n\t            this.material = new THREE.MeshBasicMaterial({\n\t                map: textureFrame.texture,\n\t                transparent: true\n\t            });\n\t\n\t            var hsl = this.material.color.getHSL();\n\t\n\t            this.material.color.setHSL(hsl.h, hsl.s, this._lightness);\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\n\t            _get(Object.getPrototypeOf(BackgroundView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'lightness',\n\t        set: function set(lightness) {\n\t            if (this._initalized) {\n\t                var hsl = this.material.color.getHSL();\n\t\n\t                this.material.color.setHSL(hsl.h, hsl.s, lightness);\n\t            }\n\t\n\t            this._lightness = lightness;\n\t        },\n\t        get: function get() {\n\t            return this._lightness;\n\t        }\n\t    }, {\n\t        key: 'width',\n\t        set: function set(width) {\n\t            var scale = width / this._width;\n\t\n\t            this.mesh.scale.x = scale;\n\t            this.mesh.position.x = width / 2;\n\t        }\n\t    }, {\n\t        key: 'height',\n\t        set: function set(height) {\n\t            var scale = height / this._height;\n\t\n\t            this.mesh.scale.y = scale;\n\t            this.mesh.position.y = height / 2;\n\t        }\n\t    }]);\n\t\n\t    return BackgroundView;\n\t})(_View3.default);\n\t\n\t;\n\t\n\texports.default = BackgroundView;\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar MenuItem = (function () {\n\t    function MenuItem(name, text) {\n\t        var onAction = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t        _classCallCheck(this, MenuItem);\n\t\n\t        this.name = name;\n\t        this.text = text;\n\t        this.onAction = onAction;\n\t        this.editable = false;\n\t    }\n\t\n\t    _createClass(MenuItem, [{\n\t        key: \"action\",\n\t        value: function action() {\n\t            if (this.onAction) {\n\t                this.onAction(this);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return MenuItem;\n\t})();\n\t\n\texports.default = MenuItem;\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Keyboard = __webpack_require__(42);\n\t\n\tvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\t\n\tvar _Gamepad = __webpack_require__(43);\n\t\n\tvar _Gamepad2 = _interopRequireDefault(_Gamepad);\n\t\n\tvar _HumanInput2 = __webpack_require__(45);\n\t\n\tvar _HumanInput3 = _interopRequireDefault(_HumanInput2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuInput = (function (_HumanInput) {\n\t    _inherits(MenuInput, _HumanInput);\n\t\n\t    function MenuInput(state) {\n\t        _classCallCheck(this, MenuInput);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuInput).call(this));\n\t\n\t        _this.state = state;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(MenuInput, [{\n\t        key: 'update',\n\t        value: function update() {\n\t            var state = this.state;\n\t\n\t            if (this.keyboardDownOnce(_Keyboard2.default.UP) || _Gamepad2.default.isStickDown(0, 'left', 'up')) {\n\t                state.currentMenu.moveUp();\n\t            } else if (this.keyboardDownOnce(_Keyboard2.default.DOWN) || _Gamepad2.default.isStickDown(0, 'left', 'down')) {\n\t                state.currentMenu.moveDown();\n\t            }\n\t\n\t            var selectedItem = state.currentMenu.selectedItem;\n\t\n\t            if (selectedItem.editable && selectedItem.isEditing) {\n\t                if (this.keyboardDownOnce(_Keyboard2.default.BACKSPACE)) {\n\t                    selectedItem.value = selectedItem.value.slice(0, -1);\n\t                } else if (_Keyboard2.default.letterKeyCodes.indexOf(_Keyboard2.default.lastPressed) !== -1) {\n\t                    if (this.keyboardDownOnce(_Keyboard2.default[_Keyboard2.default.keyByCode(_Keyboard2.default.lastPressed)])) {\n\t                        selectedItem.value = selectedItem.value + _Keyboard2.default.keyByCode(_Keyboard2.default.lastPressed);\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (this.keyboardDownOnce(_Keyboard2.default.ENTER) || this.keyboardDownOnce(_Keyboard2.default.SPACE) || this.gamepadButtonDownOnce('actionSouth')) {\n\t                state.currentMenu.selectCurrentItem();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return MenuInput;\n\t})(_HumanInput3.default);\n\t\n\texports.default = MenuInput;\n\n/***/ },\n/* 42 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar letterKeys = {\n\t    A: 65,\n\t    B: 66,\n\t    C: 67,\n\t    D: 68,\n\t    E: 69,\n\t    F: 70,\n\t    G: 71,\n\t    H: 72,\n\t    I: 73,\n\t    J: 74,\n\t    K: 75,\n\t    L: 76,\n\t    M: 77,\n\t    N: 78,\n\t    O: 79,\n\t    P: 80,\n\t    Q: 81,\n\t    R: 82,\n\t    S: 83,\n\t    T: 84,\n\t    U: 86,\n\t    V: 86,\n\t    W: 87,\n\t    X: 88,\n\t    Y: 89,\n\t    Z: 90\n\t};\n\t\n\tvar keys = {\n\t    BACKSPACE: 8,\n\t    CTRL: 17,\n\t    SPACE: 32,\n\t    ENTER: 13,\n\t    SHIFT: 16,\n\t    ESC: 27,\n\t    TAB: 9,\n\t    LEFT: 37,\n\t    UP: 38,\n\t    RIGHT: 39,\n\t    DOWN: 40\n\t};\n\t\n\tvar _iteratorNormalCompletion = true;\n\tvar _didIteratorError = false;\n\tvar _iteratorError = undefined;\n\t\n\ttry {\n\t    for (var _iterator = Object.keys(letterKeys)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t        var key = _step.value;\n\t\n\t        keys[key] = letterKeys[key];\n\t    }\n\t} catch (err) {\n\t    _didIteratorError = true;\n\t    _iteratorError = err;\n\t} finally {\n\t    try {\n\t        if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t        }\n\t    } finally {\n\t        if (_didIteratorError) {\n\t            throw _iteratorError;\n\t        }\n\t    }\n\t}\n\t\n\tvar codes = {};\n\t\n\tvar Keyboard = {\n\t    _pressed: {},\n\t    lastPressed: null,\n\t\n\t    isDown: function isDown(keyCode) {\n\t        return this._pressed[keyCode];\n\t    },\n\t    onKeydown: function onKeydown(event) {\n\t        this.lastPressed = event.keyCode;\n\t        this._pressed[event.keyCode] = true;\n\t    },\n\t    onKeyup: function onKeyup(event) {\n\t        this._pressed[event.keyCode] = false;\n\t    },\n\t    keyByCode: function keyByCode(code) {\n\t        return codes[code];\n\t    },\n\t\n\t    get pressedCodes() {\n\t        return this._pressed;\n\t    },\n\t\n\t    get pressedKeys() {\n\t        var pressed = [];\n\t\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t            for (var _iterator2 = this._pressed[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                var code = _step2.value;\n\t\n\t                pressed.push(this.keyByCode(code));\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError2 = true;\n\t            _iteratorError2 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                    _iterator2.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError2) {\n\t                    throw _iteratorError2;\n\t                }\n\t            }\n\t        }\n\t\n\t        return pressed;\n\t    },\n\t\n\t    keys: keys,\n\t    get letterKeyCodes() {\n\t        var letterCodes = [];\n\t\n\t        var _iteratorNormalCompletion3 = true;\n\t        var _didIteratorError3 = false;\n\t        var _iteratorError3 = undefined;\n\t\n\t        try {\n\t            for (var _iterator3 = Object.keys(letterKeys)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                var key = _step3.value;\n\t\n\t                letterCodes.push(letterKeys[key]);\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                    _iterator3.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError3) {\n\t                    throw _iteratorError3;\n\t                }\n\t            }\n\t        }\n\t\n\t        return letterCodes;\n\t    }\n\t};\n\t\n\tvar _iteratorNormalCompletion4 = true;\n\tvar _didIteratorError4 = false;\n\tvar _iteratorError4 = undefined;\n\t\n\ttry {\n\t    for (var _iterator4 = Object.keys(keys)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t        var key = _step4.value;\n\t\n\t        var code = keys[key];\n\t\n\t        codes[code] = key;\n\t        Keyboard[key] = code;\n\t    }\n\t} catch (err) {\n\t    _didIteratorError4 = true;\n\t    _iteratorError4 = err;\n\t} finally {\n\t    try {\n\t        if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t            _iterator4.return();\n\t        }\n\t    } finally {\n\t        if (_didIteratorError4) {\n\t            throw _iteratorError4;\n\t        }\n\t    }\n\t}\n\t\n\twindow.addEventListener('keyup', function (event) {\n\t    Keyboard.onKeyup(event);\n\t    event.preventDefault();\n\t}, false);\n\t\n\twindow.addEventListener('keydown', function (event) {\n\t    Keyboard.onKeydown(event);\n\t    event.preventDefault();\n\t}, false);\n\t\n\texports.default = Keyboard;\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _gamepadMicro = __webpack_require__(44);\n\t\n\tvar _gamepadMicro2 = _interopRequireDefault(_gamepadMicro);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _gp = new _gamepadMicro2.default();\n\tvar _gamepads = [];\n\t\n\tvar Gamepad = {\n\t    isDown: function isDown(index, button) {\n\t        if (_gamepads.length > 0) {\n\t            // FIXME rewrite gamepad-micro\n\t            var gamepad = _gamepads[index + 1];\n\t\n\t            if (gamepad.buttons[button] && gamepad.buttons[button].held) {\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        }\n\t    },\n\t    isStickDown: function isStickDown(index, stick, direction) {\n\t        if (_gamepads.length > 0) {\n\t            // FIXME rewrite gamepad-micro\n\t            var gamepad = _gamepads[index + 1];\n\t\n\t            if (stick === 'right' && gamepad.rightStick) {\n\t                if (direction === 'right') {\n\t                    if (gamepad.rightStick.x > 0.5) {\n\t                        return true;\n\t                    }\n\t                } else if (direction === 'left') {\n\t                    if (gamepad.rightStick.x < -0.5) {\n\t                        return true;\n\t                    }\n\t                } else if (direction === 'up') {\n\t                    if (gamepad.rightStick.y < -0.5) {\n\t                        return true;\n\t                    }\n\t                } else if (direction === 'down') {\n\t                    if (gamepad.rightStick.y > 0.5) {\n\t                        return true;\n\t                    }\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t\n\t            if (stick === 'left' && gamepad.leftStick) {\n\t                if (direction === 'right') {\n\t                    if (gamepad.leftStick.x > 0.5) {\n\t                        return true;\n\t                    }\n\t                } else if (direction === 'left') {\n\t                    if (gamepad.leftStick.x < -0.5) {\n\t                        return true;\n\t                    }\n\t                } else if (direction === 'up') {\n\t                    if (gamepad.leftStick.y < -0.5) {\n\t                        return true;\n\t                    }\n\t                } else if (direction === 'down') {\n\t                    if (gamepad.leftStick.y > 0.5) {\n\t                        return true;\n\t                    }\n\t                } else {\n\t                    return false;\n\t                }\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\t_gp.onUpdate(function (gamepads) {\n\t    _gamepads = gamepads;\n\t\n\t    if (_gp.gamepadsConnected) {} else {}\n\t});\n\t\n\texports.default = Gamepad;\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _typeof(obj) { return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; }\n\t\n\t/**\n\t * Copyright 2014 Christopher Dolphin. All Rights Reserved.\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t *     http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * @author dolphin@likethemammal.com (Chris Dolphin)\n\t */\n\t\n\t/**\n\t * GamepadMicro provides an easy interface to the Gamepad API.\n\t *\n\t * @constructor\n\t */\n\tfunction GamepadMicro() {\n\t    this._buttonNames = ['actionSouth', 'actionEast', 'actionWest', 'actionNorth', 'leftBumper', 'rightBumper', 'leftTrigger', 'rightTrigger', 'select', 'start', 'leftStick', 'rightStick', 'dPadUp', 'dPadDown', 'dPadLeft', 'dPadRight', 'extra'];\n\t\n\t    this.reset();\n\t}\n\t\n\tGamepadMicro.prototype.reset = function () {\n\t    this._ticking = false;\n\t    this._prevTimestamps = [];\n\t    this._connectionListening = false;\n\t    this._updateCallback = function () {};\n\t    this._prevRawGamepadTypes = [];\n\t    this.gamepadconnected = _getRawGamepads.length > 0;\n\t    this.gamepadConnected = !!this.gamepadconnected;\n\t    this.gamepadSupported = !!_gamepadSupported();\n\t    this.gamepads = [];\n\t    this._heldButtonDelay = 200;\n\t    this._heldTimestampByGamepad = {};\n\t};\n\t\n\tvar _newGamepad = function _newGamepad() {\n\t    return {\n\t        leftStick: { x: 0, y: 0 },\n\t        rightStick: { x: 0, y: 0 },\n\t        dPad: { x: 0, y: 0 },\n\t        buttons: {},\n\t        _pressed: {},\n\t        timestamp: 0\n\t    };\n\t};\n\t\n\tGamepadMicro.prototype.onUpdate = function (callback) {\n\t    this._updateCallback = callback;\n\t    this._checkForEvents();\n\t    this._setupPoll();\n\t};\n\t\n\tGamepadMicro.prototype.offUpdate = function () {\n\t    this._shouldRemoveEvents();\n\t    this._removePoll();\n\t};\n\t\n\tGamepadMicro.prototype.update = function () {\n\t    this._updateCallback(this.gamepads);\n\t};\n\t\n\tGamepadMicro.prototype._checkForEvents = function () {\n\t    if (!this._connectionListening) {\n\t        window.addEventListener('gamepadconnected', this._onGamepadConnected.bind(this), false);\n\t        window.addEventListener('gamepaddisconnected', this._onGamepadDisconnected.bind(this), false);\n\t        this._connectionListening = true;\n\t    }\n\t};\n\t\n\tGamepadMicro.prototype._shouldRemoveEvents = function () {\n\t    if (this._connectionListening) {\n\t        window.removeEventListener('gamepadconnected', this._onGamepadConnected.bind(this));\n\t        window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnected.bind(this));\n\t        this._connectionListening = false;\n\t    }\n\t};\n\t\n\tGamepadMicro.prototype._onGamepadConnected = function (event) {\n\t    var gamepad = event.gamepad;\n\t\n\t    if (gamepad.mapping === 'standard') {\n\t        this.gamepads[gamepad.index] = _newGamepad();\n\t        this.gamepadconnected = true;\n\t\n\t        this.update();\n\t    }\n\t};\n\t\n\tGamepadMicro.prototype._onGamepadDisconnected = function (event) {\n\t    var disconnectedGamepad = event.gamepad;\n\t    var gamepads = this.gamepads;\n\t\n\t    gamepads.forEach(function (gamepad, index) {\n\t        if (index === disconnectedGamepad.index) {\n\t            gamepads.splice(index, 1);\n\t        }\n\t    });\n\t\n\t    if (!gamepads.length) {\n\t        this.gamepadconnected = false;\n\t    }\n\t\n\t    this.update();\n\t};\n\t\n\tvar _getRawGamepads = function _getRawGamepads() {\n\t    var gamepads = navigator.getGamepads && navigator.getGamepads() || navigator.webkitGetGamepads && navigator.webkitGetGamepads();\n\t    var standardGamepads = [];\n\t\n\t    if (gamepads) {\n\t        for (var i = 0, len = gamepads.length; i < len; i++) {\n\t            var gp = gamepads[i];\n\t\n\t            if (gp && gp.mapping === 'standard') {\n\t                standardGamepads.push(gp);\n\t            }\n\t        }\n\t    }\n\t\n\t    return standardGamepads;\n\t};\n\t\n\tvar _buttonPressed = function _buttonPressed(gamepad, index) {\n\t    if (!gamepad || !gamepad.buttons || index >= gamepad.buttons.length) {\n\t        return false;\n\t    }\n\t\n\t    var b = gamepad.buttons[index];\n\t    var pressure = null;\n\t\n\t    if (!b) {\n\t        return false;\n\t    }\n\t\n\t    pressure = b;\n\t\n\t    if ((typeof b === 'undefined' ? 'undefined' : _typeof(b)) === 'object') {\n\t        pressure = b.value;\n\t    }\n\t\n\t    return pressure === 1.0;\n\t};\n\t\n\tGamepadMicro.prototype._checkForGamepadChange = function () {\n\t    var rawGamepads = _getRawGamepads();\n\t    var changed = false;\n\t    var changedRawGamepads = {};\n\t    var gamepadIndex = 0;\n\t\n\t    for (var i = 0; i < rawGamepads.length; i++) {\n\t        var gamepad = rawGamepads[i];\n\t        var heldTimestamps = null;\n\t        var hasBeenHeld = null;\n\t\n\t        if (!gamepad.timestamp) {\n\t            continue;\n\t        }\n\t\n\t        gamepadIndex = gamepad.index;\n\t\n\t        // Browsers don't update the gamepad timestamp if a button remains held.\n\t        // This is a manual check to see if any button has been held. Since the\n\t        // browser would tell us if it released, we'll assume some button is\n\t        // still held and announce it's continued heldness.\n\t        heldTimestamps = this._heldTimestampByGamepad[gamepadIndex] || {};\n\t        hasBeenHeld = Object.keys(heldTimestamps).length === 0;\n\t\n\t        // Don’t do anything if the current timestamp is the same as previous\n\t        // one, which means that the state of the gamepad hasn’t changed.\n\t        // This is only supported by Chrome right now, so the first check\n\t        // makes sure we’re not doing anything if the timestamps are empty\n\t        // or undefined.\n\t\n\t        if (gamepad.timestamp === this._prevTimestamps[gamepadIndex] && hasBeenHeld) {\n\t            continue;\n\t        }\n\t\n\t        this._prevTimestamps[gamepadIndex] = gamepad.timestamp;\n\t        changedRawGamepads[gamepadIndex] = gamepad;\n\t        changed = true;\n\t    }\n\t\n\t    return changed ? changedRawGamepads : false;\n\t};\n\t\n\tGamepadMicro.prototype._poll = function () {\n\t    var _this = this;\n\t\n\t    var rawGamepads = this._checkForGamepadChange();\n\t\n\t    if (!rawGamepads) {\n\t        return;\n\t    }\n\t\n\t    this.gamepadconnected = true;\n\t    this.gamepadConnected = true;\n\t    this.gamepadSupported = true;\n\t\n\t    var currentGamepads = this.gamepads;\n\t    var buttonNames = this._buttonNames;\n\t\n\t    Object.keys(rawGamepads).map(function (gamepadIndex) {\n\t        var currentRawGamepad = rawGamepads[gamepadIndex];\n\t\n\t        if (!currentRawGamepad) {\n\t            return;\n\t        }\n\t\n\t        // Gamepad(s) has changed\n\t        if ((typeof currentRawGamepad === 'undefined' ? 'undefined' : _typeof(currentRawGamepad)) !== _this._prevRawGamepadTypes[gamepadIndex]) {\n\t            _this._prevRawGamepadTypes[gamepadIndex] = typeof currentGamepad === 'undefined' ? 'undefined' : _typeof(currentGamepad);\n\t        }\n\t\n\t        var activeButtons = {};\n\t        var currentGamepad = currentGamepads[gamepadIndex] || _newGamepad();\n\t        var heldTimestamps = _this._heldTimestampByGamepad[gamepadIndex] || {};\n\t\n\t        for (var k = 0, len = buttonNames.length; k < len; k++) {\n\t            var name = buttonNames[k];\n\t            var heldTimestamp = heldTimestamps[name];\n\t            var isSameTimestamp = null;\n\t            var wasDown = !!currentGamepad._pressed[name];\n\t            var isDown = currentGamepad._pressed[name] = _buttonPressed(currentRawGamepad, k);\n\t            var now = Date.now();\n\t\n\t            if (wasDown && !isDown) {\n\t                activeButtons[name] = {\n\t                    released: true,\n\t                    held: false\n\t                };\n\t\n\t                if (heldTimestamps) {\n\t                    delete heldTimestamps[name];\n\t                }\n\t            } else if (isDown) {\n\t                if (heldTimestamp) {\n\t                    isSameTimestamp = heldTimestamp['gamepadTimestamp'] === currentRawGamepad.timestamp;\n\t\n\t                    // If the gamepad timestamp hasn't changed and the time is after the held delay\n\t                    if (isSameTimestamp && now > heldTimestamp['browserTimestamp'] + _this._heldButtonDelay || currentRawGamepad.timestamp > heldTimestamp['gamepadTimestamp'] + _this._heldButtonDelay) {\n\t                        activeButtons[name] = {\n\t                            held: true\n\t                        };\n\t                    }\n\t                } else {\n\t                    heldTimestamps[name] = {\n\t\n\t                        // Gamepad Timestamps are HighResTimeStamps relative when gamepad was connected\n\t                        gamepadTimestamp: currentRawGamepad.timestamp,\n\t                        browserTimestamp: now\n\t                    };\n\t                }\n\t            }\n\t        }\n\t\n\t        _this._heldTimestampByGamepad[gamepadIndex] = heldTimestamps;\n\t\n\t        currentGamepad.timestamp = currentRawGamepad.timestamp;\n\t        currentGamepad.buttons = activeButtons;\n\t\n\t        // update the sticks\n\t        currentGamepad.leftStick.x = currentRawGamepad.axes[0];\n\t        currentGamepad.leftStick.y = currentRawGamepad.axes[1];\n\t        currentGamepad.rightStick.x = currentRawGamepad.axes[2];\n\t        currentGamepad.rightStick.y = currentRawGamepad.axes[3];\n\t\n\t        // dpad isn't a true stick, infer from buttons\n\t        currentGamepad.dPad.x = (currentGamepad.buttons.dPadLeft ? -1 : 0) + (currentGamepad.buttons.dPadRight ? 1 : 0);\n\t        currentGamepad.dPad.y = (currentGamepad.buttons.dPadUp ? -1 : 0) + (currentGamepad.buttons.dPadDown ? 1 : 0);\n\t\n\t        _this.gamepads[gamepadIndex] = currentGamepad;\n\t    });\n\t\n\t    this.update();\n\t};\n\t\n\tGamepadMicro.prototype._setupPoll = function () {\n\t    if (!this._ticking) {\n\t        this._ticking = true;\n\t        this._tick();\n\t    }\n\t};\n\t\n\tGamepadMicro.prototype._tick = function () {\n\t    var tickFunc = GamepadMicro.prototype._tick.bind(this);\n\t\n\t    this._poll();\n\t\n\t    if (this._ticking) {\n\t        if (window.requestAnimationFrame) {\n\t            window.requestAnimationFrame(tickFunc);\n\t        } else if (window.mozRequestAnimationFrame) {\n\t            window.mozRequestAnimationFrame(tickFunc);\n\t        } else if (window.webkitRequestAnimationFrame) {\n\t            window.webkitRequestAnimationFrame(tickFunc);\n\t        }\n\t    }\n\t};\n\t\n\tGamepadMicro.prototype._removePoll = function () {\n\t    this._ticking = false;\n\t};\n\t\n\tvar _gamepadSupported = function _gamepadSupported() {\n\t    return navigator.getGamepads || !!navigator.webkitGetGamepads || !!navigator.webkitGamepads;\n\t};\n\t\n\texports.default = GamepadMicro;\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Keyboard = __webpack_require__(42);\n\t\n\tvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\t\n\tvar _Gamepad = __webpack_require__(43);\n\t\n\tvar _Gamepad2 = _interopRequireDefault(_Gamepad);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar HumanInput = (function () {\n\t    function HumanInput() {\n\t        _classCallCheck(this, HumanInput);\n\t\n\t        this._previousKeyboardKeys = {};\n\t        this._previousGamepadStick = {};\n\t        this._previousGamepadButton = {};\n\t        this.gamepadIndex = 0;\n\t    }\n\t\n\t    _createClass(HumanInput, [{\n\t        key: 'keyboardDownOnce',\n\t        value: function keyboardDownOnce(keyCode) {\n\t            if (!this._previousKeyboardKeys[keyCode] && _Keyboard2.default.isDown(keyCode)) {\n\t                this._previousKeyboardKeys[keyCode] = true;\n\t\n\t                return true;\n\t            } else if (this._previousKeyboardKeys[keyCode] && !_Keyboard2.default.isDown(keyCode)) {\n\t                this._previousKeyboardKeys[keyCode] = false;\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'gamepadStickDownOnce',\n\t        value: function gamepadStickDownOnce(stick, direction) {\n\t            if (!this._previousGamepadStick[stick + direction] && !_Gamepad2.default.isStickDown(this.gamepadIndex, stick, direction)) {\n\t                this._previousGamepadStick[stick + direction] = true;\n\t            } else if (this._previousGamepadStick[stick + direction] && !_Gamepad2.default.isStickDown(this.gamepadIndex, stick, direction)) {\n\t                this._previousGamepadStick[stick + direction] = false;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'gamepadButtonDownOnce',\n\t        value: function gamepadButtonDownOnce(button) {\n\t            if (!this._previousGamepadButton[button] && !_Gamepad2.default.isDown(this.gamepadIndex, button)) {\n\t                this._previousGamepadButton[button] = true;\n\t            } else if (this._previousGamepadButton[button] && !_Gamepad2.default.isDown(this.gamepadIndex, button)) {\n\t                this._previousGamepadButton[button] = false;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return HumanInput;\n\t})();\n\t\n\texports.default = HumanInput;\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tvar _LogoView = __webpack_require__(47);\n\t\n\tvar _LogoView2 = _interopRequireDefault(_LogoView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuItemsView = (function (_View) {\n\t    _inherits(MenuItemsView, _View);\n\t\n\t    function MenuItemsView(menu) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {\n\t            selectedTextColor: 0x00ff00,\n\t            textColor: 0xffdddd\n\t        } : arguments[1];\n\t\n\t        _classCallCheck(this, MenuItemsView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuItemsView).call(this));\n\t\n\t        _this.menu = menu;\n\t        _this.options = options;\n\t        _this.viewMenuItemPairs = new Map();\n\t        _this.selectedItem = null;\n\t        _this.selectedView = null;\n\t        _this.logoView = new _LogoView2.default('logo', 'ui');\n\t        return _this;\n\t    }\n\t\n\t    _createClass(MenuItemsView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            var distance = 100;\n\t            var startY = 200;\n\t            var itemCount = 0;\n\t\n\t            this.selectedItem = this.menu.selectedItem;\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.menu.menuItems.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var menuItem = _step.value;\n\t\n\t                    var textView = new _graphics.TextView(menuItem.text, {\n\t                        width: 300\n\t                    });\n\t\n\t                    textView.init();\n\t                    textView.mesh.position.y = startY - distance * itemCount;\n\t                    textView.mesh.position.x += 100;\n\t\n\t                    if (this.selectedItem === menuItem) {\n\t                        textView.color = this.options.selectedTextColor;\n\t                    } else {\n\t                        textView.color = this.options.textColor;\n\t                    }\n\t\n\t                    this.viewMenuItemPairs.set(menuItem, textView);\n\t\n\t                    this.mesh.add(textView.mesh);\n\t                    itemCount += 1;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            _get(Object.getPrototypeOf(MenuItemsView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            // Selected item changed\n\t            if (this.selectedItem !== this.menu.selectedItem) {\n\t                var previousItem = this.selectedItem;\n\t\n\t                this.selectedItem = this.menu.selectedItem;\n\t\n\t                var currentView = this.viewMenuItemPairs.get(this.selectedItem);\n\t                var previousView = this.viewMenuItemPairs.get(previousItem);\n\t\n\t                currentView.text = this.selectedItem.text;\n\t\n\t                previousView.color = this.options.textColor;\n\t                currentView.color = this.options.selectedTextColor;\n\t            }\n\t\n\t            if (this.menu.selectedItem.editable && this.menu.selectedItem.isEditing) {\n\t                var currentView = this.viewMenuItemPairs.get(this.selectedItem);\n\t\n\t                currentView.text = this.selectedItem.text + '-';\n\t            } else {\n\t                var currentView = this.viewMenuItemPairs.get(this.selectedItem);\n\t\n\t                currentView.text = this.selectedItem.text;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return MenuItemsView;\n\t})(_graphics.View);\n\t\n\texports.default = MenuItemsView;\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tconsole.log(_graphics.View);\n\t\n\tvar LogoView = (function (_View) {\n\t    _inherits(LogoView, _View);\n\t\n\t    function LogoView(textureName, textureAtlasName) {\n\t        _classCallCheck(this, LogoView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(LogoView).call(this));\n\t\n\t        _this.textureName = textureName;\n\t        _this.textureAtlasName = textureAtlasName;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(LogoView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var textureAtlas = _graphics.TextureManager.getAtlas(this.textureAtlasName, true);\n\t            var logoSize = textureAtlas.getFrameSize(this.textureName);\n\t\n\t            this.geometry = new THREE.PlaneGeometry(logoSize.width, logoSize.height);\n\t\n\t            var textureFrame = new _graphics.TextureFrame(textureAtlas, this.geometry, this.textureName);\n\t            var material = new THREE.MeshBasicMaterial({\n\t                map: textureFrame.texture,\n\t                transparent: true\n\t            });\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, material);\n\t\n\t            _get(Object.getPrototypeOf(LogoView.prototype), 'init', this).call(this);\n\t        }\n\t    }]);\n\t\n\t    return LogoView;\n\t})(_graphics.View);\n\t\n\t;\n\t\n\texports.default = LogoView;\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _RenderView2 = __webpack_require__(17);\n\t\n\tvar _RenderView3 = _interopRequireDefault(_RenderView2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuRenderView = (function (_RenderView) {\n\t    _inherits(MenuRenderView, _RenderView);\n\t\n\t    function MenuRenderView(state) {\n\t        _classCallCheck(this, MenuRenderView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuRenderView).call(this));\n\t\n\t        _this.state = state;\n\t        _this.menu = state.menus;\n\t        _this.clearColor = 0x000000;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(MenuRenderView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            _get(Object.getPrototypeOf(MenuRenderView.prototype), 'init', this).call(this);\n\t\n\t            this.camera = new THREE.OrthographicCamera(0, this.width, this.height, 0, 0, 1);\n\t\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(MenuRenderView.prototype), 'update', this).call(this, delta);\n\t\n\t            if (this.currentViewContainerName !== this.state.currentMenuName) {\n\t                this.currentViewContainer = this.state.currentMenuName;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return MenuRenderView;\n\t})(_RenderView3.default);\n\t\n\texports.default = MenuRenderView;\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _StateAudio2 = __webpack_require__(50);\n\t\n\tvar _StateAudio3 = _interopRequireDefault(_StateAudio2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuAudio = (function (_StateAudio) {\n\t    _inherits(MenuAudio, _StateAudio);\n\t\n\t    function MenuAudio(state, effectsSpriteName, backgroundSpriteName) {\n\t        _classCallCheck(this, MenuAudio);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuAudio).call(this, state, effectsSpriteName, backgroundSpriteName));\n\t\n\t        _this.selectedItem = _this.state.currentMenu.selectedItem;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(MenuAudio, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            // Selected item changed\n\t            if (this.selectedItem !== this.state.currentMenu.selectedItem) {\n\t                this.selectedItem = this.state.currentMenu.selectedItem;\n\t                this.effects.play('select');\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return MenuAudio;\n\t})(_StateAudio3.default);\n\t\n\texports.default = MenuAudio;\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _AssetManager = __webpack_require__(8);\n\t\n\tvar _AssetManager2 = _interopRequireDefault(_AssetManager);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar StateAudio = (function () {\n\t    function StateAudio(state) {\n\t        var effectsSpriteName = arguments.length <= 1 || arguments[1] === undefined ? null : arguments[1];\n\t        var backgroundSpriteName = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\t\n\t        _classCallCheck(this, StateAudio);\n\t\n\t        this.state = state;\n\t        this.effectsSpriteName = effectsSpriteName;\n\t        this.backgroundSpriteName = backgroundSpriteName;\n\t\n\t        this.effects = null;\n\t        this.backgrounds = null;\n\t\n\t        this._initialized = false;\n\t    }\n\t\n\t    _createClass(StateAudio, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            if (this.effectsSpriteName) {\n\t                this.effects = _AssetManager2.default.getAudioSprite(this.effectsSpriteName).sound;\n\t            }\n\t\n\t            if (this.backgroundSpriteName) {\n\t                this.backgrounds = _AssetManager2.default.getAudioSprite(this.backgroundSpriteName).sound;\n\t            }\n\t\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'stopEffects',\n\t        value: function stopEffects() {\n\t            if (this.effects) {\n\t                this.effects.stop();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'stopBackground',\n\t        value: function stopBackground() {\n\t            if (this.backgrounds) {\n\t                this.backgrounds.stop();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return StateAudio;\n\t})();\n\t\n\texports.default = StateAudio;\n\n/***/ },\n/* 51 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Menu = (function () {\n\t    function Menu() {\n\t        _classCallCheck(this, Menu);\n\t\n\t        this.menuItems = new Map();\n\t        this.menuItemKeys = [];\n\t        this.selectedItemIndex = 0;\n\t    }\n\t\n\t    _createClass(Menu, [{\n\t        key: \"addMenuItem\",\n\t        value: function addMenuItem(menuItem) {\n\t            this.menuItemKeys.push(menuItem.name);\n\t            this.menuItems.set(menuItem.name, menuItem);\n\t        }\n\t    }, {\n\t        key: \"moveUp\",\n\t        value: function moveUp() {\n\t            if (this.selectedItemIndex > 0) {\n\t                this.selectedItemIndex -= 1;\n\t            } else {\n\t                this.selectedItemIndex = 0;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"moveDown\",\n\t        value: function moveDown() {\n\t            if (this.selectedItemIndex < this.menuItemKeys.length - 1) {\n\t                this.selectedItemIndex += 1;\n\t            } else {\n\t                this.selectedItemIndex = this.menuItemKeys.length - 1;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"selectCurrentItem\",\n\t        value: function selectCurrentItem() {\n\t            this.selectedItem.action();\n\t        }\n\t    }, {\n\t        key: \"selectedItem\",\n\t        get: function get() {\n\t            return this.menuItems.get(this.menuItemKeys[this.selectedItemIndex]);\n\t        }\n\t    }]);\n\t\n\t    return Menu;\n\t})();\n\t\n\texports.default = Menu;\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Menu = __webpack_require__(51);\n\t\n\tvar _Menu2 = _interopRequireDefault(_Menu);\n\t\n\tvar _MenuItem = __webpack_require__(40);\n\t\n\tvar _MenuItem2 = _interopRequireDefault(_MenuItem);\n\t\n\tvar _MenuInputItem = __webpack_require__(53);\n\t\n\tvar _MenuInputItem2 = _interopRequireDefault(_MenuInputItem);\n\t\n\tvar _BackgroundView = __webpack_require__(39);\n\t\n\tvar _BackgroundView2 = _interopRequireDefault(_BackgroundView);\n\t\n\tvar _ViewContainer = __webpack_require__(38);\n\t\n\tvar _ViewContainer2 = _interopRequireDefault(_ViewContainer);\n\t\n\tvar _MenuItemsView = __webpack_require__(46);\n\t\n\tvar _MenuItemsView2 = _interopRequireDefault(_MenuItemsView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar OptionsMenu = {\n\t    create: function create(menuState) {\n\t        var menu = new _Menu2.default();\n\t        var viewContainer = new _ViewContainer2.default();\n\t\n\t        menu.addMenuItem(new _MenuInputItem2.default('name', 'Name', 'Unknown Soldier', function (value) {\n\t            menuState.changeOption('name', value);\n\t        }));\n\t\n\t        menu.addMenuItem(new _MenuItem2.default('back', '- back', function () {\n\t            menuState.currentMenu = 'main';\n\t        }));\n\t\n\t        viewContainer.addDynamicView(new _MenuItemsView2.default(menu), { x: 300, y: 100, z: 0 });\n\t\n\t        var background = new _BackgroundView2.default('iwo_jima', 'ui');\n\t\n\t        background.lightness = 0.5;\n\t\n\t        viewContainer.backgroundView = background;\n\t\n\t        return {\n\t            viewContainer: viewContainer,\n\t            menu: menu\n\t        };\n\t    }\n\t};\n\t\n\texports.default = OptionsMenu;\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _MenuItem2 = __webpack_require__(40);\n\t\n\tvar _MenuItem3 = _interopRequireDefault(_MenuItem2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuInputItem = (function (_MenuItem) {\n\t    _inherits(MenuInputItem, _MenuItem);\n\t\n\t    function MenuInputItem(name, label, defaultValue, onAction) {\n\t        _classCallCheck(this, MenuInputItem);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuInputItem).call(this, name, label + ': ' + defaultValue, onAction));\n\t\n\t        _this.label = label;\n\t        _this.defaultValue = defaultValue;\n\t        _this.isEditing = false;\n\t        _this._value = defaultValue;\n\t        _this.editable = true;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(MenuInputItem, [{\n\t        key: 'action',\n\t        value: function action() {\n\t            this.isEditing = !this.isEditing;\n\t\n\t            if (!this.isEditing && this.onAction) {\n\t                this.onAction(this._value);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'value',\n\t        set: function set(value) {\n\t            this._value = value;\n\t            this.text = this.label + ': ' + value;\n\t        },\n\t        get: function get() {\n\t            return this._value;\n\t        }\n\t    }]);\n\t\n\t    return MenuInputItem;\n\t})(_MenuItem3.default);\n\t\n\texports.default = MenuInputItem;\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Menu = __webpack_require__(51);\n\t\n\tvar _Menu2 = _interopRequireDefault(_Menu);\n\t\n\tvar _MenuItem = __webpack_require__(40);\n\t\n\tvar _MenuItem2 = _interopRequireDefault(_MenuItem);\n\t\n\tvar _BackgroundView = __webpack_require__(39);\n\t\n\tvar _BackgroundView2 = _interopRequireDefault(_BackgroundView);\n\t\n\tvar _ViewContainer = __webpack_require__(38);\n\t\n\tvar _ViewContainer2 = _interopRequireDefault(_ViewContainer);\n\t\n\tvar _MenuItemsView = __webpack_require__(46);\n\t\n\tvar _MenuItemsView2 = _interopRequireDefault(_MenuItemsView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar HelpMenu = {\n\t    create: function create(menuState) {\n\t        var menu = new _Menu2.default();\n\t        var viewContainer = new _ViewContainer2.default();\n\t\n\t        menu.addMenuItem(new _MenuItem2.default('back', '- back', function () {\n\t            menuState.currentMenu = 'main';\n\t        }));\n\t\n\t        viewContainer.addDynamicView(new _MenuItemsView2.default(menu), { x: 300, y: 100, z: 0 });\n\t\n\t        var background = new _BackgroundView2.default('iwo_jima', 'ui');\n\t\n\t        background.lightness = 0.5;\n\t\n\t        viewContainer.backgroundView = background;\n\t\n\t        return {\n\t            viewContainer: viewContainer,\n\t            menu: menu\n\t        };\n\t    }\n\t};\n\t\n\texports.default = HelpMenu;\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _PlayState = __webpack_require__(56);\n\t\n\tvar _PlayState2 = _interopRequireDefault(_PlayState);\n\t\n\tvar _ViewBuilder = __webpack_require__(58);\n\t\n\tvar _ViewBuilder2 = _interopRequireDefault(_ViewBuilder);\n\t\n\tvar _Match = __webpack_require__(74);\n\t\n\tvar _Match2 = _interopRequireDefault(_Match);\n\t\n\tvar _PlayerInput = __webpack_require__(75);\n\t\n\tvar _PlayerInput2 = _interopRequireDefault(_PlayerInput);\n\t\n\tvar _UiInput = __webpack_require__(76);\n\t\n\tvar _UiInput2 = _interopRequireDefault(_UiInput);\n\t\n\tvar _ComputerInput = __webpack_require__(78);\n\t\n\tvar _ComputerInput2 = _interopRequireDefault(_ComputerInput);\n\t\n\tvar _Player = __webpack_require__(79);\n\t\n\tvar _Player2 = _interopRequireDefault(_Player);\n\t\n\tvar _PlayAudio = __webpack_require__(87);\n\t\n\tvar _PlayAudio2 = _interopRequireDefault(_PlayAudio);\n\t\n\tvar _MapParser = __webpack_require__(88);\n\t\n\tvar _MapParser2 = _interopRequireDefault(_MapParser);\n\t\n\tvar _AssetManager = __webpack_require__(8);\n\t\n\tvar _AssetManager2 = _interopRequireDefault(_AssetManager);\n\t\n\tvar _Soldier = __webpack_require__(80);\n\t\n\tvar _Soldier2 = _interopRequireDefault(_Soldier);\n\t\n\tvar _CollisionSystem = __webpack_require__(92);\n\t\n\tvar _CollisionSystem2 = _interopRequireDefault(_CollisionSystem);\n\t\n\tvar _BulletSystem = __webpack_require__(97);\n\t\n\tvar _BulletSystem2 = _interopRequireDefault(_BulletSystem);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Create CPU soldiers.\n\t *\n\t * @param {PlayState} playState The play playState.\n\t * @param {number} count Number of CPU soldiers.\n\t *\n\t * @return {void}\n\t */\n\tfunction createCpuSoldiers(playState, count) {\n\t    for (var i = 0; i < count; i++) {\n\t        var _playState$map$random = playState.map.randomRespawnPosition();\n\t\n\t        var x = _playState$map$random.x;\n\t        var y = _playState$map$random.y;\n\t        var z = _playState$map$random.z;\n\t\n\t        var soldier = new _Soldier2.default(x, y, z, 48, 48, 1, 'american');\n\t\n\t        playState.inputs.add(new _ComputerInput2.default(soldier));\n\t        playState.match.addSoldier(soldier);\n\t    }\n\t}\n\t\n\t/**\n\t * Create the player entity and add it to the play state.\n\t *\n\t * @param {PlayState} playState The play state.\n\t * @param {string} name Name of the player.\n\t *\n\t * @return {void}\n\t */\n\tfunction createPlayer(playState, name) {\n\t    var _playState$map$random2 = playState.map.randomRespawnPosition();\n\t\n\t    var x = _playState$map$random2.x;\n\t    var y = _playState$map$random2.y;\n\t    var z = _playState$map$random2.z;\n\t\n\t    var player = new _Player2.default(x, y, z, 48, 48, 1, 'american');\n\t    var playerInput = new _PlayerInput2.default(player);\n\t\n\t    playState.player = player;\n\t    playState.inputs.add(playerInput);\n\t    playState.match.addSoldier(player, 'american');\n\t}\n\t\n\t/**\n\t * Create the views for the play state.\n\t *\n\t * @param {PlayState} playState The play state.\n\t *\n\t * @return {void}\n\t */\n\tfunction createViews(playState) {\n\t    playState.addView(_ViewBuilder2.default.playView(playState));\n\t    playState.addView(_ViewBuilder2.default.uiView(playState));\n\t}\n\t\n\tvar PlayBuilder = {\n\t    createSingleplayer: function createSingleplayer(engine, options) {\n\t        var map = _MapParser2.default.parse(_AssetManager2.default.getMap(options.map));\n\t        var match = new _Match2.default(options.teams);\n\t        var playState = new _PlayState2.default(match, map);\n\t\n\t        createCpuSoldiers(playState, options.cpuCount);\n\t        createPlayer(playState, options.playerName);\n\t\n\t        var collisionSystem = new _CollisionSystem2.default(playState);\n\t        var bulletSystem = new _BulletSystem2.default(playState, {\n\t            poolLimit: options.poolLimit || 200\n\t        });\n\t\n\t        playState.bulletSystem = bulletSystem;\n\t        playState.collisionSystem = collisionSystem;\n\t        playState.audio = new _PlayAudio2.default(playState, 'guns', 'background');\n\t\n\t        var uiInput = new _UiInput2.default(playState);\n\t\n\t        playState.inputs.add(uiInput);\n\t\n\t        createViews(playState);\n\t\n\t        return playState;\n\t    }\n\t};\n\t\n\texports.default = PlayBuilder;\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _State2 = __webpack_require__(57);\n\t\n\tvar _State3 = _interopRequireDefault(_State2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * State of playing the game.\n\t *\n\t * @class\n\t * @extends State\n\t */\n\t\n\tvar PlayState = (function (_State) {\n\t    _inherits(PlayState, _State);\n\t\n\t    function PlayState(match, map) {\n\t        _classCallCheck(this, PlayState);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PlayState).call(this, 'play'));\n\t\n\t        _this.collisionSystem = null;\n\t        _this.bulletSystem = null;\n\t        _this.network = null;\n\t        _this.player = null;\n\t        _this.map = map;\n\t        _this.match = match;\n\t\n\t        // FIXME get this out of here\n\t        _this.showScores = false;\n\t        _this.paused = false;\n\t        _this.onPause = null;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(PlayState, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            _get(Object.getPrototypeOf(PlayState.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'pause',\n\t        value: function pause() {\n\t            if (this.onPause) {\n\t                this.onPause();\n\t            }\n\t\n\t            this.paused = true;\n\t        }\n\t    }, {\n\t        key: 'resume',\n\t        value: function resume() {\n\t            this.paused = false;\n\t        }\n\t\n\t        /**\n\t         * Update the state. Logic and views are updated.\n\t         *\n\t         * @param {float} delta - delta time.\n\t         *\n\t         * @returns {void}\n\t         */\n\t\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(PlayState.prototype), 'updateInputs', this).call(this, delta);\n\t\n\t            if (this.network) {\n\t                this.network.update();\n\t            }\n\t\n\t            if (this.paused) {\n\t                return;\n\t            }\n\t\n\t            _get(Object.getPrototypeOf(PlayState.prototype), 'updateAudio', this).call(this, delta);\n\t\n\t            // Relies on previous turn\n\t            if (this.bulletSystem) {\n\t                this.bulletSystem.update(delta);\n\t            }\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.soldiers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var soldier = _step.value;\n\t\n\t                    soldier.update(delta);\n\t\n\t                    if (soldier.dead) {\n\t                        var position = this.map.randomRespawnPosition();\n\t\n\t                        soldier.respawn(position);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.match.update(delta);\n\t\n\t            if (this.collisionSystem) {\n\t                this.collisionSystem.update(delta);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'soldiers',\n\t        get: function get() {\n\t            return this.match.soldiers;\n\t        }\n\t    }]);\n\t\n\t    return PlayState;\n\t})(_State3.default);\n\t\n\texports.default = PlayState;\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Base class for all states.\n\t *\n\t * @class\n\t */\n\t\n\tvar State = (function () {\n\t\n\t    /**\n\t     * @constructor\n\t     *\n\t     * @param {string} name - name of the state.\n\t     * @param {Engine} engine - game engine instance.\n\t     */\n\t\n\t    function State(name, engine) {\n\t        _classCallCheck(this, State);\n\t\n\t        this.name = name;\n\t        this.engine = engine;\n\t        this.inputs = new Set();\n\t        this.views = new Set();\n\t        this.audio = null;\n\t        this._initialized = false;\n\t    }\n\t\n\t    _createClass(State, [{\n\t        key: 'addView',\n\t        value: function addView(view) {\n\t            this.views.add(view);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            throw new TypeError('State requires update() method');\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            if (!this._initialized) {\n\t                if (this.audio) {\n\t                    this.audio.init();\n\t                }\n\t\n\t                var _iteratorNormalCompletion = true;\n\t                var _didIteratorError = false;\n\t                var _iteratorError = undefined;\n\t\n\t                try {\n\t                    for (var _iterator = this.views.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                        var view = _step.value;\n\t\n\t                        view.init();\n\t                    }\n\t                } catch (err) {\n\t                    _didIteratorError = true;\n\t                    _iteratorError = err;\n\t                } finally {\n\t                    try {\n\t                        if (!_iteratorNormalCompletion && _iterator.return) {\n\t                            _iterator.return();\n\t                        }\n\t                    } finally {\n\t                        if (_didIteratorError) {\n\t                            throw _iteratorError;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                this._initialized = true;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'updateInputs',\n\t        value: function updateInputs(delta) {\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.inputs.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var input = _step2.value;\n\t\n\t                    input.update(delta);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render(delta) {\n\t            var _iteratorNormalCompletion3 = true;\n\t            var _didIteratorError3 = false;\n\t            var _iteratorError3 = undefined;\n\t\n\t            try {\n\t                for (var _iterator3 = this.views.values()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                    var view = _step3.value;\n\t\n\t                    view.update(delta);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError3 = true;\n\t                _iteratorError3 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                        _iterator3.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError3) {\n\t                        throw _iteratorError3;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'updateAudio',\n\t        value: function updateAudio(delta) {\n\t            if (this.audio) {\n\t                this.audio.update(delta);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return State;\n\t})();\n\t\n\texports.default = State;\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _ViewContainer = __webpack_require__(38);\n\t\n\tvar _ViewContainer2 = _interopRequireDefault(_ViewContainer);\n\t\n\tvar _StatsRenderView = __webpack_require__(59);\n\t\n\tvar _StatsRenderView2 = _interopRequireDefault(_StatsRenderView);\n\t\n\tvar _AmmoView = __webpack_require__(60);\n\t\n\tvar _AmmoView2 = _interopRequireDefault(_AmmoView);\n\t\n\tvar _HealthView = __webpack_require__(61);\n\t\n\tvar _HealthView2 = _interopRequireDefault(_HealthView);\n\t\n\tvar _WeaponView = __webpack_require__(62);\n\t\n\tvar _WeaponView2 = _interopRequireDefault(_WeaponView);\n\t\n\tvar _ScoreView = __webpack_require__(63);\n\t\n\tvar _ScoreView2 = _interopRequireDefault(_ScoreView);\n\t\n\tvar _BulletSystemView = __webpack_require__(64);\n\t\n\tvar _BulletSystemView2 = _interopRequireDefault(_BulletSystemView);\n\t\n\tvar _WorldMapView = __webpack_require__(67);\n\t\n\tvar _WorldMapView2 = _interopRequireDefault(_WorldMapView);\n\t\n\tvar _SoldierView = __webpack_require__(71);\n\t\n\tvar _SoldierView2 = _interopRequireDefault(_SoldierView);\n\t\n\tvar _SoldierViewPool = __webpack_require__(72);\n\t\n\tvar _SoldierViewPool2 = _interopRequireDefault(_SoldierViewPool);\n\t\n\tvar _PlayRenderView = __webpack_require__(73);\n\t\n\tvar _PlayRenderView2 = _interopRequireDefault(_PlayRenderView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar ViewBuilder = {\n\t    uiView: function uiView(playState) {\n\t        var uiView = new _StatsRenderView2.default(playState);\n\t        var uiViewContainer = new _ViewContainer2.default();\n\t\n\t        var scoreView = new _ScoreView2.default(playState);\n\t        var weaponView = new _WeaponView2.default(playState);\n\t        var ammoView = new _AmmoView2.default(playState);\n\t        var healthView = new _HealthView2.default(playState);\n\t\n\t        uiViewContainer.addDynamicView(scoreView, { x: 100, y: 100, z: 0 });\n\t        uiViewContainer.addDynamicView(weaponView, { x: 250, y: 540, z: 0 });\n\t        uiViewContainer.addDynamicView(ammoView, { x: 10, y: 540, z: 0 });\n\t        uiViewContainer.addDynamicView(healthView, { x: 600, y: 540, z: 0 });\n\t        uiView.addViewContainer('main', uiViewContainer);\n\t        uiView.currentViewContainer = 'main';\n\t\n\t        return uiView;\n\t    },\n\t    playView: function playView(playState) {\n\t        var playView = new _PlayRenderView2.default(playState);\n\t\n\t        var playerView = new _SoldierView2.default(playState.player);\n\t        var soldierView = new _SoldierViewPool2.default(playState.soldiers);\n\t        var bulletSystemView = new _BulletSystemView2.default(playState.bulletSystem);\n\t        var worldMapView = new _WorldMapView2.default(playState.map);\n\t\n\t        var viewContainer = new _ViewContainer2.default();\n\t\n\t        viewContainer.addDynamicView(playerView);\n\t        viewContainer.addDynamicView(soldierView);\n\t        viewContainer.addDynamicView(bulletSystemView);\n\t        viewContainer.addDynamicView(worldMapView);\n\t\n\t        playView.addViewContainer('main', viewContainer);\n\t        playView.currentViewContainer = 'main';\n\t\n\t        // Camera follow\n\t        playView.cameraFollowView = playerView;\n\t\n\t        return playView;\n\t    }\n\t};\n\t\n\texports.default = ViewBuilder;\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _RenderView2 = __webpack_require__(17);\n\t\n\tvar _RenderView3 = _interopRequireDefault(_RenderView2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t// TODO fix duplicate code of subviews\n\t\n\tvar StatsRenderView = (function (_RenderView) {\n\t    _inherits(StatsRenderView, _RenderView);\n\t\n\t    function StatsRenderView(state) {\n\t        _classCallCheck(this, StatsRenderView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(StatsRenderView).call(this));\n\t\n\t        _this.state = state;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(StatsRenderView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            _get(Object.getPrototypeOf(StatsRenderView.prototype), 'init', this).call(this);\n\t\n\t            this.camera = new THREE.OrthographicCamera(0, this.width, this.height, 0, 0, 1);\n\t\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(StatsRenderView.prototype), 'update', this).call(this, delta);\n\t        }\n\t    }]);\n\t\n\t    return StatsRenderView;\n\t})(_RenderView3.default);\n\t\n\texports.default = StatsRenderView;\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar AmmoView = (function (_View) {\n\t    _inherits(AmmoView, _View);\n\t\n\t    function AmmoView(state) {\n\t        _classCallCheck(this, AmmoView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(AmmoView).call(this));\n\t\n\t        _this.player = state.player;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(AmmoView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            var textureAtlas = _graphics.TextureManager.getAtlas('ui', false);\n\t\n\t            var material = new THREE.MeshBasicMaterial({\n\t                map: textureAtlas.texture,\n\t                transparent: true\n\t            });\n\t\n\t            var ammoSize = textureAtlas.getFrameSize('ammo');\n\t\n\t            this.geometry = new THREE.PlaneGeometry(ammoSize.width, ammoSize.height);\n\t            this.textureFrame = new _graphics.TextureFrame(textureAtlas, this.geometry, 'ammo');\n\t\n\t            var ammoMesh = new THREE.Mesh(this.geometry, material);\n\t\n\t            ammoMesh.scale.set(0.5, 0.5, 1);\n\t\n\t            this.magazineText = new _graphics.TextView('0', {\n\t                color: 0xffffcc\n\t            });\n\t\n\t            this.magazineText.init();\n\t\n\t            this.magazineText.mesh.scale.set(2, 2, 1);\n\t\n\t            this.magazineText.position = {\n\t                x: ammoSize.width + 10,\n\t                y: -this.magazineText.height\n\t            };\n\t\n\t            this.mesh.add(this.magazineText.mesh);\n\t\n\t            this.ammoText = new _graphics.TextView('0', {\n\t                color: 0xffff99\n\t            });\n\t\n\t            this.ammoText.init();\n\t\n\t            this.ammoText.mesh.scale.set(1, 1, 1);\n\t\n\t            this.ammoText.position = {\n\t                x: ammoSize.width + 64,\n\t                y: -this.ammoText.height\n\t            };\n\t\n\t            ammoMesh.position.x = 20;\n\t            this.magazineText.position.x = 40;\n\t            this.ammoText.position.x = 100;\n\t\n\t            this.mesh.add(this.ammoText.mesh);\n\t            this.mesh.add(ammoMesh);\n\t\n\t            _get(Object.getPrototypeOf(AmmoView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (this.player.currentWeapon) {\n\t                var weapon = this.player.currentWeapon;\n\t\n\t                this.ammo = weapon.ammo;\n\t                this.magazine = weapon.magazine;\n\t            } else {\n\t                this.ammo = null;\n\t                this.magazine = null;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'ammo',\n\t        set: function set(ammo) {\n\t            if (ammo === null) {\n\t                this.ammoText.text = '-';\n\t            }\n\t            this.ammoText.text = ammo;\n\t        }\n\t    }, {\n\t        key: 'magazine',\n\t        set: function set(magazine) {\n\t            if (magazine === null) {\n\t                this.magazineText.text = '-';\n\t            }\n\t            this.magazineText.text = magazine;\n\t        }\n\t    }]);\n\t\n\t    return AmmoView;\n\t})(_graphics.View);\n\t\n\texports.default = AmmoView;\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _View2 = __webpack_require__(21);\n\t\n\tvar _View3 = _interopRequireDefault(_View2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar HealthView = (function (_View) {\n\t    _inherits(HealthView, _View);\n\t\n\t    function HealthView(state) {\n\t        _classCallCheck(this, HealthView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(HealthView).call(this));\n\t\n\t        _this.player = state.player;\n\t        _this._healthScale = 1;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(HealthView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var material = new THREE.MeshBasicMaterial({\n\t                color: 0xcc0000\n\t            });\n\t\n\t            this.geometry = new THREE.PlaneGeometry(200, 20);\n\t\n\t            // Change originX to left side\n\t            this.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(100, 0, 0));\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, material);\n\t\n\t            _get(Object.getPrototypeOf(HealthView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            this.healthScale = this.player.health / this.player.maxHealth;\n\t        }\n\t    }, {\n\t        key: 'healthScale',\n\t        set: function set(value) {\n\t            if (value !== this._healthScale) {\n\t                this._healthScale = value;\n\t\n\t                if (value <= 0) {\n\t                    this.mesh.visible = false;\n\t                } else {\n\t                    if (!this.mesh.visible) {\n\t                        this.mesh.visible = true;\n\t                    }\n\t\n\t                    var oldX = this.mesh.position.x;\n\t\n\t                    this.mesh.scale.set(value, 1, 1);\n\t                    this.mesh.position.x = oldX;\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return HealthView;\n\t})(_View3.default);\n\t\n\texports.default = HealthView;\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar WeaponView = (function (_View) {\n\t    _inherits(WeaponView, _View);\n\t\n\t    function WeaponView(state) {\n\t        _classCallCheck(this, WeaponView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(WeaponView).call(this));\n\t\n\t        _this.player = state.player;\n\t        _this._weapon = null;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(WeaponView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var textureAtlas = _graphics.TextureManager.getAtlas('ui', true);\n\t\n\t            this.geometry = new THREE.PlaneGeometry(196, 64);\n\t            this.textureFrame = new _graphics.TextureFrame(textureAtlas, this.geometry);\n\t\n\t            this.material = new THREE.MeshBasicMaterial({\n\t                map: this.textureFrame.texture,\n\t                transparent: true\n\t            });\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\n\t            _get(Object.getPrototypeOf(WeaponView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (this.player.currentWeapon) {\n\t                var weapon = this.player.currentWeapon;\n\t\n\t                this.weapon = weapon.name;\n\t            } else {\n\t                this.weapon = null;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'weapon',\n\t        set: function set(weapon) {\n\t            if (this._weapon !== weapon) {\n\t                if (!this.mesh.visible) {\n\t                    this.mesh.visible = true;\n\t                }\n\t\n\t                this._weapon = weapon;\n\t                this.textureFrame.frame = weapon;\n\t            } else if (weapon === null) {\n\t                if (this.mesh.visible) {\n\t                    this.mesh.visible = false;\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return WeaponView;\n\t})(_graphics.View);\n\t\n\texports.default = WeaponView;\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _converToText = function _converToText(teams) {\n\t    var resultText = '';\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = teams.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var _step$value = _slicedToArray(_step.value, 2);\n\t\n\t            var teamName = _step$value[0];\n\t            var teamData = _step$value[1];\n\t\n\t            resultText += teamName + ' - k: ' + teamData.kills + ' - d: ' + teamData.deaths + ' \\n';\n\t\n\t            var soldierText = [];\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = teamData.soldiers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var soldier = _step2.value;\n\t\n\t                    var text = soldier.name + ' - k: ' + soldier.totalKills + ' - d: ' + soldier.totalDeaths;\n\t\n\t                    soldierText.push(text);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            resultText += soldierText.join('\\n');\n\t            resultText += '\\n----------------------\\n';\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    return resultText;\n\t};\n\t\n\tvar ScoreView = (function (_View) {\n\t    _inherits(ScoreView, _View);\n\t\n\t    function ScoreView(state) {\n\t        _classCallCheck(this, ScoreView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(ScoreView).call(this));\n\t\n\t        _this.state = state;\n\t        _this.match = state.match;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(ScoreView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            var backgroundMaterial = new THREE.MeshLambertMaterial({\n\t                color: 0x00000,\n\t                transparent: true,\n\t                opacity: 0.5\n\t            });\n\t\n\t            var backgroundGeometry = new THREE.PlaneGeometry(600, 800);\n\t\n\t            this.mesh.add(new THREE.Mesh(backgroundGeometry, backgroundMaterial));\n\t\n\t            this.scoreTextView = new _graphics.TextView(this._scoreText, {\n\t                color: 0xfeff80,\n\t                width: 600,\n\t                align: 'left'\n\t            });\n\t\n\t            this.scoreTextView.init();\n\t\n\t            this.mesh.visible = false;\n\t            this.mesh.add(this.scoreTextView.mesh);\n\t\n\t            _get(Object.getPrototypeOf(ScoreView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            if (this.state.showScores) {\n\t                if (!this.mesh.visible) {\n\t                    this.mesh.visible = true;\n\t                }\n\t\n\t                var newScores = _converToText(this.match.sortedScores());\n\t\n\t                // Scores have changed\n\t                this.scoreTextView.text = newScores;\n\t            } else {\n\t                if (this.mesh.visible) {\n\t                    this.mesh.visible = false;\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ScoreView;\n\t})(_graphics.View);\n\t\n\texports.default = ScoreView;\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _ObjectPool = __webpack_require__(65);\n\t\n\tvar _ObjectPool2 = _interopRequireDefault(_ObjectPool);\n\t\n\tvar _View2 = __webpack_require__(21);\n\t\n\tvar _View3 = _interopRequireDefault(_View2);\n\t\n\tvar _BulletView = __webpack_require__(66);\n\t\n\tvar _BulletView2 = _interopRequireDefault(_BulletView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BulletSystemView = (function (_View) {\n\t    _inherits(BulletSystemView, _View);\n\t\n\t    function BulletSystemView(bulletSystem) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t        _classCallCheck(this, BulletSystemView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BulletSystemView).call(this));\n\t\n\t        _this.bulletSystem = bulletSystem;\n\t        _this.bulletViewPool = new _ObjectPool2.default(function () {\n\t            return new _BulletView2.default(null);\n\t        }, _this.bulletSystem.poolSize, 10, options.poolLimit || 200);\n\t\n\t        _this.bulletViewPairs = new WeakMap();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(BulletSystemView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            _get(Object.getPrototypeOf(BulletSystemView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            // Keep viewPool in sync with bullet pool\n\t            if (this.bulletSystem.poolSize > this.bulletViewPool.size) {\n\t                this.bulletViewPool.allocate(this.bulletSystem.poolSize - this.bulletViewPool.size);\n\t            }\n\t\n\t            // Clear previously killed bullets\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.bulletSystem.deadBullets[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var deadBullet = _step.value;\n\t\n\t                    var bulletView = this.bulletViewPairs.get(deadBullet);\n\t\n\t                    if (bulletView) {\n\t                        bulletView.update(delta);\n\t                    }\n\t\n\t                    this.bulletSystem.deadBullets.delete(deadBullet);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.bulletSystem.activeBullets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var bullet = _step2.value;\n\t\n\t                    var bulletView = this.bulletViewPairs.get(bullet);\n\t\n\t                    if (!bulletView) {\n\t                        bulletView = this.bulletViewPool.get();\n\t\n\t                        bulletView.bullet = bullet;\n\t                        bulletView.init();\n\t\n\t                        this.mesh.add(bulletView.mesh);\n\t\n\t                        this.bulletViewPairs.set(bullet, bulletView);\n\t                    }\n\t\n\t                    bulletView.update(delta);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BulletSystemView;\n\t})(_View3.default);\n\t\n\texports.default = BulletSystemView;\n\n/***/ },\n/* 65 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// https://github.com/kchapelier/migl-pool/blob/master/src/pool.js\n\t\n\tvar ObjectPool = (function () {\n\t    /**\n\t     * @constructor\n\t     * @param {function} factoryFunction Function that creates the object to pool.\n\t     * @param {number} firstAllocationNumber Initial amount of objects to allocate.\n\t     * @param {number} allocationNumber Number to increase the pool by when it is full.\n\t     * @param {number} allocationLimit Size limit of the pool.\n\t     */\n\t\n\t    function ObjectPool(factoryFunction, firstAllocationNumber, allocationNumber, allocationLimit) {\n\t        _classCallCheck(this, ObjectPool);\n\t\n\t        this.factoryFunction = factoryFunction;\n\t        this.totalInstances = 0;\n\t        this.allocationLimit = allocationLimit;\n\t        this.allocationNumber = allocationNumber;\n\t        this.availableInstances = [];\n\t        this.allocate(firstAllocationNumber);\n\t    }\n\t\n\t    _createClass(ObjectPool, [{\n\t        key: 'allocate',\n\t\n\t        /**\n\t         * Instantiate a given number of elements and add them to the collection of available instances\n\t         * @param {number} number Number of elements to allocate\n\t         * @private\n\t         * @returns {Pool} Own instance for fluent interface\n\t         */\n\t        value: function allocate(number) {\n\t            if (this.totalInstances + number < this.allocationLimit) {\n\t                this.totalInstances += number;\n\t\n\t                for (var i = 0; i < number; i++) {\n\t                    this.availableInstances.push(this.factoryFunction());\n\t                }\n\t            } else {\n\t                throw new Error('ObjectPool allocation limit reached');\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Retrieve an element for the collection of available instances, (re)initialize and return it.\n\t         * @returns {function} initializeFunction Function used to initialize a new instance.\n\t         */\n\t\n\t    }, {\n\t        key: 'get',\n\t        value: function get() {\n\t            // check if we still have enough available instances, instantiate new ones\n\t            if (this.availableInstances.length < 1) {\n\t                this.allocate(this.allocationNumber);\n\t            }\n\t\n\t            var object = this.availableInstances.pop();\n\t\n\t            return object;\n\t        }\n\t\n\t        /**\n\t         * Add a given element to the pool.\n\t         * @param {Object} object Element to add to the pool\n\t         * @returns {Pool} Own instance for fluent interface\n\t         */\n\t\n\t    }, {\n\t        key: 'free',\n\t        value: function free(object) {\n\t            if (this.availableInstances.indexOf(object) === -1) {\n\t                this.availableInstances.push(object);\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Clear all references.\n\t         * @returns {Pool} Own instance for fluent interface\n\t         */\n\t\n\t    }, {\n\t        key: 'clear',\n\t        value: function clear() {\n\t            while (this.availableInstances.length) {\n\t                this.availableInstances.pop();\n\t            }\n\t\n\t            this.totalInstances = 0;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: 'size',\n\t        get: function get() {\n\t            return this.totalInstances;\n\t        }\n\t    }]);\n\t\n\t    return ObjectPool;\n\t})();\n\t\n\texports.default = ObjectPool;\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar BulletView = (function (_View) {\n\t    _inherits(BulletView, _View);\n\t\n\t    function BulletView(bullet) {\n\t        _classCallCheck(this, BulletView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(BulletView).call(this));\n\t\n\t        _this.bullet = bullet;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(BulletView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var bullet = this.bullet;\n\t\n\t            var textureAtlas = _graphics.TextureManager.getAtlas('world', false);\n\t\n\t            this.geometry = new THREE.PlaneGeometry(2, 8);\n\t            this.textureFrame = new _graphics.TextureFrame(textureAtlas, this.geometry, 'bullet1');\n\t            this.material = new THREE.MeshBasicMaterial({\n\t                map: this.textureFrame.texture,\n\t                transparent: true\n\t            });\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t            this.mesh.position.set(bullet.position.x, bullet.position.y, bullet.position.z);\n\t            this.mesh.rotation.z = bullet.angle + 90 * (Math.PI / 180);\n\t\n\t            _get(Object.getPrototypeOf(BulletView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(interpolationPercentage) {\n\t            var previous = this.bullet.previousPosition;\n\t            var current = this.bullet.position;\n\t\n\t            this.mesh.position.x = previous.x + (current.x - previous.x) * interpolationPercentage;\n\t            this.mesh.position.y = previous.y + (current.y - previous.y) * interpolationPercentage;\n\t            this.mesh.position.z = previous.z + (current.z - previous.z) * interpolationPercentage;\n\t            this.mesh.rotation.z = this.bullet.angle + 90 * (Math.PI / 180);\n\t\n\t            if (this.bullet.dead) {\n\t                this.mesh.visible = false;\n\t            } else {\n\t                this.mesh.visible = true;\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return BulletView;\n\t})(_graphics.View);\n\t\n\texports.default = BulletView;\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _WaterBlocksView = __webpack_require__(68);\n\t\n\tvar _WaterBlocksView2 = _interopRequireDefault(_WaterBlocksView);\n\t\n\tvar _StaticBlocksView = __webpack_require__(69);\n\t\n\tvar _StaticBlocksView2 = _interopRequireDefault(_StaticBlocksView);\n\t\n\tvar _LightView = __webpack_require__(70);\n\t\n\tvar _LightView2 = _interopRequireDefault(_LightView);\n\t\n\tvar _View2 = __webpack_require__(21);\n\t\n\tvar _View3 = _interopRequireDefault(_View2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar WorldMapView = (function (_View) {\n\t    _inherits(WorldMapView, _View);\n\t\n\t    function WorldMapView(map) {\n\t        _classCallCheck(this, WorldMapView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(WorldMapView).call(this));\n\t\n\t        _this.map = map;\n\t        _this.wallsView = new _StaticBlocksView2.default(map, 'tiles');\n\t        _this.waterView = new _WaterBlocksView2.default(map, 'tiles');\n\t        return _this;\n\t    }\n\t\n\t    _createClass(WorldMapView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.map.lights[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var light = _step.value;\n\t\n\t                    var lightView = new _LightView2.default(light);\n\t\n\t                    lightView.init();\n\t\n\t                    this.mesh.add(lightView.mesh);\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            this.wallsView.init();\n\t            this.waterView.init();\n\t\n\t            this.mesh.add(this.wallsView.mesh);\n\t            this.mesh.add(this.waterView.mesh);\n\t\n\t            _get(Object.getPrototypeOf(WorldMapView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update() {\n\t            this.waterView.update();\n\t        }\n\t    }]);\n\t\n\t    return WorldMapView;\n\t})(_View3.default);\n\t\n\texports.default = WorldMapView;\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar WATER_FRAMES = ['animation_water_0001', 'animation_water_0002', 'animation_water_0003', 'animation_water_0004', 'animation_water_0005', 'animation_water_0006', 'animation_water_0007', 'animation_water_0008', 'animation_water_0009'];\n\t\n\tvar _waterGeometry = function _waterGeometry(block, textureAtlas) {\n\t    var geometries = [];\n\t\n\t    if (block.walls.top) {\n\t        var top = textureAtlas.getBounds(block.walls.top);\n\t\n\t        var topGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\t\n\t        topGeometry.faceVertexUvs[0][0] = [top[0], top[1], top[3]];\n\t        topGeometry.faceVertexUvs[0][1] = [top[1], top[2], top[3]];\n\t        topGeometry.translate(0, 0, block.height / 2);\n\t\n\t        geometries.push(topGeometry);\n\t    }\n\t\n\t    var blockGeometry = new THREE.Geometry();\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = geometries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var geometry = _step.value;\n\t\n\t            blockGeometry.merge(geometry);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    ;\n\t\n\t    return blockGeometry;\n\t};\n\t\n\tvar _createMergedBlockGeometry = function _createMergedBlockGeometry(blocks, textureAtlas) {\n\t    var mergedGeometry = new THREE.Geometry();\n\t\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var block = _step2.value;\n\t\n\t            var geometry = _waterGeometry(block, textureAtlas);\n\t\n\t            geometry.translate(block.position.x, block.position.y, block.position.z);\n\t\n\t            mergedGeometry.merge(geometry);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                _iterator2.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t\n\t    mergedGeometry.mergeVertices();\n\t\n\t    return mergedGeometry;\n\t};\n\t\n\tvar WaterBlocksView = (function (_View) {\n\t    _inherits(WaterBlocksView, _View);\n\t\n\t    function WaterBlocksView(map, textureAtlasName) {\n\t        var waterFrames = arguments.length <= 2 || arguments[2] === undefined ? WATER_FRAMES : arguments[2];\n\t\n\t        _classCallCheck(this, WaterBlocksView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(WaterBlocksView).call(this));\n\t\n\t        _this.map = map;\n\t        _this._textureAtlasName = textureAtlasName;\n\t        _this._waterFrames = waterFrames;\n\t        _this.blocks = map.blocks(['water']);\n\t\n\t        _this.blockWidth = map.blockWidth;\n\t        _this.blockHeight = map.blockHeight;\n\t        _this.blockDepth = map.blockDepth;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(WaterBlocksView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            // Do not clone, since all water animates in sync\n\t            this.textureAtlas = _graphics.TextureManager.getAtlas(this._textureAtlasName, true);\n\t\n\t            this.geometry = _createMergedBlockGeometry(this.blocks, this.textureAtlas);\n\t\n\t            this.animation = new _graphics.Animation(this.textureAtlas, this.geometry, 9, true, this._waterFrames, '', true);\n\t            this.animation.textureFrame.width = 100;\n\t            this.animation.textureFrame.height = 100;\n\t\n\t            this.material = new THREE.MeshLambertMaterial({\n\t                map: this.textureAtlas.texture,\n\t                transparent: false\n\t            });\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\n\t            // Set the center of the blocks to bottom left (instead of center)\n\t            this.mesh.applyMatrix(new THREE.Matrix4().makeTranslation(this.blockWidth / 2, this.blockHeight / 2, this.blockDepth / 2));\n\t\n\t            _get(Object.getPrototypeOf(WaterBlocksView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(interpolationPercentage) {\n\t            this.animation.update();\n\t        }\n\t    }]);\n\t\n\t    return WaterBlocksView;\n\t})(_graphics.View);\n\t\n\texports.default = WaterBlocksView;\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _wallBlockGeometry = function _wallBlockGeometry(block, textureAtlas) {\n\t    var geometries = [];\n\t\n\t    if (block.walls.south) {\n\t        var south = textureAtlas.getBounds(block.walls.south);\n\t\n\t        var southGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\t\n\t        southGeometry.faceVertexUvs[0][0] = [south[0], south[1], south[3]];\n\t        southGeometry.faceVertexUvs[0][1] = [south[1], south[2], south[3]];\n\t        southGeometry.rotateY(Math.PI / 2);\n\t        southGeometry.translate(block.width / 2, 0, 0);\n\t\n\t        geometries.push(southGeometry);\n\t    }\n\t\n\t    if (block.walls.north) {\n\t        var north = textureAtlas.getBounds(block.walls.north);\n\t\n\t        var northGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\t\n\t        northGeometry.faceVertexUvs[0][0] = [north[0], north[1], north[3]];\n\t        northGeometry.faceVertexUvs[0][1] = [north[1], north[2], north[3]];\n\t        northGeometry.rotateY(-(Math.PI / 2));\n\t        northGeometry.translate(-(block.width / 2), 0, 0);\n\t\n\t        geometries.push(northGeometry);\n\t    }\n\t\n\t    if (block.walls.west) {\n\t        var west = textureAtlas.getBounds(block.walls.west);\n\t\n\t        var westGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\t\n\t        westGeometry.faceVertexUvs[0][0] = [west[0], west[1], west[3]];\n\t        westGeometry.faceVertexUvs[0][1] = [west[1], west[2], west[3]];\n\t        westGeometry.rotateX(Math.PI / 2);\n\t        westGeometry.translate(0, -(block.height / 2), 0);\n\t\n\t        geometries.push(westGeometry);\n\t    }\n\t\n\t    if (block.walls.east) {\n\t        var east = textureAtlas.getBounds(block.walls.east);\n\t\n\t        var eastGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\t\n\t        eastGeometry.faceVertexUvs[0][0] = [east[0], east[1], east[3]];\n\t        eastGeometry.faceVertexUvs[0][1] = [east[1], east[2], east[3]];\n\t        eastGeometry.rotateX(-(Math.PI / 2));\n\t        eastGeometry.rotateY(Math.PI / 2);\n\t        eastGeometry.translate(0, block.height / 2, 0);\n\t\n\t        geometries.push(eastGeometry);\n\t    }\n\t\n\t    if (block.walls.top) {\n\t        var top = textureAtlas.getBounds(block.walls.top);\n\t\n\t        var topGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\t\n\t        topGeometry.faceVertexUvs[0][0] = [top[0], top[1], top[3]];\n\t        topGeometry.faceVertexUvs[0][1] = [top[1], top[2], top[3]];\n\t        topGeometry.translate(0, 0, block.height / 2);\n\t\n\t        geometries.push(topGeometry);\n\t    }\n\t\n\t    var blockGeometry = new THREE.Geometry();\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = geometries[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var geometry = _step.value;\n\t\n\t            blockGeometry.merge(geometry);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    ;\n\t\n\t    return blockGeometry;\n\t};\n\t\n\tvar _createMergedBlockGeometry = function _createMergedBlockGeometry(blocks, textureAtlas) {\n\t    var mergedGeometry = new THREE.Geometry();\n\t\n\t    var _iteratorNormalCompletion2 = true;\n\t    var _didIteratorError2 = false;\n\t    var _iteratorError2 = undefined;\n\t\n\t    try {\n\t        for (var _iterator2 = blocks[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var block = _step2.value;\n\t\n\t            var geometry = _wallBlockGeometry(block, textureAtlas);\n\t\n\t            geometry.translate(block.position.x, block.position.y, block.position.z);\n\t\n\t            mergedGeometry.merge(geometry);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError2 = true;\n\t        _iteratorError2 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                _iterator2.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError2) {\n\t                throw _iteratorError2;\n\t            }\n\t        }\n\t    }\n\t\n\t    mergedGeometry.mergeVertices();\n\t\n\t    return mergedGeometry;\n\t};\n\t\n\tvar StaticBlocksView = (function (_View) {\n\t    _inherits(StaticBlocksView, _View);\n\t\n\t    function StaticBlocksView(map, textureAtlasName) {\n\t        _classCallCheck(this, StaticBlocksView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(StaticBlocksView).call(this));\n\t\n\t        _this.map = map;\n\t        _this.textureAtlasName = textureAtlasName;\n\t        _this.blocks = map.blocks(['wall']);\n\t\n\t        _this.blockWidth = map.blockWidth;\n\t        _this.blockHeight = map.blockHeight;\n\t        _this.blockDepth = map.blockDepth;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(StaticBlocksView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.textureAtlas = _graphics.TextureManager.getAtlas(this.textureAtlasName, false);\n\t            this.geometry = _createMergedBlockGeometry(this.blocks, this.textureAtlas);\n\t\n\t            this.material = new THREE.MeshLambertMaterial({\n\t                map: this.textureAtlas.texture,\n\t                transparent: true,\n\t                side: THREE.DoubleSide\n\t            });\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\n\t            // Set the center of the blocks to bottom left (instead of center)\n\t            this.mesh.applyMatrix(new THREE.Matrix4().makeTranslation(this.blockWidth / 2, this.blockHeight / 2, this.blockDepth / 2));\n\t\n\t            _get(Object.getPrototypeOf(StaticBlocksView.prototype), 'init', this).call(this);\n\t        }\n\t    }]);\n\t\n\t    return StaticBlocksView;\n\t})(_graphics.View);\n\t\n\texports.default = StaticBlocksView;\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar LightView = (function (_View) {\n\t    _inherits(LightView, _View);\n\t\n\t    function LightView(light) {\n\t        _classCallCheck(this, LightView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(LightView).call(this));\n\t\n\t        _this.light = light;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(LightView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t\n\t            var textureAtlas = _graphics.TextureManager.getAtlas('world', true);\n\t            var lightGeometry = new THREE.PlaneGeometry(32, 32);\n\t\n\t            this.textureFrame = new _graphics.TextureFrame(textureAtlas, lightGeometry, 'light1');\n\t\n\t            var lightMaterial = new THREE.MeshLambertMaterial({\n\t                map: this.textureFrame.texture,\n\t                transparent: true\n\t            });\n\t\n\t            var lightMesh = new THREE.Mesh(lightGeometry, lightMaterial);\n\t\n\t            lightMesh.position.set(this.light.sourcePosition.x, this.light.sourcePosition.y, this.light.sourcePosition.z);\n\t            lightMesh.rotateZ(this.light.angle + 90 * (Math.PI / 180));\n\t\n\t            this.mesh.add(lightMesh);\n\t\n\t            var spotLight = new THREE.SpotLight(0xff00000, 1);\n\t\n\t            var target = new THREE.Object3D();\n\t\n\t            target.position.set(this.light.x, this.light.y, -this.light.z);\n\t            target.rotateZ(this.light.angle + 90 * (Math.PI / 180));\n\t\n\t            this.mesh.add(target);\n\t\n\t            spotLight.target = target;\n\t            spotLight.angle = 45 * (Math.PI / 180);\n\t            spotLight.position.set(this.light.sourcePosition.x, this.light.sourcePosition.y, this.light.sourcePosition.z);\n\t            spotLight.rotateZ(this.light.angle + 90 * (Math.PI / 180));\n\t\n\t            this.mesh.add(spotLight);\n\t\n\t            // Set the center of the blocks to bottom left (instead of center)\n\t            this.mesh.translateX(100 / 2);\n\t            this.mesh.translateY(100 / 2);\n\t            this.mesh.translateZ(100);\n\t\n\t            _get(Object.getPrototypeOf(LightView.prototype), 'init', this).call(this);\n\t        }\n\t    }]);\n\t\n\t    return LightView;\n\t})(_graphics.View);\n\t\n\texports.default = LightView;\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _graphics = __webpack_require__(14);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar WALK_FRAMES = ['walk_0001', 'walk_0002', 'walk_0003', 'walk_0004', 'walk_0005', 'walk_0006', 'walk_0007', 'walk_0008'];\n\t\n\tvar RUN_FRAMES = ['run_0001', 'run_0002', 'run_0003', 'run_0004', 'run_0005', 'run_0006', 'run_0007', 'run_0008'];\n\t\n\tvar IDLE_FRAMES = ['idle_0001'];\n\t\n\tvar TEAM_COLORS = {\n\t    american: 0x006D02,\n\t    german: 0xcccc00\n\t};\n\t\n\tvar SoldierView = (function (_View) {\n\t    _inherits(SoldierView, _View);\n\t\n\t    function SoldierView(soldier) {\n\t        _classCallCheck(this, SoldierView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SoldierView).call(this));\n\t\n\t        _this.soldier = soldier;\n\t        _this._team = soldier ? soldier.team : 'american';\n\t        return _this;\n\t    }\n\t\n\t    _createClass(SoldierView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            var soldier = this.soldier;\n\t\n\t            this.geometry = new THREE.PlaneGeometry(soldier.height * 2, soldier.width * 2);\n\t\n\t            this.geometry.rotateZ(Math.PI);\n\t\n\t            var textureAtlas = _graphics.TextureManager.getAtlas('soldier', true);\n\t\n\t            this.animations = {\n\t                walk: new _graphics.Animation(textureAtlas, this.geometry, 9, true, WALK_FRAMES, 'soldier_weapon_'),\n\t                run: new _graphics.Animation(textureAtlas, this.geometry, 5, true, RUN_FRAMES, 'soldier_weapon_'),\n\t                idle: new _graphics.Animation(textureAtlas, this.geometry, 8, true, IDLE_FRAMES, 'soldier_weapon_')\n\t            };\n\t\n\t            this.currentAnimation = this.animations.idle;\n\t\n\t            this.material = new THREE.MeshLambertMaterial({\n\t                map: textureAtlas.texture,\n\t                transparent: true,\n\t                color: TEAM_COLORS[this._team]\n\t            });\n\t\n\t            this.material.color.offsetHSL(0.1, 0.8, 0.4);\n\t\n\t            this.mesh = new THREE.Mesh(this.geometry, this.material);\n\t\n\t            this.mesh.position.set(soldier.position.x, soldier.position.y, soldier.position.z);\n\t            this.mesh.rotation.z = soldier.angle;\n\t\n\t            _get(Object.getPrototypeOf(SoldierView.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: '_updateAnimation',\n\t        value: function _updateAnimation() {\n\t            var animation = this.currentAnimation;\n\t\n\t            if (this.soldier.isMoving) {\n\t                if (this.soldier.isRunning) {\n\t                    animation = this.animations.run;\n\t                } else {\n\t                    animation = this.animations.walk;\n\t                }\n\t            } else {\n\t                animation = this.animations.idle;\n\t            }\n\t\n\t            // Animation changed\n\t            if (animation !== this.currentAnimation) {\n\t                this.currentAnimation = animation;\n\t                this.currentAnimation.reset();\n\t            }\n\t\n\t            this.currentAnimation.update();\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(interpolationPercentage) {\n\t            var zOffset = this.soldier.depth;\n\t\n\t            if (this.soldier.dead) {\n\t                this.mesh.visible = false;\n\t                zOffset = 0;\n\t            } else if (!this.mesh.visible) {\n\t                this.mesh.visible = true;\n\t            }\n\t\n\t            var previous = this.soldier.previousPosition;\n\t            var current = this.soldier.position;\n\t\n\t            this.mesh.position.x = previous.x + (current.x - previous.x) * interpolationPercentage;\n\t            this.mesh.position.y = previous.y + (current.y - previous.y) * interpolationPercentage;\n\t            this.mesh.position.z = previous.z + (current.z - previous.z) * interpolationPercentage;\n\t\n\t            this.mesh.position.z += zOffset;\n\t\n\t            this.mesh.rotation.z = this.soldier.angle + 90 * (Math.PI / 180);\n\t\n\t            this._updateAnimation();\n\t        }\n\t    }, {\n\t        key: 'team',\n\t        set: function set(team) {\n\t            if (team !== this._team) {\n\t                this._team = team;\n\t                this.material.color.setHex(TEAM_COLORS[team]);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return SoldierView;\n\t})(_graphics.View);\n\t\n\texports.default = SoldierView;\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _ObjectPool = __webpack_require__(65);\n\t\n\tvar _ObjectPool2 = _interopRequireDefault(_ObjectPool);\n\t\n\tvar _View2 = __webpack_require__(21);\n\t\n\tvar _View3 = _interopRequireDefault(_View2);\n\t\n\tvar _SoldierView = __webpack_require__(71);\n\t\n\tvar _SoldierView2 = _interopRequireDefault(_SoldierView);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar SoldierViewPool = (function (_View) {\n\t    _inherits(SoldierViewPool, _View);\n\t\n\t    function SoldierViewPool(soldiers) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t        _classCallCheck(this, SoldierViewPool);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(SoldierViewPool).call(this));\n\t\n\t        _this.soldiers = soldiers;\n\t\n\t        _this.viewPool = new _ObjectPool2.default(function () {\n\t            return new _SoldierView2.default(null);\n\t        }, _this.soldiers.size, 10, options.poolLimit || 200);\n\t\n\t        _this.viewPairs = new WeakMap();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(SoldierViewPool, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            this.mesh = new THREE.Object3D();\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(interpolationPercentage) {\n\t            // Keep viewPool in sync with soldier pool\n\t            if (this.viewPool.poolSize > this.soldiers.length + 1) {\n\t                this.viewPool.allocate(this.soldiers.length + 1 - this.viewPool.size);\n\t            }\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.soldiers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var soldier = _step.value;\n\t\n\t                    var view = this.viewPairs.get(soldier);\n\t\n\t                    if (!view && !soldier.dead) {\n\t                        view = this.viewPool.get();\n\t\n\t                        view.soldier = soldier;\n\t                        view.init();\n\t\n\t                        // Team is set after, because it affects the material\n\t                        view.team = soldier.team;\n\t\n\t                        this.mesh.add(view.mesh);\n\t\n\t                        this.viewPairs.set(soldier, view);\n\t                    } else if (view) {\n\t                        view.update(interpolationPercentage);\n\t\n\t                        if (soldier.dead && this.viewPairs.has(soldier)) {\n\t                            this.viewPool.free(view);\n\t                            this.viewPairs.delete(soldier);\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return SoldierViewPool;\n\t})(_View3.default);\n\t\n\texports.default = SoldierViewPool;\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tvar _RenderView2 = __webpack_require__(17);\n\t\n\tvar _RenderView3 = _interopRequireDefault(_RenderView2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PlayRenderView = (function (_RenderView) {\n\t    _inherits(PlayRenderView, _RenderView);\n\t\n\t    function PlayRenderView(state) {\n\t        _classCallCheck(this, PlayRenderView);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PlayRenderView).call(this));\n\t\n\t        _this.state = state;\n\t        _this.map = _this.state.map;\n\t\n\t        _this.cameraFollowView = null;\n\t        _this.clearColor = 0x000000;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(PlayRenderView, [{\n\t        key: 'init',\n\t        value: function init() {\n\t            _get(Object.getPrototypeOf(PlayRenderView.prototype), 'init', this).call(this);\n\t\n\t            this.camera = new THREE.PerspectiveCamera(75, this.map.width / this.map.height, 100, 1000);\n\t\n\t            this.camera.position.x = this.map.width / 2 * this.map.blockWidth;\n\t            this.camera.position.y = this.map.height / 2 * this.map.blockHeight;\n\t            this.camera.position.z = this.map.blockDepth * 6;\n\t\n\t            var ambientLight = new THREE.AmbientLight(0x030303);\n\t\n\t            this.scene.add(ambientLight);\n\t\n\t            this.cameraFollowLight = new THREE.SpotLight(0xfffffff, 2, 800);\n\t            this.cameraFollowLight.angle = 135 * (Math.PI / 180);\n\t            this.cameraFollowLight.exponent = 10;\n\t            this.cameraFollowLight.target = this.cameraFollowView.mesh;\n\t\n\t            this.scene.add(this.cameraFollowLight);\n\t\n\t            this._initialized = true;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (this.state.paused) {\n\t                return;\n\t            }\n\t\n\t            _get(Object.getPrototypeOf(PlayRenderView.prototype), 'update', this).call(this, delta);\n\t\n\t            if (this.cameraFollowView) {\n\t                this.camera.position.setX(this.cameraFollowView.position.x);\n\t                this.camera.position.setY(this.cameraFollowView.position.y);\n\t\n\t                this.cameraFollowLight.position.setX(this.cameraFollowView.position.x);\n\t                this.cameraFollowLight.position.setY(this.cameraFollowView.position.y);\n\t                this.cameraFollowLight.position.setZ(this.cameraFollowView.position.z + 400);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return PlayRenderView;\n\t})(_RenderView3.default);\n\t\n\tmodule.exports = PlayRenderView;\n\n/***/ },\n/* 74 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _slicedToArray = (function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/**\n\t * Get a given statistic of a all soldiers per team.\n\t *\n\t * @param {string} stat Stat to get.\n\t *\n\t * @return {Map} Stats per team\n\t */\n\tfunction soldierStatsByTeam(stat) {\n\t    var resultsByTeam = new Map();\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = this.teams.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var _step$value = _slicedToArray(_step.value, 2);\n\t\n\t            var teamName = _step$value[0];\n\t            var soldiers = _step$value[1];\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = soldiers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var soldier = _step2.value;\n\t\n\t                    var teamResult = resultsByTeam.get(teamName);\n\t\n\t                    if (teamResult) {\n\t                        resultsByTeam.set(teamName, teamResult + soldier[stat]);\n\t                    } else {\n\t                        resultsByTeam.set(teamName, soldier[stat]);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t};\n\t\n\tvar Match = (function () {\n\t    function Match(teams) {\n\t        _classCallCheck(this, Match);\n\t\n\t        this.matchTime = 0;\n\t        this.matchDuration = 300000;\n\t        this.soldiers = new Set();\n\t        this.teamNames = [];\n\t        this.teams = new Map();\n\t\n\t        var _iteratorNormalCompletion3 = true;\n\t        var _didIteratorError3 = false;\n\t        var _iteratorError3 = undefined;\n\t\n\t        try {\n\t            for (var _iterator3 = teams[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                var teamName = _step3.value;\n\t\n\t                this.teamNames.push(teamName);\n\t                this.teams.set(teamName, new Set());\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError3 = true;\n\t            _iteratorError3 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                    _iterator3.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError3) {\n\t                    throw _iteratorError3;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    _createClass(Match, [{\n\t        key: 'teamWithLeastPlayers',\n\t        value: function teamWithLeastPlayers() {\n\t            var leastTeamName = null;\n\t            var minCount = Number.MAX_VALUE;\n\t\n\t            var _iteratorNormalCompletion4 = true;\n\t            var _didIteratorError4 = false;\n\t            var _iteratorError4 = undefined;\n\t\n\t            try {\n\t                for (var _iterator4 = this.teamNames[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n\t                    var teamName = _step4.value;\n\t\n\t                    var count = this.teams.get(teamName).size;\n\t\n\t                    if (count < minCount) {\n\t                        leastTeamName = teamName;\n\t                        minCount = count;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError4 = true;\n\t                _iteratorError4 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n\t                        _iterator4.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError4) {\n\t                        throw _iteratorError4;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return leastTeamName;\n\t        }\n\t    }, {\n\t        key: 'addSoldier',\n\t        value: function addSoldier(soldier, teamName) {\n\t            if (!teamName) {\n\t                teamName = this.teamWithLeastPlayers();\n\t            }\n\t\n\t            // FIXME get this out of here?\n\t            soldier.team = teamName;\n\t\n\t            var team = this.teams.get(teamName);\n\t\n\t            if (team) {\n\t                team.add(soldier);\n\t                this.soldiers.add(soldier);\n\t\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'sortedScores',\n\t        value: function sortedScores() {\n\t            var teams = new Map();\n\t\n\t            var _iteratorNormalCompletion5 = true;\n\t            var _didIteratorError5 = false;\n\t            var _iteratorError5 = undefined;\n\t\n\t            try {\n\t                for (var _iterator5 = new Set([].concat(_toConsumableArray(this.soldiers)))[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n\t                    var soldier = _step5.value;\n\t\n\t                    var team = teams.get(soldier.team);\n\t\n\t                    if (team) {\n\t                        team.kills += soldier.totalKills;\n\t                        team.deaths += soldier.totalDeaths;\n\t                        team.soldiers.push(soldier);\n\t                    } else {\n\t                        teams.set(soldier.team, {\n\t                            kills: soldier.totalKills,\n\t                            deaths: soldier.totalDeaths,\n\t                            soldiers: [soldier]\n\t                        });\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError5 = true;\n\t                _iteratorError5 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n\t                        _iterator5.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError5) {\n\t                        throw _iteratorError5;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion6 = true;\n\t            var _didIteratorError6 = false;\n\t            var _iteratorError6 = undefined;\n\t\n\t            try {\n\t                for (var _iterator6 = teams.values()[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n\t                    var team = _step6.value;\n\t\n\t                    team.soldiers.sort(function (a, b) {\n\t                        return b.kills - a.kills;\n\t                    });\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError6 = true;\n\t                _iteratorError6 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n\t                        _iterator6.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError6) {\n\t                        throw _iteratorError6;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return new Map([].concat(_toConsumableArray(teams.entries())).sort(function (teamA, teamB) {\n\t                return teamB[1].kills - teamA[1].kills;\n\t            }));\n\t        }\n\t    }, {\n\t        key: 'removeSoldier',\n\t        value: function removeSoldier(soldier) {\n\t            var _iteratorNormalCompletion7 = true;\n\t            var _didIteratorError7 = false;\n\t            var _iteratorError7 = undefined;\n\t\n\t            try {\n\t                for (var _iterator7 = this.teams[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n\t                    var team = _step7.value;\n\t\n\t                    if (team.has(solider)) {\n\t                        team.delete(soldier);\n\t\n\t                        return true;\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError7 = true;\n\t                _iteratorError7 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion7 && _iterator7.return) {\n\t                        _iterator7.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError7) {\n\t                        throw _iteratorError7;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return false;\n\t        }\n\t    }, {\n\t        key: 'killsByTeam',\n\t        value: function killsByTeam() {\n\t            return soldierStatsByTeam('kills');\n\t        }\n\t    }, {\n\t        key: 'deathsByTeam',\n\t        value: function deathsByTeam() {\n\t            return soldierStatsByTeam('deaths');\n\t        }\n\t    }, {\n\t        key: 'start',\n\t        value: function start() {}\n\t    }, {\n\t        key: 'end',\n\t        value: function end() {}\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            this.matchTime += delta;\n\t\n\t            if (this.matchTime >= this.matchDuration) {\n\t                this.end();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Match;\n\t})();\n\t\n\texports.default = Match;\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Keyboard = __webpack_require__(42);\n\t\n\tvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\t\n\tvar _Gamepad = __webpack_require__(43);\n\t\n\tvar _Gamepad2 = _interopRequireDefault(_Gamepad);\n\t\n\tvar _HumanInput2 = __webpack_require__(45);\n\t\n\tvar _HumanInput3 = _interopRequireDefault(_HumanInput2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PlayerInput = (function (_HumanInput) {\n\t    _inherits(PlayerInput, _HumanInput);\n\t\n\t    function PlayerInput(player) {\n\t        _classCallCheck(this, PlayerInput);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PlayerInput).call(this));\n\t\n\t        _this.player = player;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(PlayerInput, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (_Keyboard2.default.isDown(_Keyboard2.default.UP) || _Gamepad2.default.isStickDown(this.gamepadIndex, 'left', 'up')) {\n\t                this.player.moveUp();\n\t            } else if (_Keyboard2.default.isDown(_Keyboard2.default.DOWN) || _Gamepad2.default.isStickDown(this.gamepadIndex, 'left', 'down')) {\n\t                this.player.moveDown();\n\t            } else {\n\t                this.player.stopMoving();\n\t            }\n\t\n\t            if (_Keyboard2.default.isDown(_Keyboard2.default.RIGHT) || _Gamepad2.default.isStickDown(this.gamepadIndex, 'right', 'right')) {\n\t                this.player.turnRight();\n\t            } else if (_Keyboard2.default.isDown(_Keyboard2.default.LEFT) || _Gamepad2.default.isStickDown(this.gamepadIndex, 'right', 'left')) {\n\t                this.player.turnLeft();\n\t            } else {\n\t                this.player.stopTurning();\n\t            }\n\t\n\t            if (!this.player.isRunning && (_Keyboard2.default.isDown(_Keyboard2.default.CTRL) || _Gamepad2.default.isDown(this.gamepadIndex, 'rightTrigger'))) {\n\t                this.player.fireBullet();\n\t            }\n\t\n\t            if (_Keyboard2.default.isDown(_Keyboard2.default.SHIFT) || _Gamepad2.default.isDown(this.gamepadIndex, 'actionSouth')) {\n\t                this.player.isRunning = true;\n\t            } else {\n\t                this.player.isRunning = false;\n\t            }\n\t\n\t            if (this.keyboardDownOnce(_Keyboard2.default.R) || this.gamepadButtonDownOnce('actionWest')) {\n\t                this.player.reload();\n\t            }\n\t\n\t            if (this.keyboardDownOnce(_Keyboard2.default.X) || this.gamepadButtonDownOnce('actionNorth')) {\n\t                this.player.scrollWeapons('down');\n\t            }\n\t\n\t            if (this.keyboardDownOnce(_Keyboard2.default.Z) || this.gamepadButtonDownOnce('actionEast')) {\n\t                this.player.scrollWeapons('up');\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return PlayerInput;\n\t})(_HumanInput3.default);\n\t\n\texports.default = PlayerInput;\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _input = __webpack_require__(77);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar UiInput = (function (_HumanInput) {\n\t    _inherits(UiInput, _HumanInput);\n\t\n\t    function UiInput(state) {\n\t        _classCallCheck(this, UiInput);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(UiInput).call(this));\n\t\n\t        _this.state = state;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(UiInput, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (_input.Keyboard.isDown(_input.Keyboard.E) || this.gamepadButtonDownOnce('leftBumper')) {\n\t                this.state.showScores = true;\n\t            } else {\n\t                this.state.showScores = false;\n\t            }\n\t\n\t            if (this.keyboardDownOnce(_input.Keyboard.ESC)) {\n\t                if (this.state.paused) {\n\t                    this.state.resume();\n\t                } else {\n\t                    this.state.pause();\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return UiInput;\n\t})(_input.HumanInput);\n\t\n\texports.default = UiInput;\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Keyboard = exports.HumanInput = exports.Gamepad = undefined;\n\t\n\tvar _Gamepad = __webpack_require__(43);\n\t\n\tvar _Gamepad2 = _interopRequireDefault(_Gamepad);\n\t\n\tvar _HumanInput = __webpack_require__(45);\n\t\n\tvar _HumanInput2 = _interopRequireDefault(_HumanInput);\n\t\n\tvar _Keyboard = __webpack_require__(42);\n\t\n\tvar _Keyboard2 = _interopRequireDefault(_Keyboard);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.Gamepad = _Gamepad2.default;\n\texports.HumanInput = _HumanInput2.default;\n\texports.Keyboard = _Keyboard2.default;\n\n/***/ },\n/* 78 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar ComputerInput = (function () {\n\t    function ComputerInput(soldier) {\n\t        _classCallCheck(this, ComputerInput);\n\t\n\t        this.soldier = soldier;\n\t    }\n\t\n\t    _createClass(ComputerInput, [{\n\t        key: \"update\",\n\t        value: function update() {\n\t            if (Math.random() < 0.05) {\n\t                this.soldier.fireBullet();\n\t            }\n\t\n\t            if (Math.random() > 0.8) {\n\t                this.soldier.moveUp();\n\t            }\n\t\n\t            if (Math.random() > 0.7) {\n\t                if (Math.random() > 0.5) {\n\t                    this.soldier.turnRight();\n\t                } else {\n\t                    this.soldier.turnLeft();\n\t                }\n\t            } else {\n\t                this.soldier.stopTurning();\n\t            }\n\t\n\t            if (this.soldier.currentWeapon) {\n\t                if (this.soldier.currentWeapon.magazine === 0) {\n\t                    this.soldier.reload();\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ComputerInput;\n\t})();\n\t\n\texports.default = ComputerInput;\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Soldier2 = __webpack_require__(80);\n\t\n\tvar _Soldier3 = _interopRequireDefault(_Soldier2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Player = (function (_Soldier) {\n\t    _inherits(Player, _Soldier);\n\t\n\t    function Player(x, y, z, width, height, depth, team) {\n\t        _classCallCheck(this, Player);\n\t\n\t        // FIXME make configurable\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Player).call(this, x, y, z, width, height, depth, team));\n\t\n\t        _this.name = 'player';\n\t\n\t        _this.options.isPlayer = true;\n\t        _this.options.audio = true;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Player, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(Player.prototype), 'update', this).call(this, delta);\n\t        }\n\t    }]);\n\t\n\t    return Player;\n\t})(_Soldier3.default);\n\t\n\texports.default = Player;\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Character2 = __webpack_require__(81);\n\t\n\tvar _Character3 = _interopRequireDefault(_Character2);\n\t\n\tvar _WeaponFactory = __webpack_require__(85);\n\t\n\tvar _WeaponFactory2 = _interopRequireDefault(_WeaponFactory);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Soldier = (function (_Character) {\n\t    _inherits(Soldier, _Character);\n\t\n\t    function Soldier(x, y, z, width, height, depth, team) {\n\t        _classCallCheck(this, Soldier);\n\t\n\t        // FIXME make configurable\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Soldier).call(this, x, y, z, width, height, depth));\n\t\n\t        _this.name = 'cpu';\n\t\n\t        _this.weapons = [];\n\t        _this.currentWeaponIndex = 0;\n\t        _this.currentWeapon = null;\n\t\n\t        _this.team = team;\n\t\n\t        // TODO remove this hardcoded stuff\n\t        _this.addWeapon(_WeaponFactory2.default.mp44());\n\t        _this.addWeapon(_WeaponFactory2.default.thompson());\n\t        _this.currentWeapon = _this.weapons[0];\n\t\n\t        _this.maxHealth = 100;\n\t        _this.walkingSpeed = 0.1;\n\t        _this.runningSpeed = 0.2;\n\t\n\t        // Contains the character killed, and the count\n\t        _this.kills = new Map();\n\t\n\t        // Contains the characters killed by, and the count\n\t        _this.deaths = new Map();\n\t\n\t        _this.reset();\n\t\n\t        _this.options.isSoldier = true;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Soldier, [{\n\t        key: 'addWeapon',\n\t        value: function addWeapon(weapon) {\n\t            // TODO increase ammo if weapon is the same\n\t            this.weapons.push(weapon);\n\t        }\n\t    }, {\n\t        key: 'scrollWeapons',\n\t        value: function scrollWeapons(direction) {\n\t            if (direction === 'up') {\n\t                if (this.currentWeaponIndex === this.weapons.length - 1) {\n\t                    this.currentWeaponIndex = 0;\n\t                } else {\n\t                    this.currentWeaponIndex += 1;\n\t                }\n\t            } else if (direction === 'down') {\n\t                if (this.currentWeaponIndex === 0) {\n\t                    this.currentWeaponIndex = this.weapons.length - 1;\n\t                } else {\n\t                    this.currentWeaponIndex -= 1;\n\t                }\n\t            } else {\n\t                throw new Error('direction is not \"up\" or \"down\"');\n\t            }\n\t\n\t            this.currentWeapon = this.weapons[this.currentWeaponIndex];\n\t        }\n\t    }, {\n\t        key: 'reload',\n\t        value: function reload() {\n\t            if (!this.dead && this.currentWeapon) {\n\t                this.currentWeapon.reload();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'hitByBullet',\n\t        value: function hitByBullet(bullet) {\n\t            _get(Object.getPrototypeOf(Soldier.prototype), 'hitByBullet', this).call(this, bullet);\n\t\n\t            // TODO prevent team killing / make configurable\n\t            if (this.health === 0) {\n\t                var deathCount = this.deaths.get(bullet.firedBy);\n\t\n\t                if (deathCount) {\n\t                    deathCount += 1;\n\t                } else {\n\t                    deathCount = 1;\n\t                }\n\t\n\t                this.deaths.set(bullet.firedBy, deathCount);\n\t\n\t                var killedByCount = bullet.firedBy.kills.get(this);\n\t\n\t                if (killedByCount) {\n\t                    killedByCount += 1;\n\t                } else {\n\t                    killedByCount = 1;\n\t                }\n\t\n\t                bullet.firedBy.kills.set(this, killedByCount);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'kill',\n\t        value: function kill() {\n\t            _get(Object.getPrototypeOf(Soldier.prototype), 'kill', this).call(this);\n\t            var suicides = this.deaths.get(this);\n\t\n\t            if (suicides) {\n\t                this.deaths.set(this, suicides + 1);\n\t            } else {\n\t                this.deaths.set(this, 1);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'fireBullet',\n\t        value: function fireBullet() {\n\t            if (!this.dead && this.currentWeapon) {\n\t                var fired = this.currentWeapon.fire();\n\t\n\t                if (fired) {\n\t                    this.actions.firedBullet = true;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            _get(Object.getPrototypeOf(Soldier.prototype), 'reset', this).call(this);\n\t\n\t            this.actions.firedBullet = false;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(Soldier.prototype), 'update', this).call(this, delta);\n\t\n\t            if (this.actions.firedBullet) {\n\t                this.actions.firedBullet = false;\n\t            }\n\t\n\t            if (this.currentWeapon) {\n\t                this.currentWeapon.update(delta);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'totalKills',\n\t        get: function get() {\n\t            var total = 0;\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.kills.values()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var kill = _step.value;\n\t\n\t                    total += kill;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return total;\n\t        }\n\t    }, {\n\t        key: 'totalDeaths',\n\t        get: function get() {\n\t            var total = 0;\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.deaths.values()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var death = _step2.value;\n\t\n\t                    total += death;\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return total;\n\t        }\n\t    }]);\n\t\n\t    return Soldier;\n\t})(_Character3.default);\n\t\n\texports.default = Soldier;\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Entity2 = __webpack_require__(82);\n\t\n\tvar _Entity3 = _interopRequireDefault(_Entity2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar GRAVITY = -0.2;\n\t\n\t/**\n\t * Entitiess that walk, run, jump, die and get hit by bullets.\n\t *\n\t * @class\n\t */\n\t\n\tvar Character = (function (_Entity) {\n\t    _inherits(Character, _Entity);\n\t\n\t    function Character(x, y, z, width, height, depth, team) {\n\t        _classCallCheck(this, Character);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Character).call(this, x, y, z, width, height, depth));\n\t\n\t        _this.maxHealth = 100;\n\t        _this.walkingSpeed = 0.1;\n\t        _this.runningSpeed = 0.2;\n\t\n\t        _this.reset();\n\t\n\t        _this.options.physics = true;\n\t        _this.options.bullets = true;\n\t        _this.options.isCharacter = true;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Character, [{\n\t        key: 'fall',\n\t        value: function fall() {\n\t            this.velocity.z = GRAVITY;\n\t        }\n\t    }, {\n\t        key: 'hitByBullet',\n\t        value: function hitByBullet(bullet) {\n\t            this.health -= bullet.damage;\n\t\n\t            if (this.health === 0) {\n\t                this.kill();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'stopFalling',\n\t        value: function stopFalling() {\n\t            this.velocity.z = 0;\n\t        }\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            _get(Object.getPrototypeOf(Character.prototype), 'reset', this).call(this);\n\t\n\t            this._isRunning = false;\n\t            this.speed = this.walkingSpeed;\n\t            this.health = 100;\n\t\n\t            this.health = this.maxHealth;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(Character.prototype), 'update', this).call(this, delta);\n\t\n\t            if (this.position.z <= 0) {\n\t                this.kill();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'isRunning',\n\t        set: function set(running) {\n\t            if (running) {\n\t                this._isRunning = true;\n\t                this.speed = this.runningSpeed;\n\t            } else {\n\t                this._isRunning = false;\n\t                this.speed = this.walkingSpeed;\n\t            }\n\t        },\n\t        get: function get() {\n\t            return this._isRunning;\n\t        }\n\t    }]);\n\t\n\t    return Character;\n\t})(_Entity3.default);\n\t\n\texports.default = Character;\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Polygon = __webpack_require__(83);\n\t\n\tvar _Polygon2 = _interopRequireDefault(_Polygon);\n\t\n\tvar _Vector = __webpack_require__(84);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar DEFAULT_SPEED = 0.2;\n\tvar DEFAULT_ROTATION_SPEED = 0.3;\n\t\n\tvar Entity = (function () {\n\t    function Entity(x, y) {\n\t        var z = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t        var width = arguments.length <= 3 || arguments[3] === undefined ? 0 : arguments[3];\n\t        var height = arguments.length <= 4 || arguments[4] === undefined ? 0 : arguments[4];\n\t        var depth = arguments.length <= 5 || arguments[5] === undefined ? 0 : arguments[5];\n\t\n\t        _classCallCheck(this, Entity);\n\t\n\t        this.position = {\n\t            x: x,\n\t            y: y,\n\t            z: z\n\t        };\n\t\n\t        this.previousPosition = {\n\t            x: x,\n\t            y: y,\n\t            z: z\n\t        };\n\t\n\t        this.width = width;\n\t        this.height = height;\n\t        this.depth = depth;\n\t\n\t        this.speed = DEFAULT_SPEED;\n\t        this.rotationSpeed = DEFAULT_ROTATION_SPEED;\n\t\n\t        this.reset();\n\t\n\t        this._body = new _Polygon2.default(new _Vector2.default(this.x, this.y), [new _Vector2.default(-this.halfWidth, -this.halfHeight), new _Vector2.default(-this.halfWidth, this.halfHeight), new _Vector2.default(this.halfWidth, this.halfHeight), new _Vector2.default(this.halfWidth, 0)]);\n\t\n\t        this.options = {\n\t            physics: false,\n\t            bullets: false,\n\t            audio: false,\n\t            isBullet: false,\n\t            isPlayer: false,\n\t            isCharacter: false\n\t        };\n\t    }\n\t\n\t    _createClass(Entity, [{\n\t        key: 'onWallCollision',\n\t        value: function onWallCollision() {\n\t            return null;\n\t        }\n\t    }, {\n\t        key: 'kill',\n\t        value: function kill() {\n\t            this.dead = true;\n\t        }\n\t    }, {\n\t        key: 'reset',\n\t        value: function reset() {\n\t            this.velocity = {\n\t                x: 0,\n\t                y: 0,\n\t                z: 0\n\t            };\n\t\n\t            this.dead = false;\n\t            this.reverse = false;\n\t            this.angle = Math.PI * 2;\n\t            this.angularVelocity = 0;\n\t\n\t            // If entity is moving backwards\n\t            this.reverse = false;\n\t\n\t            this.collidable = true;\n\t            this.shouldUpdate = true;\n\t\n\t            this.isMoving = false;\n\t\n\t            // Actions can trigger things that should happen in the next update.\n\t            this.actions = {};\n\t        }\n\t    }, {\n\t        key: 'respawn',\n\t        value: function respawn(position) {\n\t            this.reset();\n\t\n\t            this.position = {\n\t                x: position.x,\n\t                y: position.y,\n\t                z: position.z\n\t            };\n\t\n\t            this.previousPosition = {\n\t                x: position.x,\n\t                y: position.y,\n\t                z: position.z\n\t            };\n\t        }\n\t    }, {\n\t        key: 'moveUp',\n\t        value: function moveUp() {\n\t            this.reverse = false;\n\t            this.isMoving = true;\n\t            this.velocity.x = -this.speed * Math.cos(this.angle);\n\t            this.velocity.y = -this.speed * Math.sin(this.angle);\n\t        }\n\t    }, {\n\t        key: 'moveDown',\n\t        value: function moveDown() {\n\t            this.reverse = true;\n\t            this.isMoving = true;\n\t            this.velocity.x = this.speed * Math.cos(this.angle);\n\t            this.velocity.y = this.speed * Math.sin(this.angle);\n\t        }\n\t    }, {\n\t        key: 'turnLeft',\n\t        value: function turnLeft() {\n\t            this.angularVelocity = this.rotationSpeed * (Math.PI / 180);\n\t        }\n\t    }, {\n\t        key: 'turnRight',\n\t        value: function turnRight() {\n\t            this.angularVelocity = -this.rotationSpeed * (Math.PI / 180);\n\t        }\n\t    }, {\n\t        key: 'stopMoving',\n\t        value: function stopMoving() {\n\t            this.isMoving = false;\n\t            this.velocity.x = 0;\n\t            this.velocity.y = 0;\n\t        }\n\t    }, {\n\t        key: 'stopTurning',\n\t        value: function stopTurning() {\n\t            this.angularVelocity = 0;\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            if (!this.dead) {\n\t                this.angle += this.angularVelocity * delta;\n\t\n\t                if (this.angle < 0) {\n\t                    this.angle = Math.PI * 2 - this.angle;\n\t                }\n\t\n\t                this.previousPosition.x = this.position.x;\n\t                this.previousPosition.y = this.position.y;\n\t                this.previousPosition.z = this.position.z;\n\t\n\t                this.position.x += this.velocity.x * delta;\n\t                this.position.y += this.velocity.y * delta;\n\t                this.position.z += this.velocity.z * delta;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'rotatedBody',\n\t        get: function get() {\n\t            var body = this._body;\n\t\n\t            body.setAngle(this.angle);\n\t\n\t            return body;\n\t        }\n\t    }, {\n\t        key: 'body',\n\t        get: function get() {\n\t            this._body.position.x = this.position.x;\n\t            this._body.position.y = this.position.y;\n\t\n\t            return this._body;\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this.position.x;\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this.position.y;\n\t        }\n\t    }, {\n\t        key: 'z',\n\t        get: function get() {\n\t            return this.position.z;\n\t        }\n\t    }, {\n\t        key: 'halfWidth',\n\t        get: function get() {\n\t            return this.width / 2;\n\t        }\n\t    }, {\n\t        key: 'halfHeight',\n\t        get: function get() {\n\t            return this.height / 2;\n\t        }\n\t    }, {\n\t        key: 'point',\n\t        get: function get() {\n\t            return new _Vector2.default(this.x, this.y);\n\t        }\n\t    }]);\n\t\n\t    return Entity;\n\t})();\n\t\n\t;\n\t\n\texports.default = Entity;\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Vector = __webpack_require__(84);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar _boxToPolygon = function _boxToPolygon(position, width, height) {\n\t    return new Polygon(new _Vector2.default(position.x, position.y), [new _Vector2.default(), new _Vector2.default(width, 0), new _Vector2.default(width, height), new _Vector2.default(0, height)]);\n\t};\n\t\n\t// ## Polygon\n\t//\n\t// Represents a *convex* polygon with any number of vertices (specified in counter-clockwise order)\n\t//\n\t// Note: Do _not_ manually change the `vertices`, `angle`, or `offset` properties. Use the\n\t// provided setters. Otherwise the calculated properties will not be updated correctly.\n\t//\n\t// `pos` can be changed directly.\n\t\n\t// Create a new polygon, passing in a position vector, and an array of vertices (represented\n\t// by vectors relative to the position vector). If no position is passed in, the position\n\t// of the polygon will be `(0,0)`.\n\t/**\n\t * @param {Vector=} pos A vector representing the origin of the polygon. (all other\n\t *   vertices are relative to this one)\n\t * @param {Array.<Vector>=} vertices An array of vectors representing the vertices in the polygon,\n\t *   in counter-clockwise order.\n\t * @constructor\n\t */\n\t\n\tvar Polygon = (function () {\n\t    function Polygon() {\n\t        var position = arguments.length <= 0 || arguments[0] === undefined ? new _Vector2.default() : arguments[0];\n\t        var vertices = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t\n\t        _classCallCheck(this, Polygon);\n\t\n\t        this.position = position;\n\t        this.angle = 0;\n\t        this.offset = new _Vector2.default();\n\t\n\t        this.setVertices(vertices);\n\t    }\n\t\n\t    /**\n\t     * Set the vertices of the polygon.\n\t     * Note: The vertices are counter-clockwise *with respect to the coordinate system*.\n\t     * If you directly draw the vertices on a screen that has the origin at the top-left corner\n\t     * it will _appear_ visually that the vertices are being specified clockwise. This is just\n\t     * because of the inversion of the Y-axis when being displayed.\n\t     *\n\t     * @param {Array.<Vector>=} vertices An array of vectors representing the vertices in the polygon,\n\t     *   in counter-clockwise order.\n\t     * @return {Polygon} This for chaining.\n\t     */\n\t\n\t    _createClass(Polygon, [{\n\t        key: 'setVertices',\n\t        value: function setVertices(vertices) {\n\t            // Only re-allocate if this is a new polygon or the number of vertices has changed.\n\t            var lengthChanged = !this.vertices || this.vertices.length !== vertices.length;\n\t\n\t            if (lengthChanged) {\n\t                var computedVertices = this.computedVertices = [];\n\t                var edges = this.edges = [];\n\t                var normals = this.normals = [];\n\t\n\t                // Allocate the vector arrays for the calculated properties\n\t                for (var i = 0; i < vertices.length; i++) {\n\t                    computedVertices.push(new _Vector2.default());\n\t                    edges.push(new _Vector2.default());\n\t                    normals.push(new _Vector2.default());\n\t                }\n\t            }\n\t            this.vertices = vertices;\n\t            this._compute();\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Set the current rotation angle of the polygon.\n\t         *\n\t         * @param {number} angle The current rotation angle (in radians).\n\t         * @return {Polygon} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: 'setAngle',\n\t        value: function setAngle(angle) {\n\t            this.angle = angle;\n\t            this._compute();\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Set the current offset to apply to the `vertices` before applying the `angle` rotation.\n\t         *\n\t         * @param {Vector} offset The new offset vector.\n\t         * @return {Polygon} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: 'setOffset',\n\t        value: function setOffset(offset) {\n\t            this.offset = offset;\n\t            this._compute();\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Rotates this polygon counter-clockwise around the origin of *its local coordinate system* (i.e. `pos`).\n\t         * Note: This changes the **original** vertices (so any `angle` will be applied on top of this rotation).\n\t         * @param {number} angle The angle to rotate (in radians)\n\t         * @return {Polygon} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: 'rotate',\n\t        value: function rotate(angle) {\n\t            var vertices = this.vertices;\n\t            var len = vertices.length;\n\t\n\t            for (var i = 0; i < len; i++) {\n\t                vertices[i].rotate(angle);\n\t            }\n\t\n\t            this._compute();\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Translates the vertices of this polygon by a specified amount relative to the origin of *its own coordinate\n\t         * system* (i.e. `pos`).\n\t         *\n\t         * This is most useful to change the \"center vertex\" of a polygon. If you just want to move the whole polygon, change\n\t         * the coordinates of `pos`.\n\t         *\n\t         * Note: This changes the **original** vertices (so any `offset` will be applied on top of this translation)\n\t         *\n\t         * @param {number} x The horizontal amount to translate.\n\t         * @param {number} y The vertical amount to translate.\n\t         * @return {Polygon} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: 'translate',\n\t        value: function translate(x, y) {\n\t            var vertices = this.vertices;\n\t            var len = vertices.length;\n\t\n\t            for (var i = 0; i < len; i++) {\n\t                vertices[i].x += x;\n\t                vertices[i].y += y;\n\t            }\n\t\n\t            this._compute();\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Computes the calculated collision polygon. Applies the `angle` and `offset` to the original vertices then recalculates the\n\t         * edges and normals of the collision polygon.\n\t         * @return {Polygon} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: '_compute',\n\t        value: function _compute() {\n\t            // Calculated vertices - this is what is used for underlying collisions and takes into account\n\t            // the angle/offset set on the polygon.\n\t            var computedVertices = this.computedVertices;\n\t\n\t            // The edges here are the direction of the `n`th edge of the polygon, relative to\n\t            // the `n`th vertex. If you want to draw a given edge from the edge value, you must\n\t            // first translate to the position of the starting vertex.\n\t            var edges = this.edges;\n\t\n\t            // The normals here are the direction of the normal for the `n`th edge of the polygon, relative\n\t            // to the position of the `n`th vertex. If you want to draw an edge normal, you must first\n\t            // translate to the position of the starting vertex.\n\t            var normals = this.normals;\n\t\n\t            // Copy the original vertices array and apply the offset/angle\n\t            var vertices = this.vertices;\n\t            var offset = this.offset;\n\t            var angle = this.angle;\n\t            var len = vertices.length;\n\t\n\t            for (var i = 0; i < len; i++) {\n\t                var computedVertex = computedVertices[i].copy(vertices[i]);\n\t\n\t                computedVertex.x += offset.x;\n\t                computedVertex.y += offset.y;\n\t\n\t                if (angle !== 0) {\n\t                    computedVertex.rotate(angle);\n\t                }\n\t            }\n\t\n\t            // Calculate the edges/normals\n\t            for (var i = 0; i < len; i++) {\n\t                var p1 = computedVertices[i];\n\t                var p2 = i < len - 1 ? computedVertices[i + 1] : computedVertices[0];\n\t                var e = edges[i].copy(p2).sub(p1);\n\t\n\t                normals[i].copy(e).perp().normalize();\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Compute the axis-aligned bounding box. Any current state\n\t         * (translations/rotations) will be applied before constructing the AABB.\n\t         *\n\t         *  Note: Returns a _new_ `Polygon` each time you call this.\n\t         *\n\t         * @return {Polygon} The AABB\n\t         */\n\t\n\t    }, {\n\t        key: 'getAABB',\n\t        value: function getAABB() {\n\t            var vertices = this.computedVertices;\n\t            var len = vertices.length;\n\t            var xMin = vertices[0].x;\n\t            var yMin = vertices[0].y;\n\t            var xMax = vertices[0].x;\n\t            var yMax = vertices[0].y;\n\t\n\t            for (var i = 1; i < len; i++) {\n\t                var vertex = vertices[i];\n\t\n\t                if (vertex.x < xMin) {\n\t                    xMin = vertex.x;\n\t                } else if (vertex.x > xMax) {\n\t                    xMax = vertex.x;\n\t                }\n\t\n\t                if (vertex.y < yMin) {\n\t                    yMin = vertex.y;\n\t                } else if (vertex.y > yMax) {\n\t                    yMax = vertex.y;\n\t                }\n\t            }\n\t\n\t            return _boxToPolygon(this.position.clone().add(new _Vector2.default(xMin, yMin)), xMax - xMin, yMax - yMin);\n\t        }\n\t    }]);\n\t\n\t    return Polygon;\n\t})();\n\t\n\texports.default = Polygon;\n\n/***/ },\n/* 84 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Vector = (function () {\n\t    function Vector() {\n\t        var x = arguments.length <= 0 || arguments[0] === undefined ? 0 : arguments[0];\n\t        var y = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t\n\t        _classCallCheck(this, Vector);\n\t\n\t        this.x = x;\n\t        this.y = y;\n\t    }\n\t\n\t    /**\n\t     * Copy the values of another Vector into this one.\n\t     *\n\t     * @param {Vector} other The other Vector.\n\t     * @return {Vector} This for chaining.\n\t     */\n\t\n\t    _createClass(Vector, [{\n\t        key: \"copy\",\n\t        value: function copy(other) {\n\t            this.x = other.x;\n\t            this.y = other.y;\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Create a new vector with the same coordinates as this on.\n\t         *\n\t         * @return {Vector} The new cloned vector\n\t         */\n\t\n\t    }, {\n\t        key: \"clone\",\n\t        value: function clone() {\n\t            return new this.constructor(this.x, this.y);\n\t        }\n\t\n\t        /**\n\t         * Change this vector to be perpendicular to what it was before. (Effectively\n\t         * roatates it 90 degrees in a clockwise direction)\n\t         * @return {Vector} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: \"perp\",\n\t        value: function perp() {\n\t            var x = this.x;\n\t\n\t            this.x = this.y;\n\t            this.y = -x;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"rotate\",\n\t\n\t        /**\n\t         * Rotate this vector (counter-clockwise) by the specified angle (in radians).\n\t         * @param {number} angle The angle to rotate (in radians)\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function rotate(angle) {\n\t            var x = this.x;\n\t            var y = this.y;\n\t\n\t            this.x = x * Math.cos(angle) - y * Math.sin(angle);\n\t            this.x = x * Math.sin(angle) + y * Math.cos(angle);\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"negate\",\n\t\n\t        /**\n\t         * Reverse this vector.\n\t         *\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function negate() {\n\t            this.x = -this.x;\n\t            this.y = -this.y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"normalize\",\n\t\n\t        /**\n\t         * Normalize this vector.  (make it have length of `1`)\n\t         *\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function normalize() {\n\t            var d = this.len();\n\t\n\t            if (d > 0) {\n\t                this.x = this.x / d;\n\t                this.y = this.y / d;\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        /**\n\t         * Add another vector to this one.\n\t         * @param {Vector} other The other Vector.\n\t         * @return {Vector} This for chaining.\n\t         */\n\t\n\t    }, {\n\t        key: \"add\",\n\t        value: function add(other) {\n\t            this.x += other.x;\n\t            this.y += other.y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"sub\",\n\t\n\t        /**\n\t         * Subtract another vector from this one.\n\t         * @param {Vector} other The other Vector.\n\t         * @return {Vector} This for chaiing.\n\t         */\n\t        value: function sub(other) {\n\t            this.x -= other.x;\n\t            this.y -= other.y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"scale\",\n\t\n\t        /**\n\t         * Scale this vector. An independant scaling factor can be provided\n\t         * for each axis, or a single scaling factor that will scale both `x` and `y`.\n\t         *\n\t         * @param {number} x The scaling factor in the x direction.\n\t         * @param {?number=} y The scaling factor in the y direction.  If this\n\t         *   is not specified, the x scaling factor will be used.\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function scale(x, y) {\n\t            this.x *= x;\n\t            this.y *= y || x;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"project\",\n\t\n\t        /**\n\t         * Project this vector on to another vector.\n\t         *\n\t         * @param {Vector} other The vector to project onto.\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function project(other) {\n\t            var amt = this.dot(other) / other.len2();\n\t\n\t            this.x = amt * other.x;\n\t            this.y = amt * other.y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"projectN\",\n\t\n\t        /**\n\t         * Project this vector onto a vector of unit length. This is slightly more efficient\n\t         * than `project` when dealing with unit vectors.\n\t         *\n\t         * @param {Vector} other The unit vector to project onto.\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function projectN(other) {\n\t            var amt = this.dot(other);\n\t\n\t            this.x = amt * other.x;\n\t            this.y = amt * other.y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"reflect\",\n\t\n\t        /**\n\t         * Reflect this vector on an arbitrary axis.\n\t         *\n\t         * @param {Vector} axis The vector representing the axis.\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function reflect(axis) {\n\t            var x = this.x;\n\t            var y = this.y;\n\t\n\t            this.project(axis).scale(2);\n\t            this.x -= x;\n\t            this.y -= y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"reflectN\",\n\t\n\t        /**\n\t         * Reflect this vector on an arbitrary axis (represented by a unit vector). This is\n\t         * slightly more efficient than `reflect` when dealing with an axis that is a unit vector.\n\t         *\n\t         * @param {Vector} axis The unit vector representing the axis.\n\t         * @return {Vector} This for chaining.\n\t         */\n\t        value: function reflectN(axis) {\n\t            var x = this.x;\n\t            var y = this.y;\n\t\n\t            this.projectN(axis).scale(2);\n\t            this.x -= x;\n\t            this.y -= y;\n\t\n\t            return this;\n\t        }\n\t    }, {\n\t        key: \"dot\",\n\t\n\t        /**\n\t         * Get the dot product of this vector and another.\n\t         *\n\t         * @param {Vector}  other The vector to dot this one against.\n\t         * @return {number} The dot product.\n\t         */\n\t        value: function dot(other) {\n\t            return this.x * other.x + this.y * other.y;\n\t        }\n\t    }, {\n\t        key: \"len2\",\n\t\n\t        /**\n\t         * Get the squared length of this vector.\n\t         * @return {number} The length^2 of this vector.\n\t         */\n\t        value: function len2() {\n\t            return this.dot(this);\n\t        }\n\t    }, {\n\t        key: \"len\",\n\t\n\t        /**\n\t         * Get the length of this vector.\n\t         * @return {number} The length of this vector.\n\t         */\n\t        value: function len() {\n\t            return Math.sqrt(this.len2());\n\t        }\n\t    }]);\n\t\n\t    return Vector;\n\t})();\n\t\n\texports.default = Vector;\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Gun = __webpack_require__(86);\n\t\n\tvar _Gun2 = _interopRequireDefault(_Gun);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    mp44: function mp44() {\n\t        var mp44 = new _Gun2.default('mp44', {\n\t            maxAmmo: 120,\n\t            maxMagazine: 30\n\t        });\n\t\n\t        return mp44;\n\t    },\n\t    thompson: function thompson() {\n\t        var thompson = new _Gun2.default('thompson', {\n\t            maxAmmo: 90,\n\t            maxMagazine: 25,\n\t            fireRate: 90\n\t        });\n\t\n\t        return thompson;\n\t    }\n\t};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Gun = (function () {\n\t    function Gun(name) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t        _classCallCheck(this, Gun);\n\t\n\t        this.name = name;\n\t        this.maxMagazine = options.maxMagazine || 10;\n\t        this.magazine = options.magazine || this.maxMagazine;\n\t\n\t        this.maxAmmo = options.maxAmmo || 10;\n\t        this.ammo = (options.ammo || this.maxAmmo) - this.magazine;\n\t\n\t        this.fireRate = options.fireRate || 150;\n\t        this.damage = options.damage || 10;\n\t        this.reloadTime = options.reloadTime || 500;\n\t\n\t        this._reloadingTime = 0;\n\t        this._firedTime = 0;\n\t        this._canFire = true;\n\t\n\t        this.isReloading = false;\n\t        this.fired = false;\n\t    }\n\t\n\t    _createClass(Gun, [{\n\t        key: \"fire\",\n\t        value: function fire() {\n\t            if (!this.isReloading && this._canFire && this.magazine > 0) {\n\t                this.fired = true;\n\t                this._canFire = false;\n\t                this.magazine -= 1;\n\t\n\t                return true;\n\t            } else {\n\t                return false;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"reload\",\n\t        value: function reload() {\n\t            if (!this.isReloading) {\n\t                this.isReloading = true;\n\t\n\t                var refill = this.maxMagazine - this.magazine;\n\t\n\t                var newAmmo = this.ammo - refill;\n\t\n\t                if (newAmmo < 0) {\n\t                    refill = this.ammo;\n\t\n\t                    this.ammo = 0;\n\t                } else {\n\t                    this.ammo -= refill;\n\t                }\n\t\n\t                this.magazine += refill;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"update\",\n\t        value: function update(delta) {\n\t            if (this._fired) {\n\t                this._fired = false;\n\t            }\n\t\n\t            if (this.isReloading) {\n\t                this._reloadingTime += delta;\n\t\n\t                if (this._reloadingTime > this.reloadTime) {\n\t                    this._reloadingTime = 0;\n\t                    this.isReloading = false;\n\t                }\n\t            } else if (!this._canFire) {\n\t                this._firedTime += delta;\n\t\n\t                if (this._firedTime > this.fireRate) {\n\t                    this._firedTime = 0;\n\t                    this._canFire = true;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: \"magazines\",\n\t        get: function get() {\n\t            return Math.floor(this.ammo / this.maxMagazine);\n\t        }\n\t    }]);\n\t\n\t    return Gun;\n\t})();\n\t\n\texports.default = Gun;\n\texports.default = Gun;\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _StateAudio2 = __webpack_require__(50);\n\t\n\tvar _StateAudio3 = _interopRequireDefault(_StateAudio2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar PlayAudio = (function (_StateAudio) {\n\t    _inherits(PlayAudio, _StateAudio);\n\t\n\t    function PlayAudio(state, effectsSpriteName, backgroundSpriteName) {\n\t        _classCallCheck(this, PlayAudio);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(PlayAudio).call(this, state, effectsSpriteName, backgroundSpriteName));\n\t\n\t        _this.entities = state.soldiers;\n\t        _this.player = state.player;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(PlayAudio, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var entity = _step.value;\n\t\n\t                    if (entity === this.player && entity.actions.firedBullet) {\n\t                        this.effects.play(entity.currentWeapon.name);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return PlayAudio;\n\t})(_StateAudio3.default);\n\t\n\texports.default = PlayAudio;\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Block = __webpack_require__(89);\n\t\n\tvar _Block2 = _interopRequireDefault(_Block);\n\t\n\tvar _Light = __webpack_require__(90);\n\t\n\tvar _Light2 = _interopRequireDefault(_Light);\n\t\n\tvar _WorldMap = __webpack_require__(91);\n\t\n\tvar _WorldMap2 = _interopRequireDefault(_WorldMap);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _parseBlock = function _parseBlock(rawBlock, blockWidth, blockHeight, blockDepth) {\n\t    var position = {\n\t        x: rawBlock.position.x * blockWidth,\n\t        y: rawBlock.position.y * blockHeight,\n\t        z: rawBlock.position.z * blockDepth\n\t    };\n\t\n\t    var blockOptions = {\n\t        walls: rawBlock.walls,\n\t        type: rawBlock.type,\n\t        collidable: rawBlock.collidable\n\t    };\n\t\n\t    var block = new _Block2.default(position, blockWidth, blockHeight, blockDepth, blockOptions);\n\t\n\t    block.collidable = rawBlock.collidable || false;\n\t\n\t    return block;\n\t};\n\t\n\tvar _createEmptyLayers = function _createEmptyLayers(mapWidth, mapHeight, mapDepth) {\n\t    var layers = [];\n\t\n\t    for (var z = 0; z < mapDepth; z++) {\n\t        var layer = [];\n\t\n\t        for (var y = 0; y < mapHeight; y++) {\n\t            var row = [];\n\t\n\t            for (var x = 0; x < mapDepth; x++) {\n\t                row.push(null);\n\t            }\n\t\n\t            layer.push(row);\n\t        }\n\t\n\t        layers.push(layer);\n\t    }\n\t\n\t    return layers;\n\t};\n\t\n\tvar parseLight = function parseLight(rawLight, blockWidth, blockHeight, blockDepth) {\n\t    var rawPosition = rawLight.position;\n\t    var sourcePosition = {\n\t        x: rawPosition.x * blockWidth,\n\t        y: rawPosition.y * blockHeight,\n\t        z: rawPosition.z * blockDepth\n\t    };\n\t\n\t    var position = {\n\t        x: rawPosition.x * blockWidth,\n\t        y: rawPosition.y * blockHeight,\n\t        z: rawPosition.z * blockDepth\n\t    };\n\t\n\t    var angle = Math.PI * 2;\n\t\n\t    if (rawLight.align === 'west') {\n\t        sourcePosition.x -= blockWidth / 2;\n\t    } else if (rawLight.align === 'east') {\n\t        sourcePosition.x += blockWidth / 2;\n\t        angle = 180 * (Math.PI / 180);\n\t    } else if (rawLight.align === 'north') {\n\t        sourcePosition.y += blockHeight / 2;\n\t        angle = 90 * (Math.PI / 180);\n\t    } else if (rawLight.align === 'south') {\n\t        sourcePosition.y -= blockHeight / 2;\n\t        angle = 270 * (Math.PI / 180);\n\t    }\n\t\n\t    var light = new _Light2.default(position.x, position.y, position.z, rawLight.color);\n\t\n\t    light.angle = angle;\n\t    light.sourcePosition = sourcePosition;\n\t\n\t    return light;\n\t};\n\t\n\tvar _parseRawMap = function _parseRawMap(rawMap) {\n\t    // TODO validate map\n\t    var rawBlocks = rawMap.blocks;\n\t\n\t    var blockWidth = rawMap.blockWidth;\n\t    var blockHeight = rawMap.blockHeight;\n\t    var blockDepth = rawMap.blockDepth;\n\t\n\t    var mapWidth = rawMap.width;\n\t    var mapHeight = rawMap.height;\n\t    var mapDepth = rawMap.depth;\n\t\n\t    var layers = _createEmptyLayers(mapWidth, mapHeight, mapDepth);\n\t\n\t    var _iteratorNormalCompletion = true;\n\t    var _didIteratorError = false;\n\t    var _iteratorError = undefined;\n\t\n\t    try {\n\t        for (var _iterator = rawBlocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var rawBlock = _step.value;\n\t\n\t            var block = _parseBlock(rawBlock, blockWidth, blockHeight, blockDepth);\n\t\n\t            var position = rawBlock.position;\n\t\n\t            // TODO check for out of bounds\n\t            layers[position.z][position.y][position.x] = block;\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t                _iterator.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError) {\n\t                throw _iteratorError;\n\t            }\n\t        }\n\t    }\n\t\n\t    var worldMap = new _WorldMap2.default(layers, mapWidth, mapHeight, mapDepth, blockWidth, blockHeight, blockDepth);\n\t\n\t    if (rawMap.lights) {\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t            for (var _iterator2 = rawMap.lights[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                var rawLight = _step2.value;\n\t\n\t                worldMap.lights.push(parseLight(rawLight, blockWidth, blockHeight, blockDepth));\n\t            }\n\t        } catch (err) {\n\t            _didIteratorError2 = true;\n\t            _iteratorError2 = err;\n\t        } finally {\n\t            try {\n\t                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                    _iterator2.return();\n\t                }\n\t            } finally {\n\t                if (_didIteratorError2) {\n\t                    throw _iteratorError2;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    worldMap.name = rawMap.name;\n\t    worldMap.respawns = [];\n\t\n\t    console.log(rawMap);\n\t    var _iteratorNormalCompletion3 = true;\n\t    var _didIteratorError3 = false;\n\t    var _iteratorError3 = undefined;\n\t\n\t    try {\n\t        for (var _iterator3 = rawMap.respawns[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t            var respawn = _step3.value;\n\t\n\t            worldMap.respawns.push(respawn);\n\t        }\n\t    } catch (err) {\n\t        _didIteratorError3 = true;\n\t        _iteratorError3 = err;\n\t    } finally {\n\t        try {\n\t            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                _iterator3.return();\n\t            }\n\t        } finally {\n\t            if (_didIteratorError3) {\n\t                throw _iteratorError3;\n\t            }\n\t        }\n\t    }\n\t\n\t    return worldMap;\n\t};\n\t\n\tvar MapParser = {\n\t    parse: function parse(rawMap) {\n\t        return _parseRawMap(rawMap);\n\t    }\n\t};\n\t\n\texports.default = MapParser;\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Polygon = __webpack_require__(83);\n\t\n\tvar _Polygon2 = _interopRequireDefault(_Polygon);\n\t\n\tvar _Vector = __webpack_require__(84);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Block = (function () {\n\t    function Block(position, width, height, depth) {\n\t        var options = arguments.length <= 4 || arguments[4] === undefined ? {} : arguments[4];\n\t\n\t        _classCallCheck(this, Block);\n\t\n\t        this._position = position;\n\t        this.width = width;\n\t        this.height = height;\n\t        this.depth = depth;\n\t        this.options = options;\n\t        this.type = options.type || 'wall';\n\t        this._walls = options.walls || {};\n\t        this.collidable = options.collidable || true;\n\t\n\t        this._computeBodies();\n\t    }\n\t\n\t    _createClass(Block, [{\n\t        key: '_computeBodies',\n\t        value: function _computeBodies() {\n\t            // If fully closed block (nothing should be inside it)\n\t            if (this._walls.top && this._walls.west && this._walls.east && this._walls.south && this._walls.north) {\n\t                this.bodies = [new _Polygon2.default(new _Vector2.default(this.x, this.y), [new _Vector2.default(0, 0), new _Vector2.default(this.width, 0), new _Vector2.default(this.width, this.height), new _Vector2.default(0, this.height)])];\n\t            }\n\t\n\t            var bodies = [];\n\t\n\t            if (this._walls.west) {\n\t                bodies.push(new _Polygon2.default(new _Vector2.default(this.x, this.y), [new _Vector2.default(0, 0), new _Vector2.default(this.width, 0), new _Vector2.default(this.width, 2), new _Vector2.default(0, 2)]));\n\t            }\n\t\n\t            if (this._walls.east) {\n\t                bodies.push(new _Polygon2.default(new _Vector2.default(this.x, this.y + this.height), [new _Vector2.default(0, 0), new _Vector2.default(this.width, 0), new _Vector2.default(this.width, -2), new _Vector2.default(0, -2)]));\n\t            }\n\t\n\t            if (this._walls.south) {\n\t                bodies.push(new _Polygon2.default(new _Vector2.default(this.x + this.width, this.y), [new _Vector2.default(0, 0), new _Vector2.default(0, this.height), new _Vector2.default(-2, this.height), new _Vector2.default(-2, 0)]));\n\t            }\n\t\n\t            if (this._walls.north) {\n\t                bodies.push(new _Polygon2.default(new _Vector2.default(this.x, this.y), [new _Vector2.default(0, 0), new _Vector2.default(0, this.height), new _Vector2.default(2, this.height), new _Vector2.default(2, 0)]));\n\t            }\n\t\n\t            this.bodies = bodies;\n\t        }\n\t    }, {\n\t        key: 'walls',\n\t        set: function set(walls) {\n\t            this._walls = walls;\n\t            this._computeBodies();\n\t        },\n\t        get: function get() {\n\t            return this._walls;\n\t        }\n\t    }, {\n\t        key: 'position',\n\t        set: function set(position) {\n\t            this._position = position;\n\t            this._computeBodies();\n\t        },\n\t        get: function get() {\n\t            return this._position;\n\t        }\n\t    }, {\n\t        key: 'x',\n\t        get: function get() {\n\t            return this._position.x;\n\t        }\n\t    }, {\n\t        key: 'y',\n\t        get: function get() {\n\t            return this._position.y;\n\t        }\n\t    }, {\n\t        key: 'z',\n\t        get: function get() {\n\t            return this._position.z;\n\t        }\n\t    }]);\n\t\n\t    return Block;\n\t})();\n\t\n\texports.default = Block;\n\n/***/ },\n/* 90 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Light = (function () {\n\t    function Light(x, y, z, color) {\n\t        _classCallCheck(this, Light);\n\t\n\t        this.position = {\n\t            x: x,\n\t            y: y,\n\t            z: z\n\t        };\n\t        this.color = color;\n\t        this.sourcePosition = {\n\t            x: x,\n\t            y: y,\n\t            z: z\n\t        };\n\t\n\t        this.angle = Math.PI * 2;\n\t    }\n\t\n\t    _createClass(Light, [{\n\t        key: \"x\",\n\t        get: function get() {\n\t            return this.position.x;\n\t        }\n\t    }, {\n\t        key: \"y\",\n\t        get: function get() {\n\t            return this.position.y;\n\t        }\n\t    }, {\n\t        key: \"z\",\n\t        get: function get() {\n\t            return this.position.z;\n\t        }\n\t    }]);\n\t\n\t    return Light;\n\t})();\n\t\n\texports.default = Light;\n\n/***/ },\n/* 91 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar WorldMap = (function () {\n\t    function WorldMap(layers, width, height, depth, blockWidth, blockHeight, blockDepth) {\n\t        _classCallCheck(this, WorldMap);\n\t\n\t        this.width = width;\n\t        this.height = height;\n\t        this.depth = depth;\n\t        this.blockWidth = blockWidth;\n\t        this.blockHeight = blockHeight;\n\t        this.blockDepth = blockDepth;\n\t\n\t        this.lights = [];\n\t        this.layers = layers;\n\t        this.name = null;\n\t    }\n\t\n\t    _createClass(WorldMap, [{\n\t        key: 'blocks',\n\t        value: function blocks(types) {\n\t            return this.blocksBetweenIndexes({\n\t                x: 0, y: 0, z: 0\n\t            }, {\n\t                x: this.width - 1,\n\t                y: this.height - 1,\n\t                z: this.depth - 1\n\t            }, types);\n\t        }\n\t    }, {\n\t        key: 'indexToPosition',\n\t        value: function indexToPosition(index) {\n\t            return {\n\t                x: index.x * this.blockWidth,\n\t                y: index.y * this.blockHeight,\n\t                z: index.z * this.blockDepth\n\t            };\n\t        }\n\t    }, {\n\t        key: 'positionToIndex',\n\t        value: function positionToIndex(position) {\n\t            var x = position.x;\n\t            var y = position.y;\n\t            var z = position.z;\n\t\n\t            var index = {};\n\t\n\t            index.x = Math.floor(x / this.blockWidth);\n\t            index.y = Math.floor(y / this.blockHeight);\n\t            index.z = Math.floor(z / this.blockDepth);\n\t\n\t            return index;\n\t        }\n\t    }, {\n\t        key: 'randomRespawnPosition',\n\t        value: function randomRespawnPosition() {\n\t            var respawn = this.respawns[Math.round(Math.random() * (this.respawns.length - 1))];\n\t            var position = this.indexToPosition(respawn.position);\n\t\n\t            return position;\n\t        }\n\t    }, {\n\t        key: 'blockAtIndex',\n\t        value: function blockAtIndex(index) {\n\t            if (index.z < 0 || index.z >= this.depth) {\n\t                return null;\n\t            }\n\t\n\t            if (index.y < 0 || index.y >= this.height) {\n\t                return null;\n\t            }\n\t\n\t            if (index.x < 0 || index.x >= this.width) {\n\t                return null;\n\t            }\n\t\n\t            return this.layers[index.z][index.y][index.x];\n\t        }\n\t    }, {\n\t        key: 'blockAtPosition',\n\t        value: function blockAtPosition(position) {\n\t            var indexes = this.positionToIndex(position);\n\t\n\t            return this.blockAtIndex(indexes);\n\t        }\n\t    }, {\n\t        key: 'blocksAtPositions',\n\t        value: function blocksAtPositions(positions) {\n\t            var types = arguments.length <= 1 || arguments[1] === undefined ? [] : arguments[1];\n\t\n\t            var blocks = [];\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = positions[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var position = _step.value;\n\t\n\t                    var block = this.blockAtPosition(position);\n\t\n\t                    if (block && types.indexOf(block.type) !== -1) {\n\t                        blocks.push(block);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return blocks;\n\t        }\n\t\n\t        /**\n\t         * Get all blocks within two index positions in the map.\n\t         *\n\t         * @param {object} start - contains x, y, z index positions for start.\n\t         * @param {object} end - contains x, y, z index positions for end.\n\t         *\n\t         * @returns {array} All blocks within the box\n\t         */\n\t\n\t    }, {\n\t        key: 'blocksBetweenIndexes',\n\t        value: function blocksBetweenIndexes() {\n\t            var start = arguments.length <= 0 || arguments[0] === undefined ? { x: 0, y: 0, z: 0 } : arguments[0];\n\t            var end = arguments.length <= 1 || arguments[1] === undefined ? { x: 0, y: 0, z: 0 } : arguments[1];\n\t            var types = arguments.length <= 2 || arguments[2] === undefined ? [] : arguments[2];\n\t\n\t            var blocks = [];\n\t\n\t            var min = start;\n\t            var max = end;\n\t\n\t            for (var z = 0; z < this.layers.length; z++) {\n\t                if (z >= min.z && z <= max.z) {\n\t                    for (var y = 0; y < this.layers[z].length; y++) {\n\t                        if (y >= min.y && y <= max.y) {\n\t                            for (var x = 0; x < this.layers[z][y].length; x++) {\n\t                                if (x >= min.x && x <= max.x) {\n\t                                    var index = { x: x, y: y, z: z };\n\t\n\t                                    var block = this.blockAtIndex(index);\n\t\n\t                                    if (block && types.indexOf(block.type) !== -1) {\n\t                                        blocks.push(block);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            return blocks;\n\t        }\n\t    }, {\n\t        key: 'blocksBetweenPositions',\n\t        value: function blocksBetweenPositions() {\n\t            var start = arguments.length <= 0 || arguments[0] === undefined ? { x: 0, y: 0, z: 0 } : arguments[0];\n\t            var end = arguments.length <= 1 || arguments[1] === undefined ? { x: 0, y: 0, z: 0 } : arguments[1];\n\t            var types = arguments[2];\n\t\n\t            return this.blocksBetweenIndexes(this.positionToIndex(start), this.positionToIndex(end), types);\n\t        }\n\t    }, {\n\t        key: 'toString',\n\t        value: function toString() {\n\t            var finalString = '';\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                for (var _iterator2 = this.layers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    var layer = _step2.value;\n\t\n\t                    var layerStrings = [];\n\t\n\t                    var _iteratorNormalCompletion3 = true;\n\t                    var _didIteratorError3 = false;\n\t                    var _iteratorError3 = undefined;\n\t\n\t                    try {\n\t                        for (var _iterator3 = layer[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                            var layerRow = _step3.value;\n\t\n\t                            var blocks = layerRow.map(function (v) {\n\t                                return v ? v.id : 0;\n\t                            });\n\t\n\t                            layerStrings.push(blocks.join(', '));\n\t                        }\n\t                    } catch (err) {\n\t                        _didIteratorError3 = true;\n\t                        _iteratorError3 = err;\n\t                    } finally {\n\t                        try {\n\t                            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                                _iterator3.return();\n\t                            }\n\t                        } finally {\n\t                            if (_didIteratorError3) {\n\t                                throw _iteratorError3;\n\t                            }\n\t                        }\n\t                    }\n\t\n\t                    finalString = finalString.concat(layerStrings.join('\\n'));\n\t                    finalString = finalString.concat('\\n---------------\\n');\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return finalString;\n\t        }\n\t    }, {\n\t        key: 'totalWidth',\n\t        get: function get() {\n\t            return this.width * this.blockWidth;\n\t        }\n\t    }, {\n\t        key: 'totalHeight',\n\t        get: function get() {\n\t            return this.height * this.blockHeight;\n\t        }\n\t    }, {\n\t        key: 'totalDepth',\n\t        get: function get() {\n\t            return this.depth * this.blockDepth;\n\t        }\n\t    }]);\n\t\n\t    return WorldMap;\n\t})();\n\t\n\texports.default = WorldMap;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _CollisionUtils = __webpack_require__(93);\n\t\n\tvar _CollisionUtils2 = _interopRequireDefault(_CollisionUtils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CollisionSystem = (function () {\n\t    function CollisionSystem(state) {\n\t        _classCallCheck(this, CollisionSystem);\n\t\n\t        this.state = state;\n\t        this.entities = state.soldiers;\n\t        this.map = this.state.map;\n\t    }\n\t\n\t    _createClass(CollisionSystem, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            var _this = this;\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                var _loop = function _loop() {\n\t                    var entity = _step.value;\n\t\n\t                    _CollisionUtils2.default.wallCollision(_this.map, entity, function (response) {\n\t                        entity.position.x -= response.overlapV.x;\n\t                        entity.position.y -= response.overlapV.y;\n\t                    });\n\t\n\t                    _CollisionUtils2.default.floorCollision(_this.map, entity, delta, function (block) {\n\t                        if (block.type === 'water') {\n\t                            entity.fall();\n\t                            entity.kill();\n\t                        } else {\n\t                            entity.position.z = block.position.z + block.depth;\n\t                            entity.stopFalling();\n\t                        }\n\t                    });\n\t                };\n\t\n\t                for (var _iterator = this.entities[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    _loop();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return CollisionSystem;\n\t})();\n\t\n\texports.default = CollisionSystem;\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _SAT = __webpack_require__(94);\n\t\n\tvar _SAT2 = _interopRequireDefault(_SAT);\n\t\n\tvar _Response = __webpack_require__(96);\n\t\n\tvar _Response2 = _interopRequireDefault(_Response);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar rayPositions = function rayPositions(entity, rayDistance) {\n\t    var x = entity.position.x;\n\t    var y = entity.position.y;\n\t    var angle = entity.angle;\n\t\n\t    var reverse = entity.reverse ? -1 : 1;\n\t\n\t    var start = {};\n\t    var end = {};\n\t\n\t    if (Math.abs(entity.velocity.x) > 0) {\n\t        x -= rayDistance * Math.cos(angle) * reverse;\n\t    } else {\n\t        x -= rayDistance * reverse;\n\t    }\n\t\n\t    if (entity.velocity.x < 0) {\n\t        start.x = x;\n\t        end.x = entity.position.x;\n\t    } else {\n\t        start.x = entity.position.x;\n\t        end.x = x;\n\t    }\n\t\n\t    if (Math.abs(entity.velocity.y) > 0) {\n\t        y -= rayDistance * Math.sin(angle) * reverse;\n\t    } else {\n\t        y -= rayDistance * reverse;\n\t    }\n\t\n\t    if (entity.velocity.y < 0) {\n\t        start.y = y;\n\t        end.y = entity.position.y;\n\t    } else {\n\t        start.y = entity.position.y;\n\t        end.y = y;\n\t    }\n\t\n\t    start.z = entity.position.z;\n\t    end.z = entity.position.z;\n\t\n\t    return { min: start, max: end };\n\t};\n\t\n\tvar CollisionUtils = {\n\t    wallCollision: function wallCollision(map, entity, onCollision) {\n\t        var rayDistance = (map.blockWidth + map.blockHeight) / 2;\n\t        var ray = rayPositions(entity, rayDistance);\n\t\n\t        if (!(ray.min.x === ray.max.x && ray.min.y === ray.max.y)) {\n\t            var blocks = map.blocksBetweenPositions(ray.min, ray.max, ['wall']);\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = blocks[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var block = _step.value;\n\t\n\t                    if (block.collidable) {\n\t                        var polygons = block.bodies;\n\t\n\t                        var _iteratorNormalCompletion2 = true;\n\t                        var _didIteratorError2 = false;\n\t                        var _iteratorError2 = undefined;\n\t\n\t                        try {\n\t                            for (var _iterator2 = polygons[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                                var polygon = _step2.value;\n\t\n\t                                var response = new _Response2.default();\n\t\n\t                                if (_SAT2.default.testPolygonPolygon(entity.body, polygon, response)) {\n\t                                    onCollision(response);\n\t                                }\n\t                            }\n\t                        } catch (err) {\n\t                            _didIteratorError2 = true;\n\t                            _iteratorError2 = err;\n\t                        } finally {\n\t                            try {\n\t                                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                                    _iterator2.return();\n\t                                }\n\t                            } finally {\n\t                                if (_didIteratorError2) {\n\t                                    throw _iteratorError2;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    },\n\t    floorCollision: function floorCollision(map, entity, delta) {\n\t        var onCollision = arguments.length <= 3 || arguments[3] === undefined ? function () {} : arguments[3];\n\t\n\t        var nextEntityPosition = {\n\t            x: entity.position.x + entity.velocity.x * delta,\n\t            y: entity.position.y + entity.velocity.y * delta,\n\t            z: entity.position.z + entity.velocity.z * delta\n\t        };\n\t\n\t        var floorBlockIndex = map.positionToIndex(entity.position);\n\t\n\t        floorBlockIndex.z -= 1;\n\t\n\t        var block = map.blockAtIndex(floorBlockIndex);\n\t\n\t        if (block && block.collidable && block.walls.top) {\n\t            if (nextEntityPosition.z <= block.position.z + block.depth) {\n\t                onCollision(block);\n\t            }\n\t        } else {\n\t            entity.fall();\n\t        }\n\t    }\n\t};\n\t\n\texports.default = CollisionUtils;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Vector = __webpack_require__(84);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _Box = __webpack_require__(95);\n\t\n\tvar _Box2 = _interopRequireDefault(_Box);\n\t\n\tvar _Response = __webpack_require__(96);\n\t\n\tvar _Response2 = _interopRequireDefault(_Response);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// ## Object Pools\n\t\n\t// A pool of `Vector` objects that are used in calculations to avoid\n\t// allocating memory.\n\t/**\n\t * @type {Array.<Vector>}\n\t */\n\tvar T_VECTORS = []; // Version 0.5.0 - Copyright 2012 - 2015 -  Jim Riecken <jimr@jimr.ca>\n\t//\n\t// Released under the MIT License - https://github.com/jriecken/sat-js\n\t//\n\t// A simple library for determining intersections of circles and\n\t// polygons using the Separating Axis Theorem.\n\t/** @preserve SAT.js - Version 0.5.0 - Copyright 2012 - 2015 - Jim Riecken <jimr@jimr.ca> - released under the MIT License. https://github.com/jriecken/sat-js */\n\t\n\tfor (var i = 0; i < 10; i++) {\n\t    T_VECTORS.push(new _Vector2.default());\n\t}\n\t\n\t// A pool of arrays of numbers used in calculations to avoid allocating\n\t// memory.\n\t/**\n\t * @type {Array.<Array.<number>>}\n\t */\n\tvar T_ARRAYS = [];\n\t\n\tfor (var i = 0; i < 5; i++) {\n\t    T_ARRAYS.push([]);\n\t}\n\t\n\t// Temporary response used for polygon hit detection.\n\t/**\n\t * @type {Response}\n\t */\n\tvar T_RESPONSE = new _Response2.default();\n\t\n\t// Unit square polygon used for polygon hit detection.\n\t/**\n\t * @type {Polygon}\n\t */\n\tvar UNIT_SQUARE = new _Box2.default(new _Vector2.default(), 1, 1).toPolygon();\n\t\n\t// ## Helper Functions\n\t\n\t/**\n\t * Flattens the specified array of vertices onto a unit vector axis,\n\t * resulting in a one dimensional range of the minimum and\n\t * maximum value on that axis.\n\t * @param {Array.<Vector>} vertices The vertices to flatten.\n\t * @param {Vector} normal The unit vector axis to flatten on.\n\t * @param {Array.<number>} result An array.  After calling this function,\n\t *   result[0] will be the minimum value,\n\t *   result[1] will be the maximum value.\n\t *\n\t * @returns {void}\n\t */\n\tvar _flattenVerticesOn = function _flattenVerticesOn(vertices, normal, result) {\n\t    var min = Number.MAX_VALUE;\n\t    var max = -Number.MAX_VALUE;\n\t    var len = vertices.length;\n\t\n\t    for (var i = 0; i < len; i++) {\n\t        // The magnitude of the projection of the point onto the normal\n\t        var dot = vertices[i].dot(normal);\n\t\n\t        if (dot < min) {\n\t            min = dot;\n\t        }\n\t        if (dot > max) {\n\t            max = dot;\n\t        }\n\t    }\n\t\n\t    result[0] = min;result[1] = max;\n\t};\n\t\n\t/**\n\t * Check whether two convex polygons are separated by the specified\n\t * axis (must be a unit vector).\n\t *\n\t * @param {Vector} aPos The position of the first polygon.\n\t * @param {Vector} bPos The position of the second polygon.\n\t * @param {Array.<Vector>} aPoints The vertices in the first polygon.\n\t * @param {Array.<Vector>} bPoints The vertices in the second polygon.\n\t * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n\t *   will be projected onto this axis.\n\t * @param {Response=} response A Response object (optional) which will be populated\n\t *   if the axis is not a separating axis.\n\t * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n\t *   and a response is passed in, information about how much overlap and\n\t *   the direction of the overlap will be populated.\n\t */\n\tvar _isSeparatingAxis = function _isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n\t    var rangeA = T_ARRAYS.pop();\n\t    var rangeB = T_ARRAYS.pop();\n\t\n\t    // The magnitude of the offset between the two polygons\n\t    var offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n\t    var projectedOffset = offsetV.dot(axis);\n\t\n\t    // Project the polygons onto the axis.\n\t    _flattenVerticesOn(aPoints, axis, rangeA);\n\t    _flattenVerticesOn(bPoints, axis, rangeB);\n\t\n\t    // Move B's range to its position relative to A.\n\t    rangeB[0] += projectedOffset;\n\t    rangeB[1] += projectedOffset;\n\t\n\t    // Check if there is a gap. If there is, this is a separating axis and we can stop\n\t    if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n\t        T_VECTORS.push(offsetV);\n\t        T_ARRAYS.push(rangeA);\n\t        T_ARRAYS.push(rangeB);\n\t\n\t        return true;\n\t    }\n\t\n\t    // This is not a separating axis. If we're calculating a response, calculate the overlap.\n\t    if (response) {\n\t        var overlap = 0;\n\t\n\t        // A starts further left than B\n\t        if (rangeA[0] < rangeB[0]) {\n\t            response.aInB = false;\n\t\n\t            // A ends before B does. We have to pull A out of B\n\t            if (rangeA[1] < rangeB[1]) {\n\t                overlap = rangeA[1] - rangeB[0];\n\t                response.bInA = false;\n\t            } else {\n\t                // B is fully inside A.  Pick the shortest way out.\n\t                var option1 = rangeA[1] - rangeB[0];\n\t                var option2 = rangeB[1] - rangeA[0];\n\t\n\t                overlap = option1 < option2 ? option1 : -option2;\n\t            }\n\t        } else {\n\t            // B starts further left than A\n\t            response.bInA = false;\n\t\n\t            // B ends before A ends. We have to push A out of B\n\t            if (rangeA[1] > rangeB[1]) {\n\t                overlap = rangeA[0] - rangeB[1];\n\t                response.aInB = false;\n\t\n\t                // A is fully inside B.  Pick the shortest way out.\n\t            } else {\n\t                    var option1 = rangeA[1] - rangeB[0];\n\t                    var option2 = rangeB[1] - rangeA[0];\n\t\n\t                    overlap = option1 < option2 ? option1 : -option2;\n\t                }\n\t        }\n\t\n\t        // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n\t        var absOverlap = Math.abs(overlap);\n\t\n\t        if (absOverlap < response.overlap) {\n\t            response.overlap = absOverlap;\n\t            response.overlapN.copy(axis);\n\t            if (overlap < 0) {\n\t                response.overlapN.negate();\n\t            }\n\t        }\n\t    }\n\t\n\t    T_VECTORS.push(offsetV);\n\t    T_ARRAYS.push(rangeA);\n\t    T_ARRAYS.push(rangeB);\n\t\n\t    return false;\n\t};\n\t\n\t// Calculates which Voronoi region a point is on a line segment.\n\t// It is assumed that both the line and the point are relative to `(0,0)`\n\t//\n\t//            |       (0)      |\n\t//     (-1)  [S]--------------[E]  (1)\n\t//            |       (0)      |\n\t/**\n\t * @param {Vector} line The line segment.\n\t * @param {Vector} point The point.\n\t * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\n\t *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\n\t *          RIGHT_VORONOI_REGION (1) if it is the right region.\n\t */\n\tvar _vornoiRegion = function _vornoiRegion(line, point) {\n\t    var len2 = line.len2();\n\t    var dp = point.dot(line);\n\t\n\t    // If the point is beyond the start of the line, it is in the\n\t    // left voronoi region.\n\t    if (dp < 0) {\n\t        return LEFT_VORONOI_REGION;\n\t    } else if (dp > len2) {\n\t        // If the point is beyond the end of the line, it is in the\n\t        // right voronoi region.\n\t\n\t        return RIGHT_VORONOI_REGION;\n\t    } else {\n\t        // Otherwise, it's in the middle one.\n\t        return MIDDLE_VORONOI_REGION;\n\t    }\n\t};\n\t\n\t// Constants for Voronoi regions\n\t/**\n\t * @const\n\t */\n\tvar LEFT_VORONOI_REGION = -1;\n\t\n\t/**\n\t * @const\n\t */\n\tvar MIDDLE_VORONOI_REGION = 0;\n\t\n\t/**\n\t * @const\n\t */\n\tvar RIGHT_VORONOI_REGION = 1;\n\t\n\t// ## Collision Tests\n\t\n\t// Check if a point is inside a circle.\n\t/**\n\t * @param {Vector} p The point to test.\n\t * @param {Circle} c The circle to test.\n\t * @return {boolean} true if the point is inside the circle, false if it is not.\n\t */\n\tvar _pointInCircle = function _pointInCircle(p, c) {\n\t    var differenceV = T_VECTORS.pop().copy(p).sub(c.position);\n\t    var radiusSq = c.radius * c.radius;\n\t    var distanceSq = differenceV.len2();\n\t\n\t    T_VECTORS.push(differenceV);\n\t\n\t    // If the distance between is smaller than the radius then the point is inside the circle.\n\t    return distanceSq <= radiusSq;\n\t};\n\t\n\t// Check if a point is inside a convex polygon.\n\t/**\n\t * @param {Vector} p The point to test.\n\t * @param {Polygon} poly The polygon to test.\n\t * @return {boolean} true if the point is inside the polygon, false if it is not.\n\t */\n\tvar _pointInPolygon = function _pointInPolygon(p, poly) {\n\t    UNIT_SQUARE.position.copy(p);\n\t    T_RESPONSE.clear();\n\t\n\t    var result = _testPolygonPolygon(UNIT_SQUARE, poly, T_RESPONSE);\n\t\n\t    if (result) {\n\t        result = T_RESPONSE.aInB;\n\t    }\n\t    return result;\n\t};\n\t\n\t// Check if two circles collide.\n\t/**\n\t * @param {Circle} a The first circle.\n\t * @param {Circle} b The second circle.\n\t * @param {Response=} response Response object (optional) that will be populated if\n\t *   the circles intersect.\n\t * @return {boolean} true if the circles intersect, false if they don't.\n\t */\n\tvar _testCircleCircle = function _testCircleCircle(a, b, response) {\n\t    // Check if the distance between the centers of the two\n\t    // circles is greater than their combined radius.\n\t    var differenceV = T_VECTORS.pop().copy(b.position).sub(a.position);\n\t    var totalRadius = a.radius + b.radius;\n\t    var totalRadiusSq = totalRadius * totalRadius;\n\t    var distanceSq = differenceV.len2();\n\t\n\t    // If the distance is bigger than the combined radius, they don't intersect.\n\t    if (distanceSq > totalRadiusSq) {\n\t        T_VECTORS.push(differenceV);\n\t\n\t        return false;\n\t    }\n\t\n\t    // They intersect.  If we're calculating a response, calculate the overlap.\n\t    if (response) {\n\t        var dist = Math.sqrt(distanceSq);\n\t\n\t        response.a = a;\n\t        response.b = b;\n\t        response.overlap = totalRadius - dist;\n\t        response.overlapN.copy(differenceV.normalize());\n\t        response.overlapV.copy(differenceV).scale(response.overlap);\n\t        response.aInB = a.radius <= b.radius && dist <= b.radius - a.radius;\n\t        response.bInA = b.radius <= a.radius && dist <= a.radius - b.radius;\n\t    }\n\t\n\t    T_VECTORS.push(differenceV);\n\t\n\t    return true;\n\t};\n\t\n\t// Check if a polygon and a circle collide.\n\t/**\n\t * @param {Polygon} polygon The polygon.\n\t * @param {Circle} circle The circle.\n\t * @param {Response=} response Response object (optional) that will be populated if\n\t *   they interset.\n\t * @return {boolean} true if they intersect, false if they don't.\n\t */\n\tvar _testPolygonCircle = function _testPolygonCircle(polygon, circle, response) {\n\t    // Get the position of the circle relative to the polygon.\n\t    var circlePos = T_VECTORS.pop().copy(circle.position).sub(polygon.position);\n\t    var radius = circle.radius;\n\t    var radius2 = radius * radius;\n\t    var points = polygon.computedVertices;\n\t    var len = points.length;\n\t    var edge = T_VECTORS.pop();\n\t    var point = T_VECTORS.pop();\n\t\n\t    // For each edge in the polygon:\n\t    for (var i = 0; i < len; i++) {\n\t        var next = i === len - 1 ? 0 : i + 1;\n\t        var prev = i === 0 ? len - 1 : i - 1;\n\t        var overlap = 0;\n\t        var overlapN = null;\n\t\n\t        // Get the edge.\n\t        edge.copy(polygon.edges[i]);\n\t\n\t        // Calculate the center of the circle relative to the starting point of the edge.\n\t        point.copy(circlePos).sub(points[i]);\n\t\n\t        // If the distance between the center of the circle and the point\n\t        // is bigger than the radius, the polygon is definitely not fully in\n\t        // the circle.\n\t        if (response && point.len2() > radius2) {\n\t            response.aInB = false;\n\t        }\n\t\n\t        // Calculate which Voronoi region the center of the circle is in.\n\t        var region = _vornoiRegion(edge, point);\n\t\n\t        // If it's the left region:\n\t        if (region === LEFT_VORONOI_REGION) {\n\t            // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n\t            edge.copy(polygon.edges[prev]);\n\t\n\t            // Calculate the center of the circle relative the starting point of the previous edge\n\t            var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n\t\n\t            region = _vornoiRegion(edge, point2);\n\t\n\t            if (region === RIGHT_VORONOI_REGION) {\n\t                // It's in the region we want.  Check if the circle intersects the point.\n\t                var dist = point.len();\n\t\n\t                if (dist > radius) {\n\t                    // No intersection\n\t                    T_VECTORS.push(circlePos);\n\t                    T_VECTORS.push(edge);\n\t                    T_VECTORS.push(point);\n\t                    T_VECTORS.push(point2);\n\t\n\t                    return false;\n\t                } else if (response) {\n\t                    // It intersects, calculate the overlap.\n\t                    response.bInA = false;\n\t                    overlapN = point.normalize();\n\t                    overlap = radius - dist;\n\t                }\n\t            }\n\t\n\t            T_VECTORS.push(point2);\n\t\n\t            // If it's the right region:\n\t        } else if (region === RIGHT_VORONOI_REGION) {\n\t                // We need to make sure we're in the left region on the next edge\n\t                edge.copy(polygon.edges[next]);\n\t\n\t                // Calculate the center of the circle relative to the starting point of the next edge.\n\t                point.copy(circlePos).sub(points[next]);\n\t                region = _vornoiRegion(edge, point);\n\t                if (region === LEFT_VORONOI_REGION) {\n\t                    // It's in the region we want.  Check if the circle intersects the point.\n\t                    var dist = point.len();\n\t\n\t                    if (dist > radius) {\n\t                        // No intersection\n\t                        T_VECTORS.push(circlePos);\n\t                        T_VECTORS.push(edge);\n\t                        T_VECTORS.push(point);\n\t\n\t                        return false;\n\t                    } else if (response) {\n\t                        // It intersects, calculate the overlap.\n\t                        response.bInA = false;\n\t                        overlapN = point.normalize();\n\t                        overlap = radius - dist;\n\t                    }\n\t                }\n\t\n\t                // Otherwise, it's the middle region:\n\t            } else {\n\t                    // Need to check if the circle is intersecting the edge,\n\t                    // Change the edge into its \"edge normal\".\n\t                    var normal = edge.perp().normalize();\n\t\n\t                    // Find the perpendicular distance between the center of the\n\t                    // circle and the edge.\n\t                    var dist = point.dot(normal);\n\t                    var distAbs = Math.abs(dist);\n\t\n\t                    // If the circle is on the outside of the edge, there is no intersection.\n\t                    if (dist > 0 && distAbs > radius) {\n\t                        // No intersection\n\t                        T_VECTORS.push(circlePos);\n\t                        T_VECTORS.push(normal);\n\t                        T_VECTORS.push(point);\n\t\n\t                        return false;\n\t                    } else if (response) {\n\t                        // It intersects, calculate the overlap.\n\t                        overlapN = normal;\n\t                        overlap = radius - dist;\n\t\n\t                        // If the center of the circle is on the outside of the edge, or part of the\n\t                        // circle is on the outside, the circle is not fully inside the polygon.\n\t                        if (dist >= 0 || overlap < 2 * radius) {\n\t                            response.bInA = false;\n\t                        }\n\t                    }\n\t                }\n\t\n\t        // If this is the smallest overlap we've seen, keep it.\n\t        // (overlapN may be null if the circle was in the wrong Voronoi region).\n\t        if (overlapN && response && Math.abs(overlap) < Math.abs(response.overlap)) {\n\t            response.overlap = overlap;\n\t            response.overlapN.copy(overlapN);\n\t        }\n\t    }\n\t\n\t    // Calculate the final overlap vector - based on the smallest overlap.\n\t    if (response) {\n\t        response.a = polygon;\n\t        response.b = circle;\n\t        response.overlapV.copy(response.overlapN).scale(response.overlap);\n\t    }\n\t\n\t    T_VECTORS.push(circlePos);\n\t    T_VECTORS.push(edge);\n\t    T_VECTORS.push(point);\n\t\n\t    return true;\n\t};\n\t\n\t// Check if a circle and a polygon collide.\n\t//\n\t// **NOTE:** This is slightly less efficient than polygonCircle as it just\n\t// runs polygonCircle and reverses everything at the end.\n\t/**\n\t * @param {Circle} circle The circle.\n\t * @param {Polygon} polygon The polygon.\n\t * @param {Response=} response Response object (optional) that will be populated if\n\t *   they interset.\n\t * @return {boolean} true if they intersect, false if they don't.\n\t */\n\tvar _testCirclePolygon = function _testCirclePolygon(circle, polygon, response) {\n\t    // Test the polygon against the circle.\n\t    var result = testPolygonCircle(polygon, circle, response);\n\t\n\t    if (result && response) {\n\t        // Swap A and B in the response.\n\t        var a = response.a;\n\t        var aInB = response.aInB;\n\t\n\t        response.overlapN.negate();\n\t        response.overlapV.negate();\n\t        response.a = response.b;\n\t        response.b = a;\n\t        response.aInB = response.bInA;\n\t        response.bInA = aInB;\n\t    }\n\t\n\t    return result;\n\t};\n\t\n\t/**\n\t * Checks whether polygons collide.\n\t * @param {Polygon} a The first polygon.\n\t * @param {Polygon} b The second polygon.\n\t * @param {Response=} response Response object (optional) that will be populated if\n\t *   they interset.\n\t * @return {boolean} true if they intersect, false if they don't.\n\t */\n\tvar _testPolygonPolygon = function _testPolygonPolygon(a, b, response) {\n\t    var aPoints = a.computedVertices;\n\t    var aLen = aPoints.length;\n\t    var bPoints = b.computedVertices;\n\t    var bLen = bPoints.length;\n\t\n\t    // If any of the edge normals of A is a separating axis, no intersection.\n\t    for (var i = 0; i < aLen; i++) {\n\t        if (_isSeparatingAxis(a.position, b.position, aPoints, bPoints, a.normals[i], response)) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    // If any of the edge normals of B is a separating axis, no intersection.\n\t    for (var i = 0; i < bLen; i++) {\n\t        if (_isSeparatingAxis(a.position, b.position, aPoints, bPoints, b.normals[i], response)) {\n\t            return false;\n\t        }\n\t    }\n\t\n\t    // Since none of the edge normals of A or B are a separating axis, there is an intersection\n\t    // and we've already calculated the smallest overlap (in _isSeparatingAxis).  Calculate the\n\t    // final overlap vector.\n\t    if (response) {\n\t        response.a = a;\n\t        response.b = b;\n\t        response.overlapV.copy(response.overlapN).scale(response.overlap);\n\t    }\n\t\n\t    return true;\n\t};\n\t\n\tvar SAT = {\n\t    testPolygonPolygon: _testPolygonPolygon,\n\t    testCirclePolygon: _testCirclePolygon,\n\t    testPolygonCircle: _testPolygonCircle,\n\t    testCircleCircle: _testCircleCircle,\n\t    pointInPolygon: _pointInPolygon,\n\t    pointInCircle: _pointInCircle\n\t};\n\t\n\texports.default = SAT;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Vector = __webpack_require__(84);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tvar _Polygon = __webpack_require__(83);\n\t\n\tvar _Polygon2 = _interopRequireDefault(_Polygon);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// ## Box\n\t//\n\t// Represents an axis-aligned box, with a width and height.\n\t// Create a new box, with the specified position, width, and height. If no position\n\t// is given, the position will be `(0,0)`. If no width or height are given, they will\n\t// be set to `0`.\n\t/**\n\t * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\n\t * @param {?number=} w The width of the box.\n\t * @param {?number=} h The height of the box.\n\t * @constructor\n\t */\n\t\n\tvar Box = (function () {\n\t    function Box() {\n\t        var position = arguments.length <= 0 || arguments[0] === undefined ? new _Vector2.default() : arguments[0];\n\t        var width = arguments.length <= 1 || arguments[1] === undefined ? 0 : arguments[1];\n\t        var height = arguments.length <= 2 || arguments[2] === undefined ? 0 : arguments[2];\n\t\n\t        _classCallCheck(this, Box);\n\t\n\t        this.position = position;\n\t        this.width = width;\n\t        this.height = height;\n\t    }\n\t\n\t    /**\n\t     * Returns a polygon whose edges are the same as this box.\n\t     * @return {Polygon} A new Polygon that represents this box.\n\t     */\n\t\n\t    _createClass(Box, [{\n\t        key: 'toPolygon',\n\t        value: function toPolygon() {\n\t            var pos = this.position;\n\t            var w = this.width;\n\t            var h = this.height;\n\t\n\t            return new _Polygon2.default(new _Vector2.default(pos.x, pos.y), [new _Vector2.default(), new _Vector2.default(w, 0), new _Vector2.default(w, h), new _Vector2.default(0, h)]);\n\t        }\n\t    }]);\n\t\n\t    return Box;\n\t})();\n\t\n\texports.default = Box;\n\n/***/ },\n/* 96 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Vector = __webpack_require__(84);\n\t\n\tvar _Vector2 = _interopRequireDefault(_Vector);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// ## Response\n\t//\n\t// An object representing the result of an intersection. Contains:\n\t//  - The two objects participating in the intersection\n\t//  - The vector representing the minimum change necessary to extract the first object\n\t//    from the second one (as well as a unit vector in that direction and the magnitude\n\t//    of the overlap)\n\t//  - Whether the first object is entirely inside the second, and vice versa.\n\t/**\n\t * @constructor\n\t */\n\t\n\tvar Response = (function () {\n\t    function Response() {\n\t        _classCallCheck(this, Response);\n\t\n\t        this.a = null;\n\t        this.b = null;\n\t        this.overlapN = new _Vector2.default();\n\t        this.overlapV = new _Vector2.default();\n\t\n\t        this.clear();\n\t    }\n\t\n\t    /**\n\t     * Set some values of the response back to their defaults.  Call this between tests if\n\t     * you are going to reuse a single Response object for multiple intersection tests (recommented\n\t     * as it will avoid allcating extra memory)\n\t     *\n\t     * @return {Response} This for chaining\n\t     */\n\t\n\t    _createClass(Response, [{\n\t        key: 'clear',\n\t        value: function clear() {\n\t            this.aInB = true;\n\t            this.bInA = true;\n\t            this.overlap = Number.MAX_VALUE;\n\t\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Response;\n\t})();\n\t\n\texports.default = Response;\n\n/***/ },\n/* 97 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _ObjectPool = __webpack_require__(65);\n\t\n\tvar _ObjectPool2 = _interopRequireDefault(_ObjectPool);\n\t\n\tvar _Bullet = __webpack_require__(98);\n\t\n\tvar _Bullet2 = _interopRequireDefault(_Bullet);\n\t\n\tvar _SAT = __webpack_require__(94);\n\t\n\tvar _SAT2 = _interopRequireDefault(_SAT);\n\t\n\tvar _CollisionUtils = __webpack_require__(93);\n\t\n\tvar _CollisionUtils2 = _interopRequireDefault(_CollisionUtils);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar BulletSystem = (function () {\n\t    function BulletSystem(state) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\t\n\t        _classCallCheck(this, BulletSystem);\n\t\n\t        this.state = state;\n\t        this.soldiers = this.state.soldiers;\n\t        this.map = this.state.map;\n\t\n\t        this.bulletPool = new _ObjectPool2.default(function () {\n\t            var bullet = new _Bullet2.default(0, 0, 0, 4, 10);\n\t\n\t            return bullet;\n\t        }, 10, 10, options.poolLimit || 200);\n\t\n\t        // Bullets that died last turn\n\t        this.deadBullets = new Set();\n\t\n\t        // Bullets currently flying around\n\t        this.activeBullets = new Set();\n\t    }\n\t\n\t    _createClass(BulletSystem, [{\n\t        key: '_fireBullet',\n\t        value: function _fireBullet(firedBy) {\n\t            var bullet = this.bulletPool.get();\n\t\n\t            // If the pool is full, reused the first item.\n\t            if (!bullet) {\n\t                var firstBullet = this.activeBullets.values().next().value;\n\t\n\t                this.bulletPool.free(firstBullet);\n\t                bullet = this.bulletPool.get();\n\t            }\n\t\n\t            bullet.firedBy = firedBy;\n\t            bullet.firedByWeapon = firedBy.currentWeapon;\n\t            bullet.respawn(firedBy.position);\n\t            bullet.angle = firedBy.angle;\n\t            this.activeBullets.add(bullet);\n\t\n\t            return bullet;\n\t        }\n\t    }, {\n\t        key: 'killBullet',\n\t        value: function killBullet(bullet) {\n\t            bullet.kill();\n\t            this.bulletPool.free(bullet());\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            var _this = this;\n\t\n\t            var _iteratorNormalCompletion = true;\n\t            var _didIteratorError = false;\n\t            var _iteratorError = undefined;\n\t\n\t            try {\n\t                for (var _iterator = this.soldiers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t                    var soldier = _step.value;\n\t\n\t                    if (soldier.actions.firedBullet) {\n\t                        this._fireBullet(soldier);\n\t                    }\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError = true;\n\t                _iteratorError = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion && _iterator.return) {\n\t                        _iterator.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError) {\n\t                        throw _iteratorError;\n\t                    }\n\t                }\n\t            }\n\t\n\t            var _iteratorNormalCompletion2 = true;\n\t            var _didIteratorError2 = false;\n\t            var _iteratorError2 = undefined;\n\t\n\t            try {\n\t                var _loop = function _loop() {\n\t                    var bullet = _step2.value;\n\t\n\t                    bullet.update(delta);\n\t                    _CollisionUtils2.default.wallCollision(_this.map, bullet, function () {\n\t                        return bullet.kill();\n\t                    });\n\t\n\t                    if (bullet.dead) {\n\t                        _this.deadBullets.add(bullet);\n\t                        _this.activeBullets.delete(bullet);\n\t                        _this.bulletPool.free(bullet);\n\t                    } else {\n\t                        var _iteratorNormalCompletion3 = true;\n\t                        var _didIteratorError3 = false;\n\t                        var _iteratorError3 = undefined;\n\t\n\t                        try {\n\t                            for (var _iterator3 = _this.soldiers[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n\t                                var soldier = _step3.value;\n\t\n\t                                if (!soldier.dead) {\n\t                                    // Can't kill itself\n\t                                    if (bullet.firedBy !== soldier) {\n\t                                        // Check if on same level\n\t                                        if (bullet.position.z >= soldier.position.z && bullet.position.z < soldier.position.z + 50) {\n\t                                            if (_SAT2.default.pointInPolygon(bullet.point, soldier.body)) {\n\t                                                soldier.hitByBullet(bullet);\n\t                                                bullet.kill();\n\t                                                _this.bulletPool.free(bullet);\n\t                                            }\n\t                                        }\n\t                                    }\n\t                                }\n\t                            }\n\t                        } catch (err) {\n\t                            _didIteratorError3 = true;\n\t                            _iteratorError3 = err;\n\t                        } finally {\n\t                            try {\n\t                                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n\t                                    _iterator3.return();\n\t                                }\n\t                            } finally {\n\t                                if (_didIteratorError3) {\n\t                                    throw _iteratorError3;\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                };\n\t\n\t                for (var _iterator2 = this.activeBullets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t                    _loop();\n\t                }\n\t            } catch (err) {\n\t                _didIteratorError2 = true;\n\t                _iteratorError2 = err;\n\t            } finally {\n\t                try {\n\t                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t                        _iterator2.return();\n\t                    }\n\t                } finally {\n\t                    if (_didIteratorError2) {\n\t                        throw _iteratorError2;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'poolSize',\n\t        get: function get() {\n\t            return this.bulletPool.size;\n\t        }\n\t    }]);\n\t\n\t    return BulletSystem;\n\t})();\n\t\n\t;\n\t\n\texports.default = BulletSystem;\n\n/***/ },\n/* 98 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Entity2 = __webpack_require__(82);\n\t\n\tvar _Entity3 = _interopRequireDefault(_Entity2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar Bullet = (function (_Entity) {\n\t    _inherits(Bullet, _Entity);\n\t\n\t    function Bullet(x, y, z, width, height) {\n\t        _classCallCheck(this, Bullet);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Bullet).call(this, x, y, z, width, height));\n\t\n\t        _this.dead = true;\n\t        _this.firedBy = null;\n\t        _this.firedByWeapon = null;\n\t        _this.speed = 0.3;\n\t\n\t        _this.maxDistance = 500;\n\t        _this.traveledDistance = 0;\n\t\n\t        _this.options.isBullet = true;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Bullet, [{\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(Bullet.prototype), 'update', this).call(this, delta);\n\t\n\t            this.traveledDistance += this.speed * delta;\n\t\n\t            if (this.traveledDistance > this.maxDistance) {\n\t                this.dead = true;\n\t                this.traveledDistance = 0;\n\t            } else {\n\t                this.moveUp();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'damage',\n\t        get: function get() {\n\t            if (this.firedByWeapon) {\n\t                return this.firedByWeapon.damage;\n\t            }\n\t\n\t            return 0;\n\t        }\n\t    }]);\n\t\n\t    return Bullet;\n\t})(_Entity3.default);\n\t\n\texports.default = Bullet;\n\n/***/ },\n/* 99 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _State2 = __webpack_require__(57);\n\t\n\tvar _State3 = _interopRequireDefault(_State2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MenuState = (function (_State) {\n\t    _inherits(MenuState, _State);\n\t\n\t    function MenuState() {\n\t        _classCallCheck(this, MenuState);\n\t\n\t        var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(MenuState).call(this, 'menu'));\n\t\n\t        _this.menus = new Map();\n\t        _this._currentMenu = null;\n\t        _this.currentMenuName = null;\n\t        _this.options = new Map([['name', 'Unknown Soldier']]);\n\t        _this.gamePlaying = false;\n\t        _this.currentOptionsEdit = null;\n\t        return _this;\n\t    }\n\t\n\t    _createClass(MenuState, [{\n\t        key: 'addMenu',\n\t        value: function addMenu(name, menu) {\n\t            this.menus.set(name, menu);\n\t        }\n\t    }, {\n\t        key: 'changeOption',\n\t        value: function changeOption(optionName, value) {\n\t            this.options.set(optionName, value);\n\t        }\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            _get(Object.getPrototypeOf(MenuState.prototype), 'init', this).call(this);\n\t        }\n\t    }, {\n\t        key: 'update',\n\t        value: function update(delta) {\n\t            _get(Object.getPrototypeOf(MenuState.prototype), 'updateInputs', this).call(this, delta);\n\t\n\t            _get(Object.getPrototypeOf(MenuState.prototype), 'updateAudio', this).call(this, delta);\n\t        }\n\t    }, {\n\t        key: 'currentMenu',\n\t        set: function set(name) {\n\t            this._currentMenu = this.menus.get(name);\n\t            this.currentMenuName = name;\n\t        },\n\t        get: function get() {\n\t            return this._currentMenu;\n\t        }\n\t    }]);\n\t\n\t    return MenuState;\n\t})(_State3.default);\n\t\n\texports.default = MenuState;\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 174db2ced50da5703444\n **/","import three from 'three/three.js';\n\n// three.js must be set up as a global\nglobal.THREE = three;\n\nlet Game = require('./Game');\n\nGame.start();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/index.js\n **/","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '73' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n}\r\n\r\n//\r\n\r\nif ( self.performance === undefined ) {\r\n\r\n\tself.performance = {};\r\n\r\n}\r\n\r\nif ( self.performance.now === undefined ) {\r\n\r\n\t( function () {\r\n\r\n\t\tvar start = Date.now();\r\n\r\n\t\tself.performance.now = function () {\r\n\r\n\t\t\treturn Date.now() - start;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n}\r\n\r\n//\r\n\r\nif ( Number.EPSILON === undefined ) {\r\n\r\n\tNumber.EPSILON = Math.pow( 2, -52 );\r\n\r\n}\r\n\r\n//\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n// Loop styles for AnimationAction\r\n\r\nTHREE.LoopOnce = 2200;\r\nTHREE.LoopRepeat = 2201;\r\nTHREE.LoopPingPong = 2202;\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.fromArray( arguments );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tget width() { return this.x },\r\n\tset width( value ) { this.x = value },\r\n\r\n\tget height() { return this.y },\r\n\tset height( value ) { this.y = value },\r\n\r\n\t//\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t} else {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateAround: function ( center, angle ) {\r\n\r\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tvar x = this.x - center.x;\r\n\t\tvar y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t} else {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\tthis.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\t} else {\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 0;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclamp: function ( value, min, max ) {\r\n\r\n\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Channels.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Channels = function () {\r\n\r\n\tthis.mask = 1;\r\n\r\n};\r\n\r\nTHREE.Channels.prototype = {\r\n\r\n\tconstructor: THREE.Channels,\r\n\r\n\tset: function ( channel ) {\r\n\r\n\t\tthis.mask = 1 << channel;\r\n\r\n\t},\r\n\r\n\tenable: function ( channel ) {\r\n\r\n\t\tthis.mask |= 1 << channel;\r\n\r\n\t},\r\n\r\n\ttoggle: function ( channel ) {\r\n\r\n\t\tthis.mask ^= 1 << channel;\r\n\r\n\t},\r\n\r\n\tdisable: function ( channel ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << channel );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://clara.io/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.channels = new THREE.Channels();\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tfunction onRotationChange() {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t}\r\n\r\n\tfunction onQuaternionChange() {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t}\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tvar object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.geometry !== undefined ) {\r\n\r\n\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.geometry = this.geometry.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.material = this.material.uuid;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction addFace( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\tvar faces = this.faces;\r\n\t\tvar length = faces.length;\r\n\r\n\t\t// tag faces\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t}\r\n\r\n\t\t// sort faces\r\n\r\n\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t}\r\n\r\n\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t// sort uvs\r\n\r\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\tvar newUvs1, newUvs2;\r\n\r\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\t\tvar attribute = this.attributes.uv;\r\n\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/animation/AnimationAction.js\r\n\r\n/**\r\n *\r\n * A clip that has been explicitly scheduled.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationAction = function ( clip, startTime, timeScale, weight, loop ) {\r\n\r\n\tif ( clip === undefined ) throw new Error( 'clip is null' );\r\n\tthis.clip = clip;\r\n\tthis.localRoot = null;\r\n\tthis.startTime = startTime || 0;\r\n\tthis.timeScale = timeScale || 1;\r\n\tthis.weight = weight || 1;\r\n\tthis.loop = loop || THREE.LoopRepeat;\r\n\tthis.loopCount = 0;\r\n\tthis.enabled = true;\t// allow for easy disabling of the action.\r\n\r\n\tthis.actionTime = - this.startTime;\r\n\tthis.clipTime = 0;\r\n\r\n\tthis.propertyBindings = [];\r\n};\r\n\r\n/*\r\nTHREE.LoopOnce = 2200;\r\nTHREE.LoopRepeat = 2201;\r\nTHREE.LoopPingPing = 2202;\r\n*/\r\n\r\nTHREE.AnimationAction.prototype = {\r\n\r\n\tconstructor: THREE.AnimationAction,\r\n\r\n\tsetLocalRoot: function( localRoot ) {\r\n\r\n\t\tthis.localRoot = localRoot;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateTime: function( clipDeltaTime ) {\r\n\r\n\t\tvar previousClipTime = this.clipTime;\r\n   \t\tvar previousLoopCount = this.loopCount;\r\n   \t\tvar previousActionTime = this.actionTime;\r\n\r\n\t\tvar duration = this.clip.duration;\r\n\r\n\t\tthis.actionTime = this.actionTime + clipDeltaTime;\r\n\r\n\t\tif ( this.loop === THREE.LoopOnce ) {\r\n\r\n\t\t\tthis.loopCount = 0;\r\n\t\t\tthis.clipTime = Math.min( Math.max( this.actionTime, 0 ), duration );\r\n\r\n\t\t\t// if time is changed since last time, see if we have hit a start/end limit\r\n\t\t\tif ( this.clipTime !== previousClipTime ) {\r\n\r\n\t\t\t\tif ( this.clipTime === duration ) {\r\n\r\n\t\t\t\t\tthis.mixer.dispatchEvent( { type: 'finished', action: this, direction: 1 } );\r\n\r\n\t\t\t\t} else if ( this.clipTime === 0 ) {\r\n\r\n\t\t\t\t\tthis.mixer.dispatchEvent( { type: 'finished', action: this, direction: -1 } );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn this.clipTime;\r\n\r\n\t\t}\r\n\r\n\t\tthis.loopCount = Math.floor( this.actionTime / duration );\r\n\r\n\t\tvar newClipTime = this.actionTime - this.loopCount * duration;\r\n\t\tnewClipTime = newClipTime % duration;\r\n\r\n\t\t// if we are ping pong looping, ensure that we go backwards when appropriate\r\n\t\tif ( this.loop == THREE.LoopPingPong ) {\r\n\r\n\t\t\tif ( Math.abs( this.loopCount % 2 ) === 1 ) {\r\n\r\n\t\t\t\tnewClipTime = duration - newClipTime;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.clipTime = newClipTime;\r\n\r\n\t\tif ( this.loopCount !== previousLoopCount ) {\r\n\r\n   \t\t\tthis.mixer.dispatchEvent( { type: 'loop', action: this, loopDelta: ( this.loopCount - this.loopCount ) } );\r\n\r\n   \t\t}\r\n\r\n\t   \treturn this.clipTime;\r\n\r\n\t},\r\n\r\n\tsyncWith: function( action ) {\r\n\r\n\t\tthis.actionTime = action.actionTime;\r\n\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\twarpToDuration: function( duration ) {\r\n\r\n\t\tthis.timeScale = this.clip.duration / duration;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tinit: function( time ) {\r\n\r\n\t\tthis.clipTime = time - this.startTime;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function( clipDeltaTime ) {\r\n\r\n\t\tthis.updateTime( clipDeltaTime );\r\n\r\n\t\tvar clipResults = this.clip.getAt( this.clipTime );\r\n\r\n\t\treturn clipResults;\r\n\r\n\t},\r\n\r\n\tgetTimeScaleAt: function( time ) {\r\n\r\n\t\tif ( this.timeScale.getAt ) {\r\n\t\t\t// pass in time, not clip time, allows for fadein/fadeout across multiple loops of the clip\r\n\t\t\treturn this.timeScale.getAt( time );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.timeScale;\r\n\r\n\t},\r\n\r\n\tgetWeightAt: function( time ) {\r\n\r\n\t\tif ( this.weight.getAt ) {\r\n\t\t\t// pass in time, not clip time, allows for fadein/fadeout across multiple loops of the clip\r\n\t\t\treturn this.weight.getAt( time );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/AnimationClip.js\r\n\r\n/**\r\n *\r\n * Reusable set of Tracks that represent an animation.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationClip = function ( name, duration, tracks ) {\r\n\r\n\tthis.name = name;\r\n\tthis.tracks = tracks;\r\n\tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\r\n\t// this means it should figure out its duration by scanning the tracks\r\n\tif ( this.duration < 0 ) {\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\t\t\tvar track = this.tracks[i];\r\n\t\t\tthis.duration = Math.max( track.keys[ track.keys.length - 1 ].time );\r\n\t\t}\r\n\t}\r\n\r\n\t// maybe only do these on demand, as doing them here could potentially slow down loading\r\n\t// but leaving these here during development as this ensures a lot of testing of these functions\r\n\tthis.trim();\r\n\tthis.optimize();\r\n\r\n\tthis.results = [];\r\n\r\n};\r\n\r\nTHREE.AnimationClip.prototype = {\r\n\r\n\tconstructor: THREE.AnimationClip,\r\n\r\n\tgetAt: function( clipTime ) {\r\n\r\n\t\tclipTime = Math.max( 0, Math.min( clipTime, this.duration ) );\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\tthis.results[ i ] = track.getAt( clipTime );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.results;\r\n\t},\r\n\r\n\ttrim: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\toptimize: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.AnimationClip.CreateFromMorphTargetSequence = function( name, morphTargetSequence, fps ) {\r\n\r\n\r\n\tvar numMorphTargets = morphTargetSequence.length;\r\n\tvar tracks = [];\r\n\r\n\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\tkeys.push( { time: ( i + numMorphTargets - 1 ) % numMorphTargets, value: 0 } );\r\n\t\tkeys.push( { time: i, value: 1 } );\r\n\t\tkeys.push( { time: ( i + 1 ) % numMorphTargets, value: 0 } );\r\n\r\n\t\tkeys.sort( THREE.KeyframeTrack.keyComparer );\r\n\r\n\t\t// if there is a key at the first frame, duplicate it as the last frame as well for perfect loop.\r\n\t\tif ( keys[0].time === 0 ) {\r\n\t\t\tkeys.push( {\r\n\t\t\t\ttime: numMorphTargets,\r\n\t\t\t\tvalue: keys[0].value\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\ttracks.push( new THREE.NumberKeyframeTrack( '.morphTargetInfluences[' + morphTargetSequence[i].name + ']', keys ).scale( 1.0 / fps ) );\r\n\t}\r\n\r\n\treturn new THREE.AnimationClip( name, -1, tracks );\r\n\r\n};\r\n\r\nTHREE.AnimationClip.findByName = function( clipArray, name ) {\r\n\r\n\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\tif ( clipArray[i].name === name ) {\r\n\r\n\t\t\treturn clipArray[i];\r\n\r\n\t\t}\r\n\t}\r\n\r\n\treturn null;\r\n\r\n};\r\n\r\nTHREE.AnimationClip.CreateClipsFromMorphTargetSequences = function( morphTargets, fps ) {\r\n\r\n\tvar animationToMorphTargets = {};\r\n\r\n\t// tested with https://regex101.com/ on trick sequences such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t// sort morph target names into animation groups based patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morphTarget = morphTargets[ i ];\r\n\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\tif ( ! animationMorphTargets ) {\r\n\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\t\t\t}\r\n\r\n\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar clips = [];\r\n\r\n\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps ) );\r\n\t}\r\n\r\n\treturn clips;\r\n\r\n};\r\n\r\n// parse the standard JSON format for clips\r\nTHREE.AnimationClip.parse = function( json ) {\r\n\r\n\tvar tracks = [];\r\n\r\n\tfor ( var i = 0; i < json.tracks.length; i ++ ) {\r\n\r\n\t\ttracks.push( THREE.KeyframeTrack.parse( json.tracks[i] ).scale( 1.0 / json.fps ) );\r\n\r\n\t}\r\n\r\n\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\r\n\r\n};\r\n\r\n\r\n// parse the animation.hierarchy format\r\nTHREE.AnimationClip.parseAnimation = function( animation, bones, nodeName ) {\r\n\r\n\tif ( ! animation ) {\r\n\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n\t\treturn null;\r\n\t}\r\n\r\n\tvar convertTrack = function( trackName, animationKeys, propertyName, trackType, animationKeyToValueFunc ) {\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\tvar animationKey = animationKeys[k];\r\n\r\n\t\t\tif ( animationKey[propertyName] !== undefined ) {\r\n\r\n\t\t\t\tkeys.push( { time: animationKey.time, value: animationKeyToValueFunc( animationKey ) } );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// only return track if there are actually keys.\r\n\t\tif ( keys.length > 0 ) {\r\n\r\n\t\t\treturn new trackType( trackName, keys );\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t};\r\n\r\n\tvar tracks = [];\r\n\r\n\tvar clipName = animation.name || 'default';\r\n\tvar duration = animation.length || -1; // automatic length determination in AnimationClip.\r\n\tvar fps = animation.fps || 30;\r\n\r\n\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t// skip empty tracks\r\n\t\tif ( ! animationKeys || animationKeys.length == 0 ) {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\t// process morph targets in a way exactly compatible with AnimationHandler.init( animation )\r\n\t\tif ( animationKeys[0].morphTargets ) {\r\n\r\n\t\t\t// figure out all morph targets used in this track\r\n\t\t\tvar morphTargetNames = {};\r\n\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// create a track for each morph target with all zero morphTargetInfluences except for the keys in which the morphTarget is named.\r\n\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\tvar keys = [];\r\n\r\n\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\r\n\t\t\t\t\tkeys.push( {\r\n\t\t\t\t\t\t\ttime: animationKey.time,\r\n\t\t\t\t\t\t\tvalue: (( animationKey.morphTarget === morphTargetName ) ? 1 : 0 )\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack( nodeName + '.morphTargetInfluence[' + morphTargetName + ']', keys ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar boneName = nodeName + '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t// track contains positions...\r\n\t\t\tvar positionTrack = convertTrack( boneName + '.position', animationKeys, 'pos', THREE.VectorKeyframeTrack, function( animationKey ) {\r\n\t\t\t\t\treturn new THREE.Vector3().fromArray( animationKey.pos )\r\n\t\t\t\t} );\r\n\r\n\t\t\tif ( positionTrack ) tracks.push( positionTrack );\r\n\r\n\t\t\t// track contains quaternions...\r\n\t\t\tvar quaternionTrack = convertTrack( boneName + '.quaternion', animationKeys, 'rot', THREE.QuaternionKeyframeTrack, function( animationKey ) {\r\n\t\t\t\t\tif ( animationKey.rot.slerp ) {\r\n\t\t\t\t\t\treturn animationKey.rot.clone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn new THREE.Quaternion().fromArray( animationKey.rot );\r\n\t\t\t\t\t}\r\n\t\t\t\t} );\r\n\r\n\t\t\tif ( quaternionTrack ) tracks.push( quaternionTrack );\r\n\r\n\t\t\t// track contains quaternions...\r\n\t\t\tvar scaleTrack = convertTrack( boneName + '.scale', animationKeys, 'scl', THREE.VectorKeyframeTrack, function( animationKey ) {\r\n\t\t\t\t\treturn new THREE.Vector3().fromArray( animationKey.scl )\r\n\t\t\t\t} );\r\n\r\n\t\t\tif ( scaleTrack ) tracks.push( scaleTrack );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tif ( tracks.length === 0 ) {\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\r\n\r\n\treturn clip;\r\n\r\n};\r\n\r\n// File:src/animation/AnimationMixer.js\r\n\r\n/**\r\n *\r\n * Mixes together the AnimationClips scheduled by AnimationActions and applies them to the root and subtree\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationMixer = function( root ) {\r\n\r\n\tthis.root = root;\r\n\tthis.time = 0;\r\n\tthis.timeScale = 1.0;\r\n\tthis.actions = [];\r\n\tthis.propertyBindingMap = {};\r\n\r\n};\r\n\r\nTHREE.AnimationMixer.prototype = {\r\n\r\n\tconstructor: THREE.AnimationMixer,\r\n\r\n\taddAction: function( action ) {\r\n\r\n\t\t// TODO: check for duplicate action names?  Or provide each action with a UUID?\r\n\r\n\t\tthis.actions.push( action );\r\n\t\taction.init( this.time );\r\n\t\taction.mixer = this;\r\n\r\n\t\tvar tracks = action.clip.tracks;\r\n\r\n\t\tvar root = action.localRoot || this.root;\r\n\r\n\t\tfor ( var i = 0; i < tracks.length; i ++ ) {\r\n\r\n\t\t\tvar track = tracks[ i ];\r\n\r\n\t\t\tvar propertyBindingKey = root.uuid + '-' + track.name;\r\n\t\t\tvar propertyBinding = this.propertyBindingMap[ propertyBindingKey ];\r\n\r\n\t\t\tif ( propertyBinding === undefined ) {\r\n\r\n\t\t\t\tpropertyBinding = new THREE.PropertyBinding( root, track.name );\r\n\t\t\t\tthis.propertyBindingMap[ propertyBindingKey ] = propertyBinding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// push in the same order as the tracks.\r\n\t\t\taction.propertyBindings.push( propertyBinding );\r\n\r\n\t\t\t// track usages of shared property bindings, because if we leave too many around, the mixer can get slow\r\n\t\t\tpropertyBinding.referenceCount += 1;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tremoveAllActions: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.actions.length; i ++ ) {\r\n\r\n\t\t\tthis.actions[i].mixer = null;\r\n\r\n\t\t}\r\n\r\n\t\t// unbind all property bindings\r\n\t\tfor ( var properyBindingKey in this.propertyBindingMap ) {\r\n\r\n\t\t\tthis.propertyBindingMap[ properyBindingKey ].unbind();\r\n\r\n\t\t}\r\n\r\n\t\tthis.actions = [];\r\n\t\tthis.propertyBindingMap = {};\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremoveAction: function( action ) {\r\n\r\n\t\tvar index = this.actions.indexOf( action );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.actions.splice( index, 1 );\r\n\t\t\taction.mixer = null;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// remove unused property bindings because if we leave them around the mixer can get slow\r\n\t\tvar root = action.localRoot || this.root;\r\n\t\tvar tracks = action.clip.tracks;\r\n\r\n\t\tfor ( var i = 0; i < tracks.length; i ++ ) {\r\n\r\n\t\t\tvar track = tracks[ i ];\r\n\r\n\t\t\tvar propertyBindingKey = root.uuid + '-' + track.name;\r\n\t\t\tvar propertyBinding = this.propertyBindingMap[ propertyBindingKey ];\r\n\r\n\t\t\tpropertyBinding.referenceCount -= 1;\r\n\r\n\t\t\tif ( propertyBinding.referenceCount <= 0 ) {\r\n\r\n\t\t\t\tpropertyBinding.unbind();\r\n\r\n\t\t\t\tdelete this.propertyBindingMap[ propertyBindingKey ];\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// can be optimized if needed\r\n\tfindActionByName: function( name ) {\r\n\r\n\t\tfor ( var i = 0; i < this.actions.length; i ++ ) {\r\n\r\n\t\t\tif ( this.actions[i].name === name ) return this.actions[i];\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\tplay: function( action, optionalFadeInDuration ) {\r\n\r\n\t\taction.startTime = this.time;\r\n\t\tthis.addAction( action );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfadeOut: function( action, duration ) {\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\tkeys.push( { time: this.time, value: 1 } );\r\n\t\tkeys.push( { time: this.time + duration, value: 0 } );\r\n\r\n\t\taction.weight = new THREE.NumberKeyframeTrack( \"weight\", keys );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfadeIn: function( action, duration ) {\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\tkeys.push( { time: this.time, value: 0 } );\r\n\t\tkeys.push( { time: this.time + duration, value: 1 } );\r\n\r\n\t\taction.weight = new THREE.NumberKeyframeTrack( \"weight\", keys );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\twarp: function( action, startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\tvar keys = [];\r\n\r\n\t\tkeys.push( { time: this.time, value: startTimeScale } );\r\n\t\tkeys.push( { time: this.time + duration, value: endTimeScale } );\r\n\r\n\t\taction.timeScale = new THREE.NumberKeyframeTrack( \"timeScale\", keys );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossFade: function( fadeOutAction, fadeInAction, duration, warp ) {\r\n\r\n\t\tthis.fadeOut( fadeOutAction, duration );\r\n\t\tthis.fadeIn( fadeInAction, duration );\r\n\r\n\t\tif ( warp ) {\r\n\r\n\t\t\tvar startEndRatio = fadeOutAction.clip.duration / fadeInAction.clip.duration;\r\n\t\t\tvar endStartRatio = 1.0 / startEndRatio;\r\n\r\n\t\t\tthis.warp( fadeOutAction, 1.0, startEndRatio, duration );\r\n\t\t\tthis.warp( fadeInAction, endStartRatio, 1.0, duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function( deltaTime ) {\r\n\r\n\t\tvar mixerDeltaTime = deltaTime * this.timeScale;\r\n\t\tthis.time += mixerDeltaTime;\r\n\r\n\t\tfor ( var i = 0; i < this.actions.length; i ++ ) {\r\n\r\n\t\t\tvar action = this.actions[i];\r\n\r\n\t\t\tvar weight = action.getWeightAt( this.time );\r\n\r\n\t\t\tvar actionTimeScale = action.getTimeScaleAt( this.time );\r\n\t\t\tvar actionDeltaTime = mixerDeltaTime * actionTimeScale;\r\n\r\n\t\t\tvar actionResults = action.update( actionDeltaTime );\r\n\r\n\t\t\tif ( action.weight <= 0 || ! action.enabled ) continue;\r\n\r\n\t\t\tfor ( var j = 0; j < actionResults.length; j ++ ) {\r\n\r\n\t\t\t\tvar name = action.clip.tracks[j].name;\r\n\r\n\t\t\t\taction.propertyBindings[ j ].accumulate( actionResults[j], weight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// apply to nodes\r\n\t\tfor ( var propertyBindingKey in this.propertyBindingMap ) {\r\n\r\n\t\t\tthis.propertyBindingMap[ propertyBindingKey ].apply();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.AnimationMixer.prototype );\r\n\r\n// File:src/animation/AnimationUtils.js\r\n\r\n/**\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationUtils = {\r\n\r\n\tgetEqualsFunc: function( exemplarValue ) {\r\n\r\n\t\tif ( exemplarValue.equals ) {\r\n\t\t\treturn function equals_object( a, b ) {\r\n\t\t\t\treturn a.equals( b );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn function equals_primitive( a, b ) {\r\n\t\t\treturn ( a === b );\r\n\t\t};\r\n\r\n\t},\r\n\r\n\tclone: function( exemplarValue ) {\r\n\r\n\t\tvar typeName = typeof exemplarValue;\r\n\t\tif ( typeName === \"object\" ) {\r\n\t\t\tif ( exemplarValue.clone ) {\r\n\t\t\t\treturn exemplarValue.clone();\r\n\t\t\t}\r\n\t\t\tconsole.error( \"can not figure out how to copy exemplarValue\", exemplarValue );\r\n\t\t}\r\n\r\n\t\treturn exemplarValue;\r\n\r\n\t},\r\n\r\n\tlerp: function( a, b, alpha, interTrack ) {\r\n\r\n\t\tvar lerpFunc = THREE.AnimationUtils.getLerpFunc( a, interTrack );\r\n\r\n\t\treturn lerpFunc( a, b, alpha );\r\n\r\n\t},\r\n\r\n\tlerp_object: function( a, b, alpha ) {\r\n\t\treturn a.lerp( b, alpha );\r\n\t},\r\n\r\n\tslerp_object: function( a, b, alpha ) {\r\n\t\treturn a.slerp( b, alpha );\r\n\t},\r\n\r\n\tlerp_number: function( a, b, alpha ) {\r\n\t\treturn a * ( 1 - alpha ) + b * alpha;\r\n\t},\r\n\r\n\tlerp_boolean: function( a, b, alpha ) {\r\n\t\treturn ( alpha < 0.5 ) ? a : b;\r\n\t},\r\n\r\n\tlerp_boolean_immediate: function( a, b, alpha ) {\r\n\t\treturn a;\r\n\t},\r\n\r\n\tlerp_string: function( a, b, alpha ) {\r\n\t\treturn ( alpha < 0.5 ) ? a : b;\r\n\t},\r\n\r\n\tlerp_string_immediate: function( a, b, alpha ) {\r\n \t\treturn a;\r\n \t},\r\n\r\n\t// NOTE: this is an accumulator function that modifies the first argument (e.g. a).\tThis is to minimize memory alocations.\r\n\tgetLerpFunc: function( exemplarValue, interTrack ) {\r\n\r\n\t\tif ( exemplarValue === undefined || exemplarValue === null ) throw new Error( \"examplarValue is null\" );\r\n\r\n\t\tvar typeName = typeof exemplarValue;\r\n\r\n\t\tswitch( typeName ) {\r\n\r\n\t\t\tcase \"object\":\r\n\t\t\t\tif ( exemplarValue.lerp ) {\r\n\t\t\t\t\treturn THREE.AnimationUtils.lerp_object;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( exemplarValue.slerp ) {\r\n\t\t\t\t\treturn THREE.AnimationUtils.slerp_object;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase \"number\":\r\n\t\t\t\treturn THREE.AnimationUtils.lerp_number;\r\n\r\n\t\t\tcase \"boolean\":\r\n\t\t\t\tif ( interTrack ) {\r\n\t\t\t\t\treturn THREE.AnimationUtils.lerp_boolean;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn THREE.AnimationUtils.lerp_boolean_immediate;\r\n\t\t\t\t}\r\n\r\n\t\t\tcase \"string\":\r\n\t\t\t\tif ( interTrack ) {\r\n\t\t\t\t\treturn THREE.AnimationUtils.lerp_string;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn THREE.AnimationUtils.lerp_string_immediate;\r\n\t\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/KeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that returns a keyframe interpolated value, currently linearly interpolated\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.KeyframeTrack = function ( name, keys ) {\r\n\r\n\tif ( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\tif ( keys === undefined || keys.length === 0 ) throw new Error( \"no keys in track named \" + name );\r\n\r\n\tthis.name = name;\r\n\tthis.keys = keys;\t// time in seconds, value as value\r\n\r\n\t// the index of the last result, used as a starting point for local search.\r\n\tthis.lastIndex = 0;\r\n\r\n\tthis.validate();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.KeyframeTrack.prototype = {\r\n\r\n\tconstructor: THREE.KeyframeTrack,\r\n\r\n\tgetAt: function( time ) {\r\n\r\n\r\n\t\t// this can not go higher than this.keys.length.\r\n\t\twhile( ( this.lastIndex < this.keys.length ) && ( time >= this.keys[this.lastIndex].time ) ) {\r\n\t\t\tthis.lastIndex ++;\r\n\t\t};\r\n\r\n\t\t// this can not go lower than 0.\r\n\t\twhile( ( this.lastIndex > 0 ) && ( time < this.keys[this.lastIndex - 1].time ) ) {\r\n\t\t\tthis.lastIndex --;\r\n\t\t}\r\n\r\n\t\tif ( this.lastIndex >= this.keys.length ) {\r\n\r\n\t\t\tthis.setResult( this.keys[ this.keys.length - 1 ].value );\r\n\r\n\t\t\treturn this.result;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.lastIndex === 0 ) {\r\n\r\n\t\t\tthis.setResult( this.keys[ 0 ].value );\r\n\r\n\t\t\treturn this.result;\r\n\r\n\t\t}\r\n\r\n\t\tvar prevKey = this.keys[ this.lastIndex - 1 ];\r\n\t\tthis.setResult( prevKey.value );\r\n\r\n\t\t// if true, means that prev/current keys are identical, thus no interpolation required.\r\n\t\tif ( prevKey.constantToNext ) {\r\n\r\n\t\t\treturn this.result;\r\n\r\n\t\t}\r\n\r\n\t\t// linear interpolation to start with\r\n\t\tvar currentKey = this.keys[ this.lastIndex ];\r\n\t\tvar alpha = ( time - prevKey.time ) / ( currentKey.time - prevKey.time );\r\n\t\tthis.result = this.lerpValues( this.result, currentKey.value, alpha );\r\n\r\n\t\treturn this.result;\r\n\r\n\t},\r\n\r\n\t// move all keyframes either forwards or backwards in time\r\n\tshift: function( timeOffset ) {\r\n\r\n\t\tif ( timeOffset !== 0.0 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\t\t\tthis.keys[i].time += timeOffset;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\tscale: function( timeScale ) {\r\n\r\n\t\tif ( timeScale !== 1.0 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\t\t\t\tthis.keys[i].time *= timeScale;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n \ttrim: function( startTime, endTime ) {\r\n\r\n\t\tvar firstKeysToRemove = 0;\r\n\t\tfor ( var i = 1; i < this.keys.length; i ++ ) {\r\n\t\t\tif ( this.keys[i] <= startTime ) {\r\n\t\t\t\tfirstKeysToRemove ++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar lastKeysToRemove = 0;\r\n\t\tfor ( var i = this.keys.length - 2; i > 0; i ++ ) {\r\n\t\t\tif ( this.keys[i] >= endTime ) {\r\n\t\t\t\tlastKeysToRemove ++;\r\n\t\t\t} else {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// remove last keys first because it doesn't affect the position of the first keys (the otherway around doesn't work as easily)\r\n\t\tif ( ( firstKeysToRemove + lastKeysToRemove ) > 0 ) {\r\n\t\t\tthis.keys = this.keys.splice( firstKeysToRemove, this.keys.length - lastKeysToRemove - firstKeysToRemove );;\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/* NOTE: This is commented out because we really shouldn't have to handle unsorted key lists\r\n\t         Tracks with out of order keys should be considered to be invalid.  - bhouston\r\n\tsort: function() {\r\n\r\n\t\tthis.keys.sort( THREE.KeyframeTrack.keyComparer );\r\n\r\n\t\treturn this;\r\n\r\n\t},*/\r\n\r\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\t// One could eventually ensure that all key.values in a track are all of the same type (otherwise interpolation makes no sense.)\r\n\tvalidate: function() {\r\n\r\n\t\tvar prevKey = null;\r\n\r\n\t\tif ( this.keys.length === 0 ) {\r\n\t\t\tconsole.error( \"  track is empty, no keys\", this );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\t\tvar currKey = this.keys[i];\r\n\r\n\t\t\tif ( ! currKey ) {\r\n\t\t\t\tconsole.error( \"  key is null in track\", this, i );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( ( typeof currKey.time ) !== 'number' || isNaN( currKey.time ) ) {\r\n\t\t\t\tconsole.error( \"  key.time is not a valid number\", this, i, currKey );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( currKey.value === undefined || currKey.value === null) {\r\n\t\t\t\tconsole.error( \"  key.value is null in track\", this, i, currKey );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( prevKey && prevKey.time > currKey.time ) {\r\n\t\t\t\tconsole.error( \"  key.time is less than previous key time, out of order keys\", this, i, currKey, prevKey );\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tprevKey = currKey;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// currently only removes equivalent sequential keys (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0), which are common in morph target animations\r\n\toptimize: function() {\r\n\r\n\t\tvar newKeys = [];\r\n\t\tvar prevKey = this.keys[0];\r\n\t\tnewKeys.push( prevKey );\r\n\r\n\t\tvar equalsFunc = THREE.AnimationUtils.getEqualsFunc( prevKey.value );\r\n\r\n\t\tfor ( var i = 1; i < this.keys.length - 1; i ++ ) {\r\n\t\t\tvar currKey = this.keys[i];\r\n\t\t\tvar nextKey = this.keys[i+1];\r\n\r\n\t\t\t// if prevKey & currKey are the same time, remove currKey.  If you want immediate adjacent keys, use an epsilon offset\r\n\t\t\t// it is not possible to have two keys at the same time as we sort them.  The sort is not stable on keys with the same time.\r\n\t\t\tif ( ( prevKey.time === currKey.time ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// remove completely unnecessary keyframes that are the same as their prev and next keys\r\n\t\t\tif ( this.compareValues( prevKey.value, currKey.value ) && this.compareValues( currKey.value, nextKey.value ) ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// determine if interpolation is required\r\n\t\t\tprevKey.constantToNext = this.compareValues( prevKey.value, currKey.value );\r\n\r\n\t\t\tnewKeys.push( currKey );\r\n\t\t\tprevKey = currKey;\r\n\t\t}\r\n\t\tnewKeys.push( this.keys[ this.keys.length - 1 ] );\r\n\r\n\t\tthis.keys = newKeys;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyframeTrack.keyComparer = function keyComparator(key0, key1) {\r\n\treturn key0.time - key1.time;\r\n};\r\n\r\nTHREE.KeyframeTrack.parse = function( json ) {\r\n\r\n\tif ( json.type === undefined ) throw new Error( \"track type undefined, can not parse\" );\r\n\r\n\tvar trackType = THREE.KeyframeTrack.GetTrackTypeForTypeName( json.type );\r\n\r\n\treturn trackType.parse( json );\r\n\r\n};\r\n\r\nTHREE.KeyframeTrack.GetTrackTypeForTypeName = function( typeName ) {\r\n\tswitch( typeName.toLowerCase() ) {\r\n\t \tcase \"vector\":\r\n\t \tcase \"vector2\":\r\n\t \tcase \"vector3\":\r\n\t \tcase \"vector4\":\r\n\t\t\treturn THREE.VectorKeyframeTrack;\r\n\r\n\t \tcase \"quaternion\":\r\n\t\t\treturn THREE.QuaternionKeyframeTrack;\r\n\r\n\t \tcase \"integer\":\r\n\t \tcase \"scalar\":\r\n\t \tcase \"double\":\r\n\t \tcase \"float\":\r\n\t \tcase \"number\":\r\n\t\t\treturn THREE.NumberKeyframeTrack;\r\n\r\n\t \tcase \"bool\":\r\n\t \tcase \"boolean\":\r\n\t\t\treturn THREE.BooleanKeyframeTrack;\r\n\r\n\t \tcase \"string\":\r\n\t \t\treturn THREE.StringKeyframeTrack;\r\n\t};\r\n\r\n\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n};\r\n\r\n// File:src/animation/PropertyBinding.js\r\n\r\n/**\r\n *\r\n * A track bound to a real value in the scene graph.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.PropertyBinding = function ( rootNode, trackName ) {\r\n\r\n\tthis.rootNode = rootNode;\r\n\tthis.trackName = trackName;\r\n\tthis.referenceCount = 0;\r\n\tthis.originalValue = null; // the value of the property before it was controlled by this binding\r\n\r\n\tvar parseResults = THREE.PropertyBinding.parseTrackName( trackName );\r\n\r\n\tthis.directoryName = parseResults.directoryName;\r\n\tthis.nodeName = parseResults.nodeName;\r\n\tthis.objectName = parseResults.objectName;\r\n\tthis.objectIndex = parseResults.objectIndex;\r\n\tthis.propertyName = parseResults.propertyName;\r\n\tthis.propertyIndex = parseResults.propertyIndex;\r\n\r\n\tthis.node = THREE.PropertyBinding.findNode( rootNode, this.nodeName ) || rootNode;\r\n\r\n\tthis.cumulativeValue = null;\r\n\tthis.cumulativeWeight = 0;\r\n};\r\n\r\nTHREE.PropertyBinding.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding,\r\n\r\n\treset: function() {\r\n\r\n\t\tthis.cumulativeValue = null;\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t},\r\n\r\n\taccumulate: function( value, weight ) {\r\n\r\n\t\tif ( ! this.isBound ) this.bind();\r\n\r\n\t\tif ( this.cumulativeWeight === 0 ) {\r\n\r\n\t\t\tif ( weight > 0 ) {\r\n\r\n\t\t\t\tif ( this.cumulativeValue === null ) {\r\n\t\t\t\t\tthis.cumulativeValue = THREE.AnimationUtils.clone( value );\r\n\t\t\t\t}\r\n\t\t\t\tthis.cumulativeWeight = weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar lerpAlpha = weight / ( this.cumulativeWeight + weight );\r\n\t\t\tthis.cumulativeValue = this.lerpValue( this.cumulativeValue, value, lerpAlpha );\r\n\t\t\tthis.cumulativeWeight += weight;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tif ( ! this.isBound ) return;\r\n\r\n\t\tthis.setValue( this.originalValue );\r\n\r\n\t\tthis.setValue = null;\r\n\t\tthis.getValue = null;\r\n\t\tthis.lerpValue = null;\r\n\t\tthis.equalsValue = null;\r\n\t\tthis.triggerDirty = null;\r\n\t\tthis.isBound = false;\r\n\r\n\t},\r\n\r\n\t// bind to the real property in the scene graph, remember original value, memorize various accessors for speed/inefficiency\r\n\tbind: function() {\r\n\r\n\t\tif ( this.isBound ) return;\r\n\r\n\t\tvar targetObject = this.node;\r\n\r\n \t\t// ensure there is a value node\r\n\t\tif ( ! targetObject ) {\r\n\t\t\tconsole.error( \"  trying to update node for track: \" + this.trackName + \" but it wasn't found.\" );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( this.objectName ) {\r\n\t\t\t// special case were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\tif ( this.objectName === \"materials\" ) {\r\n\t\t\t\tif ( ! targetObject.material ) {\r\n\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ! targetObject.material.materials ) {\r\n\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\ttargetObject = targetObject.material.materials;\r\n\t\t\t} else if ( this.objectName === \"bones\" ) {\r\n\t\t\t\tif ( ! targetObject.skeleton ) {\r\n\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\t\t\t\t\tif ( targetObject[i].name === this.objectIndex ) {\r\n\t\t\t\t\t\tthis.objectIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( targetObject[ this.objectName ] === undefined ) {\r\n\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\ttargetObject = targetObject[ this.objectName ];\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.objectIndex !== undefined ) {\r\n\t\t\t\tif ( targetObject[ this.objectIndex ] === undefined ) {\r\n\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = targetObject[ this.objectIndex ];\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n \t\t// special case mappings\r\n \t\tvar nodeProperty = targetObject[ this.propertyName ];\r\n\t\tif ( ! nodeProperty ) {\r\n\t\t\tconsole.error( \"  trying to update property for track: \" + this.nodeName + '.' + this.propertyName + \" but it wasn't found.\", targetObject );\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\t\tif ( this.propertyIndex !== undefined ) {\r\n\r\n\t\t\tif ( this.propertyName === \"morphTargetInfluences\" ) {\r\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tif ( ! targetObject.geometry ) {\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n\t\t\t\t}\r\n\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === this.propertyIndex ) {\r\n\t\t\t\t\t\tthis.propertyIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setValue = function setValue_propertyIndexed( value ) {\r\n\t\t\t\tif ( ! this.equalsValue( nodeProperty[ this.propertyIndex ], value ) ) {\r\n\t\t\t\t\tnodeProperty[ this.propertyIndex ] = value;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t};\r\n\r\n\t\t\tthis.getValue = function getValue_propertyIndexed() {\r\n\t\t\t\treturn nodeProperty[ this.propertyIndex ];\r\n\t\t\t};\r\n\r\n\t\t}\r\n\t\t// must use copy for Object3D.Euler/Quaternion\r\n\t\telse if ( nodeProperty.copy ) {\r\n\r\n\t\t\tthis.setValue = function setValue_propertyObject( value ) {\r\n\t\t\t\tif ( ! this.equalsValue( nodeProperty, value ) ) {\r\n\t\t\t\t\tnodeProperty.copy( value );\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.getValue = function getValue_propertyObject() {\r\n\t\t\t\treturn nodeProperty;\r\n\t\t\t};\r\n\r\n\t\t}\r\n\t\t// otherwise just set the property directly on the node (do not use nodeProperty as it may not be a reference object)\r\n\t\telse {\r\n\r\n\t\t\tthis.setValue = function setValue_property( value ) {\r\n\t\t\t\tif ( ! this.equalsValue( targetObject[ this.propertyName ], value ) ) {\r\n\t\t\t\t\ttargetObject[ this.propertyName ] = value;\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.getValue = function getValue_property() {\r\n\t\t\t\treturn targetObject[ this.propertyName ];\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// trigger node dirty\r\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\tthis.triggerDirty = function triggerDirty_needsUpdate() {\r\n\t\t\t\tthis.node.needsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\tthis.triggerDirty = function triggerDirty_matrixWorldNeedsUpdate() {\r\n\t\t\t\ttargetObject.matrixWorldNeedsUpdate = true;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.originalValue = this.getValue();\r\n\r\n\t\tthis.equalsValue = THREE.AnimationUtils.getEqualsFunc( this.originalValue );\r\n\t\tthis.lerpValue = THREE.AnimationUtils.getLerpFunc( this.originalValue, true );\r\n\r\n\t\tthis.isBound = true;\r\n\r\n\t},\r\n\r\n\tapply: function() {\r\n\r\n\t\t// for speed capture the setter pattern as a closure (sort of a memoization pattern: https://en.wikipedia.org/wiki/Memoization)\r\n\t\tif ( ! this.isBound ) this.bind();\r\n\r\n\t\t// early exit if there is nothing to apply.\r\n\t\tif ( this.cumulativeWeight > 0 ) {\r\n\r\n\t\t\t// blend with original value\r\n\t\t\tif ( this.cumulativeWeight < 1 ) {\r\n\r\n\t\t\t\tvar remainingWeight = 1 - this.cumulativeWeight;\r\n\t\t\t\tvar lerpAlpha = remainingWeight / ( this.cumulativeWeight + remainingWeight );\r\n\t\t\t\tthis.cumulativeValue = this.lerpValue( this.cumulativeValue, this.originalValue, lerpAlpha );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar valueChanged = this.setValue( this.cumulativeValue );\r\n\r\n\t\t\tif ( valueChanged && this.triggerDirty ) {\r\n\t\t\t\tthis.triggerDirty();\r\n\t\t\t}\r\n\r\n\t\t\t// reset accumulator\r\n\t\t\tthis.cumulativeValue = null;\r\n\t\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\t}\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.PropertyBinding.parseTrackName = function( trackName ) {\r\n\r\n\t// matches strings in the form of:\r\n\t//    nodeName.property\r\n\t//    nodeName.property[accessor]\r\n\t//    nodeName.material.property[accessor]\r\n\t//    uuid.property[accessor]\r\n\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n\t//    parentName/nodeName.property\r\n\t//    parentName/parentName/nodeName.property[index]\r\n\t//\t  .bone[Armature.DEF_cog].position\r\n\t// created and tested via https://regex101.com/#javascript\r\n\r\n\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\r\n\tvar matches = re.exec(trackName);\r\n\r\n\tif ( ! matches ) {\r\n\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\t}\r\n\r\n    if (matches.index === re.lastIndex) {\r\n        re.lastIndex++;\r\n    }\r\n\r\n\tvar results = {\r\n\t\tdirectoryName: matches[1],\r\n\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\r\n\t\tobjectName: matches[5],\r\n\t\tobjectIndex: matches[7],\r\n\t\tpropertyName: matches[9],\r\n\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\r\n\t};\r\n\r\n\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\t}\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.findNode = function( root, nodeName ) {\r\n\r\n\tfunction searchSkeleton( skeleton ) {\r\n\r\n\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\r\n\t\t\tvar bone = skeleton.bones[i];\r\n\r\n\t\t\tif ( bone.name === nodeName ) {\r\n\r\n\t\t\t\treturn bone;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\tfunction searchNodeSubtree( children ) {\r\n\r\n\t\tfor ( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\tvar childNode = children[i];\r\n\r\n\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\treturn childNode;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\tif ( result ) return result;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\treturn root;\r\n\r\n\t}\r\n\r\n\t// search into skeleton bones.\r\n\tif ( root.skeleton ) {\r\n\r\n\t\tvar bone = searchSkeleton( root.skeleton );\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\treturn bone;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// search into node subtree.\r\n\tif ( root.children ) {\r\n\r\n\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\tif ( subTreeNode ) {\r\n\r\n\t\t\treturn subTreeNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn null;\r\n}\r\n\r\n// File:src/animation/tracks/VectorKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Vectors\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.VectorKeyframeTrack = function ( name, keys ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\r\n\t// local cache of value type to avoid allocations during runtime.\r\n\tthis.result = this.keys[0].value.clone();\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\r\nTHREE.VectorKeyframeTrack.prototype.constructor = THREE.VectorKeyframeTrack;\r\n\r\nTHREE.VectorKeyframeTrack.prototype.setResult = function( value ) {\r\n\r\n\tthis.result.copy( value );\r\n\r\n};\r\n\r\n// memoization of the lerp function for speed.\r\n// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\nTHREE.VectorKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\r\n\treturn value0.lerp( value1, alpha );\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\r\n\treturn value0.equals( value1 );\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.prototype.clone = function() {\r\n\r\n\tvar clonedKeys = [];\r\n\r\n\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\tvar key = this.keys[i];\r\n\t\tclonedKeys.push( {\r\n\t\t\ttime: key.time,\r\n\t\t\tvalue: key.value.clone()\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.VectorKeyframeTrack( this.name, clonedKeys );\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.parse = function( json ) {\r\n\r\n\tvar elementCount = json.keys[0].value.length;\r\n\tvar valueType = THREE[ 'Vector' + elementCount ];\r\n\r\n\tvar keys = [];\r\n\r\n\tfor ( var i = 0; i < json.keys.length; i ++ ) {\r\n\t\tvar jsonKey = json.keys[i];\r\n\t\tkeys.push( {\r\n\t\t\tvalue: new valueType().fromArray( jsonKey.value ),\r\n\t\t\ttime: jsonKey.time\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.VectorKeyframeTrack( json.name, keys );\r\n\r\n};\r\n\r\n// File:src/animation/tracks/QuaternionKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Quaternion\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.QuaternionKeyframeTrack = function ( name, keys ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\r\n\t// local cache of value type to avoid allocations during runtime.\r\n\tthis.result = this.keys[0].value.clone();\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype.constructor = THREE.QuaternionKeyframeTrack;\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype.setResult = function( value ) {\r\n\r\n\tthis.result.copy( value );\r\n\r\n};\r\n\r\n// memoization of the lerp function for speed.\r\n// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\nTHREE.QuaternionKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\r\n\treturn value0.slerp( value1, alpha );\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\r\n\treturn value0.equals( value1 );\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype.multiply = function( quat ) {\r\n\r\n\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\tthis.keys[i].value.multiply( quat );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype.clone = function() {\r\n\r\n\tvar clonedKeys = [];\r\n\r\n\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\tvar key = this.keys[i];\r\n\t\tclonedKeys.push( {\r\n\t\t\ttime: key.time,\r\n\t\t\tvalue: key.value.clone()\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.QuaternionKeyframeTrack( this.name, clonedKeys );\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.parse = function( json ) {\r\n\r\n\tvar keys = [];\r\n\r\n\tfor ( var i = 0; i < json.keys.length; i ++ ) {\r\n\t\tvar jsonKey = json.keys[i];\r\n\t\tkeys.push( {\r\n\t\t\tvalue: new THREE.Quaternion().fromArray( jsonKey.value ),\r\n\t\t\ttime: jsonKey.time\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.QuaternionKeyframeTrack( json.name, keys );\r\n\r\n};\r\n\r\n// File:src/animation/tracks/StringKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Strings\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.StringKeyframeTrack = function ( name, keys ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\r\n\t// local cache of value type to avoid allocations during runtime.\r\n\tthis.result = this.keys[0].value;\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\r\nTHREE.StringKeyframeTrack.prototype.constructor = THREE.StringKeyframeTrack;\r\n\r\nTHREE.StringKeyframeTrack.prototype.setResult = function( value ) {\r\n\r\n\tthis.result = value;\r\n\r\n};\r\n\r\n// memoization of the lerp function for speed.\r\n// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\nTHREE.StringKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\r\n\treturn ( alpha < 1.0 ) ? value0 : value1;\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\r\n\treturn ( value0 === value1 );\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.prototype.clone = function() {\r\n\r\n\tvar clonedKeys = [];\r\n\r\n\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\tvar key = this.keys[i];\r\n\t\tclonedKeys.push( {\r\n\t\t\ttime: key.time,\r\n\t\t\tvalue: key.value\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.StringKeyframeTrack( this.name, clonedKeys );\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.parse = function( json ) {\r\n\r\n\treturn new THREE.StringKeyframeTrack( json.name, json.keys );\r\n\r\n};\r\n\r\n// File:src/animation/tracks/BooleanKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Boolean\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.BooleanKeyframeTrack = function ( name, keys ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\r\n\t// local cache of value type to avoid allocations during runtime.\r\n\tthis.result = this.keys[0].value;\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\r\nTHREE.BooleanKeyframeTrack.prototype.constructor = THREE.BooleanKeyframeTrack;\r\n\r\nTHREE.BooleanKeyframeTrack.prototype.setResult = function( value ) {\r\n\r\n\tthis.result = value;\r\n\r\n};\r\n\r\n// memoization of the lerp function for speed.\r\n// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\nTHREE.BooleanKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\r\n\treturn ( alpha < 1.0 ) ? value0 : value1;\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\r\n\treturn ( value0 === value1 );\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.prototype.clone = function() {\r\n\r\n\tvar clonedKeys = [];\r\n\r\n\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\tvar key = this.keys[i];\r\n\t\tclonedKeys.push( {\r\n\t\t\ttime: key.time,\r\n\t\t\tvalue: key.value\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.BooleanKeyframeTrack( this.name, clonedKeys );\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.parse = function( json ) {\r\n\r\n\treturn new THREE.BooleanKeyframeTrack( json.name, json.keys );\r\n\r\n};\r\n\r\n// File:src/animation/tracks/NumberKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Numbers\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.NumberKeyframeTrack = function ( name, keys ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, keys );\r\n\r\n\t// local cache of value type to avoid allocations during runtime.\r\n\tthis.result = this.keys[0].value;\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.prototype = Object.create( THREE.KeyframeTrack.prototype );\r\n\r\nTHREE.NumberKeyframeTrack.prototype.constructor = THREE.NumberKeyframeTrack;\r\n\r\nTHREE.NumberKeyframeTrack.prototype.setResult = function( value ) {\r\n\r\n\tthis.result = value;\r\n\r\n};\r\n\r\n// memoization of the lerp function for speed.\r\n// NOTE: Do not optimize as a prototype initialization closure, as value0 will be different on a per class basis.\r\nTHREE.NumberKeyframeTrack.prototype.lerpValues = function( value0, value1, alpha ) {\r\n\r\n\treturn value0 * ( 1 - alpha ) + value1 * alpha;\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.prototype.compareValues = function( value0, value1 ) {\r\n\r\n\treturn ( value0 === value1 );\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.prototype.clone = function() {\r\n\r\n\tvar clonedKeys = [];\r\n\r\n\tfor ( var i = 0; i < this.keys.length; i ++ ) {\r\n\r\n\t\tvar key = this.keys[i];\r\n\t\tclonedKeys.push( {\r\n\t\t\ttime: key.time,\r\n\t\t\tvalue: key.value\r\n\t\t} );\r\n\t}\r\n\r\n\treturn new THREE.NumberKeyframeTrack( this.name, clonedKeys );\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.parse = function( json ) {\r\n\r\n\treturn new THREE.NumberKeyframeTrack( json.name, json.keys );\r\n\r\n};\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.receiveShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nObject.defineProperties( THREE.Light.prototype, {\r\n\tonlyShadow: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowCameraFov: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.fov = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraLeft: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.left = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraRight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.right = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraTop: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.top = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraBottom: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraNear: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.near = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraFar: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.camera.far = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraVisible: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.' );\r\n\t\t}\r\n\t},\r\n\tshadowBias: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.bias = value;\r\n\t\t}\r\n\t},\r\n\tshadowDarkness: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.darkness = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapWidth: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapHeight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Light.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\tif ( this.intensity !== undefined ) data.object.intensity = this.intensity;\r\n\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\tif ( this.exponent !== undefined ) data.object.exponent = this.exponent;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/LightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LightShadow = function ( camera ) {\r\n\r\n\tthis.camera = camera;\r\n\r\n\tthis.bias = 0;\r\n\tthis.darkness = 1;\r\n\r\n\tthis.mapSize = new THREE.Vector2( 512, 512 );\r\n\r\n\tthis.map = null;\r\n\tthis.matrix = null;\r\n\r\n};\r\n\r\nTHREE.LightShadow.prototype = {\r\n\r\n\tconstructor: THREE.LightShadow,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.darkness = source.darkness;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.OrthographicCamera( - 500, 500, 500, - 500, 50, 5000 ) );\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.shadow = source.shadow.clone();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 1, 500 ) );\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.shadow = source.shadow.clone();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 50, 1, 50, 5000 ) );\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.shadow = source.shadow.clone();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar color, textureLoader, materialLoader;\r\n\r\n\t\treturn function ( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tif ( color === undefined ) color = new THREE.Color();\r\n\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\r\n\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\r\n\r\n\t\t\t// convert from old material format\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uuid = THREE.Math.generateUUID();\r\n\r\n\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\treturn uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar json = {\r\n\t\t\t\tuuid: THREE.Math.generateUUID(),\r\n\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\t\tjson.color = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\t// These were never supported\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\tjson.blending = THREE[ value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\tjson.side = THREE.BackSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\tjson.side = THREE.DoubleSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error( 'Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tvar handlers = this.handlers;\r\n\r\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = handlers[ i ];\r\n\t\t\tvar loader  = handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tvar response = event.target.response;\r\n\r\n\t\t\tTHREE.Cache.add( url, response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\t\tparseAnimations();\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAnimations() {\r\n\r\n\t\t\tvar outputAnimations = [];\r\n\r\n\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\tvar animations = [];\r\n\t\t\tif ( json.animation !== undefined ) {\r\n\t\t\t\tanimations.push( json.animation );\r\n\t\t\t}\r\n\t\t\tif ( json.animations !== undefined ) {\r\n\t\t\t\tif ( json.animations.length ) {\r\n\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tanimations.push( json.animations );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[i], geometry.bones );\r\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// parse implicit morph animations\r\n\t\t\tif ( geometry.morphTargets ) {\r\n\r\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.animations ) {\r\n\r\n\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseAnimations: function ( json ) {\r\n\r\n\t\tvar animations = [];\r\n\r\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\tvar clip = THREE.AnimationClip.parse( json[i] );\r\n\r\n\t\t\tanimations.push( clip );\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.Texture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CubeTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.CubeTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CubeTextureLoader,\r\n\r\n\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.CubeTexture( [] );\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded ++;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tfunction update() {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ){\r\n\r\n\t\tvar intersect;\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\r\n\r\n\t\t}\r\n\r\n\t\tif ( intersect === null ) return null;\r\n\r\n\t\tintersectionPointWorld.copy( point );\r\n\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\treturn {\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\tobject: object\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\r\n\t\tvA.fromArray( positions, a * 3 );\r\n\t\tvB.fromArray( positions, b * 3 );\r\n\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\tif ( intersection ) {\r\n\r\n\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\r\n\t\t\tintersection.faceIndex = a;\r\n\r\n\t\t}\r\n\r\n\t\treturn intersection;\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) return;\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t}\r\n\r\n\t\tvar uvs, intersection;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.uv !== undefined ){\r\n\r\n\t\t\t\tuvs = attributes.uv.array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar fvA, fvB, fvC;\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\tvC.add( fvC );\r\n\r\n\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\tfvC = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/hemilight_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'hemilight_fragment'] = \"#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalAmbientLight += lightColor;\\n\\n\t}\\n\\n#endif\\n\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"vec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normal_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tfloat texelSizeY =  1.0 / shadowMapSize[ i ].y;\\n\\n\t\tfloat shadow = 0.0;\\n\\n#if defined( POINT_LIGHT_SHADOWS )\\n\\n\t\tbool isPointLight = shadowDarkness[ i ] < 0.0;\\n\\n\t\tif ( isPointLight ) {\\n\\n\t\t\tfloat realShadowDarkness = abs( shadowDarkness[ i ] );\\n\\n\t\t\tvec3 lightToPosition = vShadowCoord[ i ].xyz;\\n\\n\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\t\tfloat dp = length( lightToPosition );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\\n\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tconst float Dr = 1.25;\\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tconst float Dr = 2.25;\\n\t#endif\\n\\n\t\t\tfloat os = Dr *  2.0 * texelSizeY;\\n\\n\t\t\tconst vec3 Gsd = vec3( - 1, 0, 1 );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\t\t\tshadow *= realShadowDarkness * ( 1.0 / 21.0 );\\n\\n\t#else \\n\t\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\t\tfloat dp = length( lightToPosition );\\n\\n\t\t\tadjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\\n\\n\t\t\tshadow *= realShadowDarkness;\\n\\n\t#endif\\n\\n\t\t} else {\\n\\n#endif \\n\t\t\tfloat texelSizeX =  1.0 / shadowMapSize[ i ].x;\\n\\n\t\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\\n\t\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\t\tif ( frustumTest ) {\\n\\n\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\\n\t\t\t\t/*\\n\t\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\t\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\t\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\t\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\t\tshadow += 1.0;\\n\t\t\t\t\t}\\n\t\t\t\t\tshadow /= 9.0;\\n\t\t\t\t*/\\n\\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t\tconst float ShadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = texelSizeX;\\n\t\t\t\tfloat yPixelOffset = texelSizeY;\\n\\n\t\t\t\tfloat dx0 = - 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = - 1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfloat fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\\n\\n\t\t\t\tshadow *= shadowDarkness[ i ];\\n\\n\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t\tfloat xPixelOffset = texelSizeX;\\n\t\t\t\tfloat yPixelOffset = texelSizeY;\\n\\n\t\t\t\tfloat dx0 = - 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = - 1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\\n\t\t\t\tshadowKernel[ 0 ] *= vec3( 0.25 );\\n\\n\t\t\t\tshadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\\n\t\t\t\tshadowKernel[ 1 ] *= vec3( 0.25 );\\n\\n\t\t\t\tshadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\\n\t\t\t\tshadowKernel[ 2 ] *= vec3( 0.25 );\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\\n\\n\t\t\t\tshadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\\n\t\t\t\tshadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\\n\\n\t#else \\n\t\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\tshadow = shadowDarkness[ i ];\\n\\n\t#endif\\n\\n\t\t\t}\\n\\n#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) {\\n\\n\t\t\t\tif ( i == 0 ) {\\n\\n\t\t\t\t\toutgoingLight *= vec3( 1.0, 0.5, 0.0 );\\n\\n\t\t\t\t} else if ( i == 1 ) {\\n\\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 1.0, 0.8 );\\n\\n\t\t\t\t} else {\\n\\n\t\t\t\t\toutgoingLight *= vec3( 0.0, 0.5, 1.0 );\\n\\n\t\t\t\t}\\n\\n\t\t\t}\\n\\n#endif\\n\\n#if defined( POINT_LIGHT_SHADOWS )\\n\\n\t\t}\\n\\n#endif\\n\\n\t\tshadowMask = shadowMask * vec3( 1.0 - shadow );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n\t#if defined(POINT_LIGHT_SHADOWS)\\n\\n\\n\t\tvoid adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\\n\\n\t\t\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\t\tif ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\\n\t\t\t\tshadowValue += 1.0;\\n\\n\t\t}\\n\\n\\n\t\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\n\\n\t\t\tvec3 absV = abs( v );\\n\\n\\n\t\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\t\tabsV *= scaleToCube;\\n\\n\\n\t\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\n\\n\\n\t\t\tvec2 planar = v.xy;\\n\\n\t\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\t\tfloat almostOne = 1.0 - almostATexel;\\n\\n\t\t\tif ( absV.z >= almostOne ) {\\n\\n\t\t\t\tif ( v.z > 0.0 )\\n\t\t\t\t\tplanar.x = 4.0 - v.x;\\n\\n\t\t\t} else if ( absV.x >= almostOne ) {\\n\\n\t\t\t\tfloat signX = sign( v.x );\\n\t\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\\n\t\t\t} else if ( absV.y >= almostOne ) {\\n\\n\t\t\t\tfloat signY = sign( v.y );\\n\t\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\t\tplanar.y = v.z * signY - 2.0;\\n\\n\t\t\t}\\n\\n\\n\t\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor ( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform vec3 ambientLightColor;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normal_phong_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"hemilight_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\t\"totalDiffuseLight *= shadowMask;\",\r\n\t\t\t\t\"totalSpecularLight *= shadowMask;\",\r\n\r\n\t\t\t\t\"#ifdef METAL\",\r\n\r\n\t\t\t\t\"\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\",\r\n\r\n\t\t\t\t\"#else\",\r\n\r\n\t\t\t\t\"\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\",\r\n\r\n\t\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\t\t\"\tvec3 shadowMask = vec3( 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * shadowMask;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\r\n\t'distanceRGBA': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3( 0, 0, 0 ) }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec4 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\r\n\t\t\t\t\"vWorldPosition = worldPosition;\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 lightPos;\",\r\n\t\t\t\"varying vec4 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\r\n\t\t\t\"vec4 pack1K ( float depth ) {\",\r\n\r\n\t\t\t\"   depth /= 1000.0;\",\r\n\t\t\t\"   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n  \t\t\t\"\tconst vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n   \t\t\t\"\tvec4 res = fract( depth * bitSh );\",\r\n   \t\t\t\"\tres -= res.xxyz * bitMsk;\",\r\n   \t\t\t\"\treturn res; \",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"float unpack1K ( vec4 color ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\",\r\n\t\t\t\"\treturn dot( color, bitSh ) * 1000.0;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main () {\",\r\n\r\n\t\t\t\"\tgl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = - 1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = - 1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.getViewport = function ( dimensions ) {\r\n\r\n\t\tdimensions.x = _viewportX / pixelRatio;\r\n\t\tdimensions.y = _viewportY / pixelRatio;\r\n\r\n\t\tdimensions.z = _viewportWidth / pixelRatio;\r\n\t\tdimensions.w = _viewportHeight / pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\tif ( ! renderTarget || textureProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget.texture );\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar dataStart = 0;\r\n\t\tvar dataCount = Infinity;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdataCount = index.count\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\tdataCount = position.count;\r\n\r\n\t\t}\r\n\r\n\t\tvar rangeStart = geometry.drawRange.start;\r\n\t\tvar rangeCount = geometry.drawRange.count;\r\n\r\n\t\tvar groupStart = group !== null ? group.start : 0;\r\n\t\tvar groupCount = group !== null ? group.count : Infinity;\r\n\r\n\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\r\n\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t//\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = - 1;\r\n\t\ttransparentObjectsLastIndex = - 1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene, camera );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\r\n\t\t\tif ( texture.generateMipmaps && isTargetPowerOfTwo && texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\t updateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( ( object.channels.mask & camera.channels.mask ) !== 0 ) {\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights, camera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) uvScaleMap = uvScaleMap.texture;\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights, camera ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( light.castShadow === true ) {\r\n\r\n\t\t\t\t\tif ( light instanceof THREE.PointLight || light instanceof THREE.SpotLight || light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\t\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t\t\t\t// equal to inverse of the light's position\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n\t\t\t\t\t\t\tshadow.matrix.identity().setPosition( _vector3 );\r\n\r\n\t\t\t\t\t\t\t// for point lights we set the sign of the shadowDarkness uniform to be negative\r\n\t\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = - shadow.darkness;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = shadow.darkness;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = shadow.matrix;\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = shadow.map;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = shadow.mapSize;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = shadow.bias;\r\n\r\n\t\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( texture.image instanceof Array && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\t\t\t\t_this.setTexture( texture.texture, textureUnit );\r\n\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture.texture, textureUnit );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false ) {\r\n\r\n\t\t\ttexture.image = makePowerOfTwo( texture.image );\r\n\r\n\t\t}\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = isPowerOfTwo( image ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\r\n\r\n\t}\r\n\r\n\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\r\n\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction makePowerOfTwo( image ) {\r\n\r\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\r\n\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = isPowerOfTwo( image ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.texture.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\tif ( framebuffer ) {\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat\r\n\t\t\t\t\t&& paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.type !== THREE.UnsignedByteType\r\n\t\t\t\t\t&& paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE )\r\n\t\t\t\t\t&& ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) )\r\n\t\t\t\t\t&& ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} finally {\r\n\r\n\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\r\n\r\n\t\tstate.bindTexture( target, texture );\r\n\t\t_gl.generateMipmap( target );\r\n\t\tstate.bindTexture( target, null );\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\r\n\r\n\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy );\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tget wrapS() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\r\n\t\treturn this.texture.wrapS;\r\n\r\n\t},\r\n\r\n\tset wrapS( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\r\n\t\tthis.texture.wrapS = value;\r\n\r\n\t},\r\n\r\n\tget wrapT() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\r\n\t\treturn this.texture.wrapT;\r\n\r\n\t},\r\n\r\n\tset wrapT( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\r\n\t\tthis.texture.wrapT = value;\r\n\r\n\t},\r\n\r\n\tget magFilter() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\r\n\t\treturn this.texture.magFilter;\r\n\r\n\t},\r\n\r\n\tset magFilter( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\r\n\t\tthis.texture.magFilter = value;\r\n\r\n\t},\r\n\r\n\tget minFilter() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\r\n\t\treturn this.texture.minFilter;\r\n\r\n\t},\r\n\r\n\tset minFilter( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\r\n\t\tthis.texture.minFilter = value;\r\n\r\n\t},\r\n\r\n\tget anisotropy() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\r\n\t\treturn this.texture.anisotropy;\r\n\r\n\t},\r\n\r\n\tset anisotropy( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\r\n\t\tthis.texture.anisotropy = value;\r\n\r\n\t},\r\n\r\n\tget offset() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\r\n\t\treturn this.texture.offset;\r\n\r\n\t},\r\n\r\n\tset offset( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\r\n\t\tthis.texture.offset = value;\r\n\r\n\t},\r\n\r\n\tget repeat() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\r\n\t\treturn this.texture.repeat;\r\n\r\n\t},\r\n\r\n\tset repeat( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\r\n\t\tthis.texture.repeat = value;\r\n\r\n\t},\r\n\r\n\tget format() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\r\n\t\treturn this.texture.format;\r\n\r\n\t},\r\n\r\n\tset format( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\r\n\t\tthis.texture.format = value;\r\n\r\n\t},\r\n\r\n\tget type() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\r\n\t\treturn this.texture.type;\r\n\r\n\t},\r\n\r\n\tset type( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\r\n\t\tthis.texture.type = value;\r\n\r\n\t},\r\n\r\n\tget generateMipmaps() {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\r\n\t\treturn this.texture.generateMipmaps;\r\n\r\n\t},\r\n\r\n\tset generateMipmaps( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\r\n\t\tthis.texture.generateMipmaps = value;\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.texture = source.texture.clone();\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.pointLightShadows > 0 ? '#define POINT_LIGHT_SHADOWS' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\", \"pointLightShadows\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\t\tvar pointLightShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight || light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tmaxShadows ++;\r\n\t\t\t\tpointLightShadows ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'maxShadows': maxShadows, 'pointLightShadows': pointLightShadows };\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar allocatedShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: allocatedShadows.maxShadows,\r\n\t\t\tpointLightShadows: allocatedShadows.pointLightShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && allocatedShadows.maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_lookTarget = new THREE.Vector3(),\r\n\t_lightPositionWorld = new THREE.Vector3(),\r\n\r\n\t_renderList = [],\r\n\r\n\t_MorphingFlag = 1,\r\n\t_SkinningFlag = 2,\r\n\r\n\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t_distanceMaterials = new Array( _NumberOfMaterialVariants );\r\n\r\n\tvar cubeDirections = [\r\n\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\r\n\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\r\n\t];\r\n\r\n\tvar cubeUps = [\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\r\n\t];\r\n\r\n\tvar cube2DViewPorts = [\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\r\n\t];\r\n\r\n\tvar _vector4 = new THREE.Vector4();\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\r\n\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\r\n\r\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\tvar depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: useMorphing,\r\n\t\t\tskinning: useSkinning\r\n\t\t} );\r\n\r\n\t\tdepthMaterial._shadowPass = true;\r\n\r\n\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: distanceUniforms,\r\n\t\t\tvertexShader: distanceShader.vertexShader,\r\n\t\t\tfragmentShader: distanceShader.fragmentShader,\r\n\t\t\tmorphTargets: useMorphing,\r\n\t\t\tskinning: useSkinning\r\n\t\t} );\r\n\r\n\t\tdistanceMaterial._shadowPass = true;\r\n\r\n\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene ) {\r\n\r\n\t\tvar faceCount, isPointLight;\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// Set GL state for depth map.\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\t\t_gl.cullFace( scope.cullFace === THREE.CullFaceFront ? _gl.FRONT : _gl.BACK );\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// save the existing viewport so it can be restored later\r\n\t\t_renderer.getViewport( _vector4 );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( light.castShadow === true ) {\r\n\r\n\t\t\t\tvar shadow = light.shadow;\r\n\t\t\t\tvar shadowCamera = shadow.camera;\r\n\t\t\t\tvar shadowMapSize = shadow.mapSize;\r\n\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\t\tfaceCount = 6;\r\n\t\t\t\t\tisPointLight = true;\r\n\r\n\t\t\t\t\tvar vpWidth = shadowMapSize.x / 4.0;\r\n\t\t\t\t\tvar vpHeight = shadowMapSize.y / 2.0;\r\n\r\n\t\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t\t// following orientation:\r\n\t\t\t\t\t//\r\n\t\t\t\t\t//  xzXZ\r\n\t\t\t\t\t//   y Y\r\n\t\t\t\t\t//\r\n\t\t\t\t\t// X - Positive x direction\r\n\t\t\t\t\t// x - Negative x direction\r\n\t\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t\t// y - Negative y direction\r\n\t\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t\t// positive X\r\n\t\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative X\r\n\t\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Z\r\n\t\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Z\r\n\t\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t\t// positive Y\r\n\t\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t\t// negative Y\r\n\t\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfaceCount = 1;\r\n\t\t\t\t\tisPointLight = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( shadowMapSize.x, shadowMapSize.y, pars );\r\n\t\t\t\t\tshadow.matrix = new THREE.Matrix4();\r\n\r\n\t\t\t\t\t//\r\n\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\t\tshadowCamera.aspect = shadowMapSize.x / shadowMapSize.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar shadowMap = shadow.map;\r\n\t\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\r\n\t\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t\t// run a single pass if not\r\n\r\n\t\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\t\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t\t_renderer.setViewport( vpDimensions.x, vpDimensions.y, vpDimensions.z, vpDimensions.w );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t\t_renderList.length = 0;\r\n\r\n\t\t\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\t\t\t\t\t// render shadow map\r\n\t\t\t\t\t// render regular objects\r\n\r\n\t\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// We must call _renderer.resetGLState() at the end of each iteration of\r\n\t\t\t\t// the light loop in order to force material updates for each light.\r\n\t\t\t\t_renderer.resetGLState();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.setViewport( _vector4.x, _vector4.y, _vector4.z, _vector4.w );\r\n\r\n\t\t// Restore GL state.\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar newMaterial = null;\r\n\r\n\t\tvar materialVariants = _depthMaterials;\r\n\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\tif ( isPointLight ) {\r\n\r\n\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\r\n\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\r\n\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\tnewMaterial = materialVariants[ variantIndex ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewMaterial = customMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tnewMaterial.visible = material.visible;\r\n\t\tnewMaterial.wireframe = material.wireframe;\r\n\t\tnewMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\tif ( isPointLight && newMaterial.uniforms.lightPos !== undefined ) {\r\n\r\n\t\t\tnewMaterial.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn newMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\tvar attributeDivisors = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n\t\t\tattributeDivisors[ attribute ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/CurveUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.CurveUtils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ShapeUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.ShapeUtils = {\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tarea: function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t},\r\n\r\n\ttriangulate: ( function () {\r\n\r\n\t\t/**\r\n\t\t * This code is a quick port of code written in C++ which was submitted to\r\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t\t * See original code and more information here:\r\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t\t *\r\n\t\t * ported to actionscript by Zevan Rosser\r\n\t\t * www.actionsnippet.com\r\n\t\t *\r\n\t\t * ported to javascript by Joshua Koo\r\n\t\t * http://www.lab4games.net/zz85/blog\r\n\t\t *\r\n\t\t */\r\n\r\n\t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// takes in an contour array and returns\r\n\r\n\t\treturn function ( contour, indices ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\r\n\t\t\tif ( n < 3 ) return null;\r\n\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\t\tvar u, v, w;\r\n\r\n\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar nv = n;\r\n\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnv --;\r\n\r\n\t\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} )(),\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.ShapeUtils.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2: ( function () {\r\n\r\n\t\tfunction b2p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p1( t, p ) {\r\n\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p2( t, p ) {\r\n\r\n\t\t\treturn t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2 ) {\r\n\r\n\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3: ( function () {\r\n\r\n\t\tfunction b3p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p1( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p2( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p3( t, p ) {\r\n\r\n\t\t\treturn t * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\nTHREE.Curve.prototype = {\r\n\r\n\tconstructor: THREE.Curve,\r\n\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\r\n\tgetPoint: function ( t ) {\r\n\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\r\n\tgetPointAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPoint( t )\r\n\r\n\tgetPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPointAt( u )\r\n\r\n\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get total curve arc length\r\n\r\n\tgetLength: function () {\r\n\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t},\r\n\r\n\t// Get list of cumulative segment lengths\r\n\r\n\tgetLengths: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\r\n\t\tcache.push( 0 );\r\n\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n\t},\r\n\r\n\tupdateArcLengths: function() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\r\n\t},\r\n\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\tif ( distance ) {\r\n\r\n\t\t\ttargetArcLength = distance;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\t//var time = Date.now();\r\n\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\twhile ( low <= high ) {\r\n\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t// DONE\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ti = high;\r\n\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\r\n\t\t}\r\n\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t// add that fractional amount to t\r\n\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\treturn t;\r\n\r\n\t},\r\n\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\r\n\tgetTangent: function( t ) {\r\n\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\r\n\t\t// Capping in case of danger\r\n\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\r\n\t},\r\n\r\n\tgetTangentAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\r\n\t}\r\n\r\n}\r\n\r\nTHREE.Curve.Utils = THREE.CurveUtils; // backwards compatibility\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n*/\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};\r\n*/\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\r\n\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\tvar point = points[ i ];\r\n\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve(\r\n\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\tnew THREE.Vector2( aX, aY )\r\n\t);\r\n\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve(\r\n\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\tnew THREE.Vector2( aX, aY )\r\n\t);\r\n\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: 'splineThru', args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: 'ellipse', args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar b2 = THREE.ShapeUtils.b2;\r\n\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\tvar points = [];\r\n\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, tx, ty;\r\n\r\n\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\r\n\r\n\t\tvar item = this.actions[ i ];\r\n\r\n\t\tvar action = item.action;\r\n\t\tvar args = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase 'moveTo':\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'lineTo':\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'quadraticCurveTo':\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'bezierCurveTo':\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'splineThru':\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( var j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'arc':\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'ellipse':\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar item = inActions[ i ];\r\n\r\n\t\t\tvar args = item.args;\r\n\t\t\tvar action = item.action;\r\n\r\n\t\t\tif ( action === 'moveTo' ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\tvar isClockWise = THREE.ShapeUtils.isClockWise;\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles;\r\n\r\n\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\treturn new THREE.ExtrudeGeometry( this, options );\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\treturn new THREE.ShapeGeometry( this, options );\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar holesPts = [];\r\n\r\n\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\nTHREE.Shape.Utils = THREE.ShapeUtils; // backwards compatibility\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b2 = THREE.ShapeUtils.b2;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t);\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t);\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.BoxGeometry(\r\n\t\tparameters.width,\r\n\t\tparameters.height,\r\n\t\tparameters.depth,\r\n\t\tparameters.widthSegments,\r\n\t\tparameters.heightSegments,\r\n\t\tparameters.depthSegments\r\n\t);\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.CircleGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.segments,\r\n\t\tparameters.thetaStart,\r\n\t\tparameters.thetaLength\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 2 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.CircleBufferGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.segments,\r\n\t\tparameters.thetaStart,\r\n\t\tparameters.thetaLength\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.CylinderGeometry(\r\n\t\tparameters.radiusTop,\r\n\t\tparameters.radiusBottom,\r\n\t\tparameters.height,\r\n\t\tparameters.radialSegments,\r\n\t\tparameters.heightSegments,\r\n\t\tparameters.openEnded,\r\n\t\tparameters.thetaStart,\r\n\t\tparameters.thetaLength\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.PlaneGeometry(\r\n\t\tparameters.width,\r\n\t\tparameters.height,\r\n\t\tparameters.widthSegments,\r\n\t\tparameters.heightSegments\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.PlaneBufferGeometry(\r\n\t\tparameters.width,\r\n\t\tparameters.height,\r\n\t\tparameters.widthSegments,\r\n\t\tparameters.heightSegments\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.RingGeometry(\r\n\t\tparameters.innerRadius,\r\n\t\tparameters.outerRadius,\r\n\t\tparameters.thetaSegments,\r\n\t\tparameters.phiSegments,\r\n\t\tparameters.thetaStart,\r\n\t\tparameters.thetaLength\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.SphereGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.widthSegments,\r\n\t\tparameters.heightSegments,\r\n\t\tparameters.phiStart,\r\n\t\tparameters.phiLength,\r\n\t\tparameters.thetaStart,\r\n\t\tparameters.thetaLength\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.SphereBufferGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.widthSegments,\r\n\t\tparameters.heightSegments,\r\n\t\tparameters.phiStart,\r\n\t\tparameters.phiLength,\r\n\t\tparameters.thetaStart,\r\n\t\tparameters.thetaLength\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.TorusGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.tube,\r\n\t\tparameters.radialSegments,\r\n\t\tparameters.tubularSegments,\r\n\t\tparameters.arc\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.TorusKnotGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.tube,\r\n\t\tparameters.radialSegments,\r\n\t\tparameters.tubularSegments,\r\n\t\tparameters.p,\r\n\t\tparameters.q,\r\n\t\tparameters.heightScale\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed,\r\n\t\ttaper: taper\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\nTHREE.TubeGeometry.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.parameters.path,\r\n\t\tthis.parameters.segments, this.parameters.radius, this.parameters.radialSegments,\r\n\t\tthis.parameters.closed, this.parameters.taper\r\n\t);\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.PolyhedronGeometry(\r\n\t\tparameters.vertices,\r\n\t\tparameters.indices,\r\n\t\tparameters.radius,\r\n\t\tparameters.detail\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.DodecahedronGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.detail\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.IcosahedronGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.detail\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.OctahedronGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.detail\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar parameters = this.parameters;\r\n\r\n\treturn new THREE.TetrahedronGeometry(\r\n\t\tparameters.radius,\r\n\t\tparameters.detail\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.camera.updateProjectionMatrix();\r\n\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function ( material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.material = material;\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three/three.js\n ** module id = 1\n ** module chunks = 0\n **/","import Engine from '../engine/Engine';\nimport AssetManager from '../engine/AssetManager';\nimport path from 'path';\n\nimport MenuBuilder from './menu/MenuBuilder';\n\nconst ASSET_PATH = path.resolve(__dirname, '../../assets/');\nconst ASSET_CONFIG = {\n    paths: {\n        maps: ASSET_PATH + '/maps',\n        atlases: ASSET_PATH + '/spritesheets',\n        fonts: ASSET_PATH + '/fonts',\n        audio: ASSET_PATH + '/audio/sprites'\n    },\n    textureAtlases: [\n        'soldier',\n        'tiles',\n        'world',\n        'ui'\n    ],\n    maps: [\n        'level1',\n        'level2'\n    ],\n    fonts: [\n        'long_shot'\n    ],\n    audio: [\n        'guns',\n        'background',\n        'menu_effects'\n    ]\n};\n\nlet Game = {\n\n    /**\n     * Load assets and start the game.\n     *\n     * @returns {void}\n     */\n    start () {\n        AssetManager.init(ASSET_CONFIG).then(function () {\n            let engine = new Engine({\n                debugMode: true\n            });\n\n            let menuState = MenuBuilder.create(engine);\n\n            engine.addState('menu', menuState);\n\n            engine.changeState('menu');\n\n            engine.run();\n        }).catch(function (err) {\n            throw err;\n        });\n    }\n};\n\nmodule.exports = Game;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/Game.js\n **/","import RenderDebug from './utils/debug/RenderDebug';\nimport Renderer from './graphics/Renderer';\nimport MainLoop from './utils/mainloop';\n\nclass Engine {\n    constructor (options = { debugMode: false }) {\n        this.debugMode = options.debugMode;\n        this.states = new Map();\n        this.currentState = null;\n        this._renderer = new Renderer();\n\n        if (this.debugMode) {\n            this._renderDebug = new RenderDebug(this._renderer);\n            this._renderDebug.init();\n        }\n    }\n\n    /**\n     * Add a State to the engine.\n     *\n     * @param {string} name - Name of the state.\n     * @param {State} state - Instance of the state.\n     *\n     * @returns {void}\n     */\n    addState (name, state) {\n        this.states.set(name, state);\n    }\n\n    /**\n     * Change the current state and change the renderer's view to the view of the state.\n     *\n     * @param {string} name - Name of the state to change to.\n     *\n     * @returns {void}\n     */\n    changeState (name) {\n        this.currentState = this.states.get(name);\n        this.currentState.init();\n        if (this.currentState.views.size > 0) {\n            this._renderer.views = this.currentState.views;\n        } else {\n            console.warn('currentState has no View');\n        }\n    }\n\n    /**\n     * Remove a state from the engine.\n     *\n     * @param {string} name - Name of the state to remove.\n     *\n     * @returns {void}\n     */\n    removeState (name) {\n        this.states.delete(name);\n    }\n\n    /**\n     * The game loop. Updates the current state and renders it's Views.\n     *\n     * @returns {void}\n     */\n    run () {\n        let render = (interpolationPercentage) => {\n            this.currentState.render(interpolationPercentage);\n            this._renderer.render(interpolationPercentage);\n        };\n\n        let update = (delta) => {\n            if (this.currentState) {\n                this.currentState.update(delta);\n            } else {\n                debug('no current State');\n            }\n        };\n\n        let before = () => {\n            if (this.debugMode) {\n                this._renderDebug.before();\n            }\n        };\n\n        let after = () => {\n            if (this.debugMode) {\n                this._renderDebug.after();\n            }\n        };\n\n        let loop = MainLoop.setUpdate(update).setDraw(render).setBegin(before).setEnd(after);\n\n        loop.start();\n    }\n}\n\nexport default Engine;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/Engine.js\n **/","import DebugStats from './statsjs';\n\nlet _rendererStats = function () {\n    let container = document.createElement('div');\n\n    container.style.cssText = 'width:80px;opacity:0.9;cursor:pointer';\n\n    let msDiv = document.createElement('div');\n\n    msDiv.style.cssText = 'padding:0 0 3px 3px;text-align:left;background-color:#200;';\n    container.appendChild(msDiv);\n\n    let msText = document.createElement('div');\n\n    msText.style.cssText = 'color:#f00;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px';\n    msText.innerHTML = 'WebGLRenderer';\n    msDiv.appendChild(msText);\n\n    let msTexts = [];\n    let nLines = 9;\n\n    for (let i = 0; i < nLines; i++) {\n        msTexts[i] = document.createElement('div');\n        msTexts[i].style.cssText = 'color:#f00;background-color:#311;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px';\n        msDiv.appendChild(msTexts[i]);\n        msTexts[i].innerHTML = '-';\n    }\n\n    let lastTime = Date.now();\n\n    return {\n        domElement: container,\n\n        update: function (info) {\n            // refresh only 30time per second\n            if (Date.now() - lastTime < 1000 / 30) {\n                return;\n            }\n\n            lastTime = Date.now();\n\n            let i = 0;\n\n            if (info) {\n                msTexts[i++].textContent = '== Memory =====';\n                msTexts[i++].textContent = 'Programs: ' + info.memory.programs;\n                msTexts[i++].textContent = 'Geometries: ' + info.memory.geometries;\n                msTexts[i++].textContent = 'Textures: ' + info.memory.textures;\n\n                msTexts[i++].textContent = '== Render =====';\n                msTexts[i++].textContent = 'Calls: ' + info.render.calls;\n                msTexts[i++].textContent = 'Vertices: ' + info.render.vertices;\n                msTexts[i++].textContent = 'Faces: ' + info.render.faces;\n                msTexts[i++].textContent = 'Points: ' + info.render.points;\n            }\n        }\n    };\n};\n\nexport default class RenderDebug {\n    constructor (renderer) {\n        this.renderer = renderer;\n    }\n\n    init () {\n        this.statjs = new DebugStats();\n        this.statjs.setModes([0, 1, 2]);\n\n        // Stats.js\n        this.statjs.domElement.style.position = 'absolute';\n        this.statjs.domElement.style.right = '81px';\n        this.statjs.domElement.style.bottom = '0px';\n\n        document.body.appendChild(this.statjs.domElement);\n\n        this.rendererStats = _rendererStats();\n\n        // renderer-stats.js\n        this.rendererStats.domElement.style.position = 'absolute';\n\n        this.rendererStats.domElement.style.right = '0px';\n        this.rendererStats.domElement.style.bottom = '0px';\n\n        document.body.appendChild(this.rendererStats.domElement);\n    }\n\n    before () {\n        this.statjs.begin();\n    }\n\n    after () {\n        this.statjs.end();\n        this.rendererStats.update(this.renderer.info);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/utils/debug/RenderDebug.js\n **/","/**\n * View that shows FPS, memory usage and render time.\n *\n * @returns {object} statsjs object\n */\nlet Stats = function () {\n    let now = (self.performance && self.performance.now) ? self.performance.now.bind(performance) : Date.now;\n\n    let startTime = now();\n    let prevTime = startTime;\n    let frames = 0;\n    let modes = [0];\n\n    let createElement = function (tag, id, css) {\n        let element = document.createElement(tag);\n\n        element.id = id;\n        element.style.cssText = css;\n\n        return element;\n    };\n\n    let createPanel = function (id, fg, bg) {\n        let div = createElement('div', id, 'padding:0 0 3px 3px;text-align:left;background:' + bg);\n\n        let text = createElement('div', id + 'Text', 'font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:' + fg);\n\n        text.innerHTML = id.toUpperCase();\n        div.appendChild(text);\n\n        let graph = createElement('div', id + 'Graph', 'width:74px;height:30px;background:' + fg);\n\n        div.appendChild(graph);\n\n        for (let i = 0; i < 74; i++) {\n            graph.appendChild(createElement('span', '', 'width:1px;height:30px;float:left;opacity:0.9;background:' + bg));\n        }\n\n        return div;\n    };\n\n    let setModes = function (values) {\n        let children = container.children;\n\n        for (let i = 0; i < children.length; i++) {\n            if (values.indexOf(i) < 0) {\n                children[i].style.display = 'none';\n            } else {\n                children[i].style.display = 'block';\n            }\n        }\n\n        modes = values;\n    };\n\n    let setMode = function (value) {\n        let children = container.children;\n\n        for (let i = 0; i < children.length; i++) {\n            children[ i ].style.display = i === value ? 'block' : 'none';\n        }\n\n        modes = [value];\n    };\n\n    let updateGraph = function (dom, value) {\n        let child = dom.appendChild(dom.firstChild);\n\n        child.style.height = Math.min(30, 30 - value * 30) + 'px';\n    };\n\n    let container = createElement('div', 'stats', 'width:80px;opacity:0.9;cursor:pointer');\n\n    // FPS\n    let fps = 0;\n    let fpsMin = Number.POSITIVE_INFINITY;\n    let fpsMax = 0;\n\n    let fpsDiv = createPanel('fps', '#0ff', '#002');\n    let fpsText = fpsDiv.children[0];\n    let fpsGraph = fpsDiv.children[1];\n\n    container.appendChild(fpsDiv);\n\n    // MS\n    let ms = 0;\n    let msMin = Number.POSITIVE_INFINITY;\n    let msMax = 0;\n\n    let msDiv = createPanel('ms', '#0f0', '#020');\n    let msText = msDiv.children[0];\n    let msGraph = msDiv.children[1];\n\n    container.appendChild(msDiv);\n\n    let mem = 0;\n    let memMin = Number.POSITIVE_INFINITY;\n    let memMax = 0;\n    let memDiv = createPanel('mb', '#f08', '#201');\n    let memText = memDiv.children[0];\n    let memGraph = memDiv.children[1];\n\n    // MEM\n    if (self.performance && self.performance.memory) {\n        container.appendChild(memDiv);\n    }\n\n    setModes([modes]);\n\n    return {\n        REVISION: 14,\n        domElement: container,\n        setMode: setMode,\n        setModes: setModes,\n        begin: function () {\n            startTime = now();\n        },\n        end: function () {\n            let time = now();\n\n            ms = time - startTime;\n            msMin = Math.min(msMin, ms);\n            msMax = Math.max(msMax, ms);\n\n            msText.textContent = (ms | 0) + ' MS (' + (msMin | 0) + '-' + (msMax | 0) + ')';\n            updateGraph(msGraph, ms / 200);\n\n            frames++;\n\n            if (time > prevTime + 1000) {\n                fps = Math.round((frames * 1000) / (time - prevTime));\n                fpsMin = Math.min(fpsMin, fps);\n                fpsMax = Math.max(fpsMax, fps);\n\n                fpsText.textContent = fps + ' FPS (' + fpsMin + '-' + fpsMax + ')';\n                updateGraph(fpsGraph, fps / 100);\n\n                prevTime = time;\n                frames = 0;\n\n                if (typeof mem !== 'undefined' && performance && performance.memory) {\n                    let heapSize = performance.memory.usedJSHeapSize;\n                    let heapSizeLimit = performance.memory.jsHeapSizeLimit;\n\n                    mem = Math.round(heapSize * 0.000000954);\n                    memMin = Math.min(memMin, mem);\n                    memMax = Math.max(memMax, mem);\n\n                    memText.textContent = mem + ' MB (' + memMin + '-' + memMax + ')';\n                    updateGraph(memGraph, heapSize / heapSizeLimit);\n                }\n            }\n\n            return time;\n        },\n\n        update: function () {\n            startTime = this.end();\n        }\n    };\n};\n\nexport default Stats;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/utils/debug/statsjs.js\n **/","const DEFAULT_WIDTH = 800;\nconst DEFAULT_HEIGHT = 600;\n\n/**\n * Handles all the rendering. Uses the three.js renderer internally.\n *\n * @class\n */\nclass Renderer {\n\n    /**\n     * @constructor\n     *\n     * @param {string} [divName=gameDiv] - id of the html div to render into.\n     */\n    constructor (divName = 'gameDiv') {\n        this._views = null;\n\n        this._THREErenderer = new THREE.WebGLRenderer();\n\n        this._THREErenderer.setSize(DEFAULT_WIDTH, DEFAULT_HEIGHT);\n        this._THREErenderer.setClearColor(0x000000);\n        this._THREErenderer.setPixelRatio(window.devicePixelRatio);\n        this._THREErenderer.autoClear = false;\n\n        document.getElementById(divName).appendChild(this._THREErenderer.domElement);\n    }\n\n    set views (views) {\n        this._views = views;\n\n        let index = 0;\n\n        for (let view of this._views) {\n            if (index === 0) {\n                // Get the clear color from the first view\n                this._THREErenderer.setClearColor(view.clearColor);\n            }\n\n            view.size = {\n                width: DEFAULT_WIDTH,\n                height: DEFAULT_HEIGHT\n            };\n\n            index += 1;\n        }\n    }\n\n    get views () {\n        return this._views;\n    }\n\n    /**\n     * Render the view\n     *\n     * @returns {void}\n     */\n    render () {\n        this._THREErenderer.clear();\n\n        let info = {\n            memory: {\n                programs: 0,\n                geometries: 0,\n                textures: 0\n            },\n            render: {\n                calls: 0,\n                vertices: 0,\n                faces: 0,\n                points: 0\n            }\n        };\n\n        let index = 0;\n\n        for (let view of this._views) {\n            if (index > 0) {\n                this._THREErenderer.clearDepth();\n            }\n\n            this._THREErenderer.render(view.scene, view.camera);\n\n            info.memory.programs += this._THREErenderer.info.programs.length;\n            info.memory.geometries += this._THREErenderer.info.memory.geometries;\n            info.memory.textures += this._THREErenderer.info.memory.textures;\n            info.render.calls += this._THREErenderer.info.render.calls;\n            info.render.vertices += this._THREErenderer.info.render.vertices;\n            info.render.faces += this._THREErenderer.info.render.faces;\n            info.render.points += this._THREErenderer.info.render.points;\n\n            index += 1;\n        }\n\n        this.info = info;\n    }\n}\n\nexport default Renderer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/Renderer.js\n **/","// https://github.com/IceCreamYou/MainLoop.js\n// The MIT License\n//\n// Copyright (C) 2015 Isaac Sukin\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n// of the Software, and to permit persons to whom the Software is furnished to do\n// so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n/*\n * A main loop useful for games and other animated applications.\n */\n\n// The amount of time (in milliseconds) to simulate each time update()\n// runs. See `MainLoop.setSimulationTimestep()` for details.\nlet simulationTimestep = 1000 / 60;\n\n    // The cumulative amount of in-app time that hasn't been simulated yet.\n    // See the comments inside animate() for details.\nlet frameDelta = 0;\n\n/**\n * The timestamp in milliseconds of the last time the main loop was run.\n * Used to compute the time elapsed between frames.\n */\nlet lastFrameTimeMs = 0;\n\n/**\n * An exponential moving average of the frames per second.\n */\nlet fps = 60;\n\n/**\n * The timestamp (in milliseconds) of the last time the `fps` moving average was updated.\n */\nlet lastFpsUpdate = 0;\n\n/**\n * The number of frames delivered in the current second.\n */\nlet framesThisSecond = 0;\n\n// The number of times update() is called in a given frame. This is only\n// relevant inside of animate(), but a reference is held externally so that\n// this variable is not marked for garbage collection every time the main\n// loop runs.\nlet numUpdateSteps = 0;\n\n// The minimum amount of time in milliseconds that must pass since the last\n// frame was executed before another frame can be executed. The\n// multiplicative inverse caps the FPS (the default of zero means there is\n// no cap).\nlet minFrameDelay = 0;\n\n/*\n * Whether the main loop is running.\n */\nlet running = false;\n\n// `true` if `MainLoop.start()` has been called and the most recent time it\n// was called has not been followed by a call to `MainLoop.stop()`. This is\n// different than `running` because there is a delay of a few milliseconds\n// after `MainLoop.start()` is called before the application is considered\n// \"running.\" This delay is due to waiting for the next frame.\nlet started = false;\n\n// Whether the simulation has fallen too far behind real time.\n// Specifically, `panic` will be set to `true` if too many updates occur in\n// one frame. This is only relevant inside of animate(), but a reference is\n// held externally so that this variable is not marked for garbage\n// collection every time the main loop runs.\nlet panic = false;\n\n// The function that runs the main loop. The unprefixed version of\n// `window.requestAnimationFrame()` is available in all modern browsers\n// now, but node.js doesn't have it, so fall back to timers. The polyfill\n// is adapted from the MIT-licensed\n// https://github.com/underscorediscovery/realtime-multiplayer-in-html5\nlet requestAnimationFrame = window.requestAnimationFrame || (function () {\n    let lastTimestamp = Date.now();\n\n    return function (callback) {\n        let now = Date.now();\n\n        // The next frame should run no sooner than the simulation allows,\n        // but as soon as possible if the current frame has already taken\n        // more time to run than is simulated in one timestep.\n        let timeout = Math.max(0, simulationTimestep - (now - lastTimestamp));\n\n        lastTimestamp = now + timeout;\n\n        return setTimeout(function () {\n            callback(now + timeout);\n        }, timeout);\n    };\n})();\n\n// The function that stops the main loop. The unprefixed version of\n// `window.cancelAnimationFrame()` is available in all modern browsers now,\n// but node.js doesn't have it, so fall back to timers.\nlet cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;\n\n// In all major browsers, replacing non-specified functions with NOOPs\n// seems to be as fast or slightly faster than using conditions to only\n// call the functions if they are specified. This is probably due to empty\n// functions being optimized away. http://jsperf.com/noop-vs-condition\nlet NOOP = function () {};\n\n// A function that runs at the beginning of the main loop.\n// See `MainLoop.setBegin()` for details.\nlet begin = NOOP;\n\n// A function that runs updates (i.e. AI and physics).\n// See `MainLoop.setUpdate()` for details.\nlet update = NOOP;\n\n// A function that draws things on the screen.\n// See `MainLoop.setDraw()` for details.\nlet draw = NOOP;\n\n// A function that runs at the end of the main loop.\n// See `MainLoop.setEnd()` for details.\nlet end = NOOP;\n\n// The ID of the currently executing frame. Used to cancel frames when\n// stopping the loop.\nlet rafHandle = null;\n\n/**\n * Manages the main loop that runs updates and rendering.\n *\n * The main loop is a core part of any application in which state changes\n * even if no events are handled. In games, it is typically responsible for\n * computing physics and AI as well as drawing the result on the screen.\n *\n * The body of this particular loop is run every time the browser is ready to\n * paint another frame. The frequency with which this happens depends primarily\n * on the monitor's refresh rate, which is typically 60 frames per second. Most\n * applications aim to run at 60 FPS for this reason, meaning that the main\n * loop runs about once every 16.7 milliseconds. With this target, everything\n * that happens in the main loop (e.g. all updates and drawing) needs to occur\n * within the \"budget\" of 16.7 milliseconds.  See\n * `MainLoop.setSimulationTimestep()` for more information about typical\n * monitor refresh rates and frame rate targets.\n *\n * The main loop can be started and stopped, but there can only be one MainLoop\n * (except that each Web Worker can have its own MainLoop). There are four main\n * parts of the loop: {@link #setBegin begin}(), {@link #setUpdate update}(),\n * {@link #setDraw draw}(), and {@link #setEnd end}(), in that order. See the\n * functions that set each of them for descriptions of what they are used for.\n * Note that update() can run zero or more times per loop.\n *\n * @class MainLoop\n */\nlet MainLoop = {\n\n    /**\n     * Gets how many milliseconds should be simulated by every run of update().\n     *\n     * See `MainLoop.setSimulationTimestep()` for details on this value.\n     *\n     * @return {Number}\n     *   The number of milliseconds that should be simulated by every run of\n     *   {@link #setUpdate update}().\n     */\n    getSimulationTimestep: function () {\n        return simulationTimestep;\n    },\n\n    /**\n     * Sets how many milliseconds should be simulated by every run of update().\n     *\n     * The perceived frames per second (FPS) is effectively capped at the\n     * multiplicative inverse of the simulation timestep. That is, if the\n     * timestep is 1000 / 60 (which is the default), then the maximum perceived\n     * FPS is effectively 60. Decreasing the timestep increases the maximum\n     * perceived FPS at the cost of running {@link #setUpdate update}() more\n     * times per frame at lower frame rates. Since running update() more times\n     * takes more time to process, this can actually slow down the frame rate.\n     * Additionally, if the amount of time it takes to run update() exceeds or\n     * very nearly exceeds the timestep, the application will freeze and crash\n     * in a spiral of death (unless it is rescued; see `MainLoop.setEnd()` for\n     * an explanation of what can be done if a spiral of death is occurring).\n     *\n     * The exception to this is that interpolating between updates for each\n     * render can increase the perceived frame rate and reduce visual\n     * stuttering. See `MainLoop.setDraw()` for an explanation of how to do\n     * this.\n     *\n     * If you are considering decreasing the simulation timestep in order to\n     * raise the maximum perceived FPS, keep in mind that most monitors can't\n     * display more than 60 FPS. Whether humans can tell the difference among\n     * high frame rates depends on the application, but for reference, film is\n     * usually displayed at 24 FPS, other videos at 30 FPS, most games are\n     * acceptable above 30 FPS, and virtual reality might require 75 FPS to\n     * feel natural. Some gaming monitors go up to 144 FPS. Setting the\n     * timestep below 1000 / 144 is discouraged and below 1000 / 240 is\n     * strongly discouraged. The default of 1000 / 60 is good in most cases.\n     *\n     * The simulation timestep should typically only be changed at\n     * deterministic times (e.g. before the main loop starts for the first\n     * time, and not in response to user input or slow frame rates) to avoid\n     * introducing non-deterministic behavior. The update timestep should be\n     * the same for all players/users in multiplayer/multi-user applications.\n     *\n     * See also `MainLoop.getSimulationTimestep()`.\n     *\n     * @param {Number} timestep\n     *   The number of milliseconds that should be simulated by every run of\n     *   {@link #setUpdate update}().\n     */\n    setSimulationTimestep: function (timestep) {\n        simulationTimestep = timestep;\n\n        return this;\n    },\n\n    /**\n     * Returns the exponential moving average of the frames per second.\n     *\n     * @return {Number}\n     *   The exponential moving average of the frames per second.\n     */\n    getFPS: function () {\n        return fps;\n    },\n\n    /**\n     * Gets the maximum frame rate.\n     *\n     * Other factors also limit the FPS; see `MainLoop.setSimulationTimestep`\n     * for details.\n     *\n     * See also `MainLoop.setMaxAllowedFPS()`.\n     *\n     * @return {Number}\n     *   The maximum number of frames per second allowed.\n     */\n    getMaxAllowedFPS: function () {\n        return 1000 / minFrameDelay;\n    },\n\n    /**\n     * Sets a maximum frame rate.\n     *\n     * See also `MainLoop.getMaxAllowedFPS()`.\n     *\n     * @param {Number} [fps=Infinity]\n     *   The maximum number of frames per second to execute. If Infinity or not\n     *   passed, there will be no FPS cap (although other factors do limit the\n     *   FPS; see `MainLoop.setSimulationTimestep` for details). If zero, this\n     *   will stop the loop, and when the loop is next started, it will return\n     *   to the previous maximum frame rate. Passing negative values will stall\n     *   the loop until this function is called again with a positive value.\n     *\n     * @chainable\n     */\n    setMaxAllowedFPS: function (fps) {\n        if (typeof fps === 'undefined') {\n            fps = Infinity;\n        }\n\n        if (fps === 0) {\n            this.stop();\n        } else {\n            // Dividing by Infinity returns zero.\n            minFrameDelay = 1000 / fps;\n        }\n        return this;\n    },\n\n    /**\n     * Reset the amount of time that has not yet been simulated to zero.\n     *\n     * This introduces non-deterministic behavior if called after the\n     * application has started running (unless it is being reset, in which case\n     * it doesn't matter). However, this can be useful in cases where the\n     * amount of time that has not yet been simulated has grown very large\n     * (for example, when the application's tab gets put in the background and\n     * the browser throttles the timers as a result). In applications with\n     * lockstep the player would get dropped, but in other networked\n     * applications it may be necessary to snap or ease the player/user to the\n     * authoritative state and discard pending updates in the process. In\n     * non-networked applications it may also be acceptable to simply resume\n     * the application where it last left off and ignore the accumulated\n     * unsimulated time.\n     *\n     * @return {Number}\n     *   The cumulative amount of elapsed time in milliseconds that has not yet\n     *   been simulated, but is being discarded as a result of calling this\n     *   function.\n     */\n    resetFrameDelta: function () {\n        let oldFrameDelta = frameDelta;\n\n        frameDelta = 0;\n\n        return oldFrameDelta;\n    },\n\n    /**\n     * Sets the function that runs at the beginning of the main loop.\n     *\n     * The begin() function is typically used to process input before the\n     * updates run. Processing input here (in chunks) can reduce the running\n     * time of event handlers, which is useful because long-running event\n     * handlers can sometimes delay frames.\n     *\n     * Unlike {@link #setUpdate update}(), which can run zero or more times per\n     * frame, begin() always runs exactly once per frame. This makes it useful\n     * for any updates that are not dependent on time in the simulation.\n     * Examples include adjusting HUD calculations or performing long-running\n     * updates incrementally. Compared to {@link #setEnd end}(), generally\n     * actions should occur in begin() if they affect anything that\n     * {@link #setUpdate update}() or {@link #setDraw draw}() use.\n     *\n     * @param {Function} begin\n     *   The begin() function.\n     * @param {Number} [begin.timestamp]\n     *   The current timestamp (when the frame started), in milliseconds. This\n     *   should only be used for comparison to other timestamps because the\n     *   epoch (i.e. the \"zero\" time) depends on the engine running this code.\n     *   In engines that support `DOMHighResTimeStamp` (all modern browsers\n     *   except iOS Safari 8) the epoch is the time the page started loading,\n     *   specifically `performance.timing.navigationStart`. Everywhere else,\n     *   including node.js, the epoch is the Unix epoch (1970-01-01T00:00:00Z).\n     * @param {Number} [begin.delta]\n     *   The total elapsed time that has not yet been simulated, in\n     *   milliseconds.\n     */\n    setBegin: function (fun) {\n        begin = fun || begin;\n        return this;\n    },\n\n    /**\n     * Sets the function that runs updates (e.g. AI and physics).\n     *\n     * The update() function should simulate anything that is affected by time.\n     * It can be called zero or more times per frame depending on the frame\n     * rate.\n     *\n     * As with everything in the main loop, the running time of update()\n     * directly affects the frame rate. If update() takes long enough that the\n     * frame rate drops below the target (\"budgeted\") frame rate, parts of the\n     * update() function that do not need to execute between every frame can be\n     * moved into Web Workers. (Various sources on the internet sometimes\n     * suggest other scheduling patterns using setTimeout() or setInterval().\n     * These approaches sometimes offer modest improvements with minimal\n     * changes to existing code, but because JavaScript is single-threaded, the\n     * updates will still block rendering and drag down the frame rate. Web\n     * Workers execute in separate threads, so they free up more time in the\n     * main loop.)\n     *\n     * This script can be imported into a Web Worker using importScripts() and\n     * used to run a second main loop in the worker. Some considerations:\n     *\n     * - Profile your code before doing the work to move it into Web Workers.\n     *   It could be the rendering that is the bottleneck, in which case the\n     *   solution is to decrease the visual complexity of the scene.\n     * - It doesn't make sense to move the *entire* contents of update() into\n     *   workers unless {@link #setDraw draw}() can interpolate between frames.\n     *   The lowest-hanging fruit is background updates (like calculating\n     *   citizens' happiness in a city-building game), physics that doesn't\n     *   affect the scene (like flags waving in the wind), and anything that is\n     *   occluded or happening far off screen.\n     * - If draw() needs to interpolate physics based on activity that occurs\n     *   in a worker, the worker needs to pass the interpolation value back to\n     *   the main thread so that is is available to draw().\n     * - Web Workers can't access the state of the main thread, so they can't\n     *   directly modify objects in your scene. Moving data to and from Web\n     *   Workers is a pain. The fastest way to do it is with Transferable\n     *   Objects: basically, you can pass an ArrayBuffer to a worker,\n     *   destroying the original reference in the process.\n     *\n     * You can read more about Web Workers and Transferable Objects at\n     * [HTML5 Rocks](http://www.html5rocks.com/en/tutorials/workers/basics/).\n     *\n     * @param {Function} update\n     *   The update() function.\n     * @param {Number} [update.delta]\n     *   The amount of time in milliseconds to simulate in the update. In most\n     *   cases this timestep never changes in order to ensure deterministic\n     *   updates. The timestep is the same as that returned by\n     *   `MainLoop.getSimulationTimestep()`.\n     */\n    setUpdate: function (fun) {\n        update = fun || update;\n        return this;\n    },\n\n    /**\n     * Sets the function that draws things on the screen.\n     *\n     * The draw() function gets passed the percent of time that the next run of\n     * {@link #setUpdate update}() will simulate that has actually elapsed, as\n     * a decimal. In other words, draw() gets passed how far between update()\n     * calls it is. This is useful because the time simulated by update() and\n     * the time between draw() calls is usually different, so the parameter to\n     * draw() can be used to interpolate motion between frames to make\n     * rendering appear smoother. To illustrate, if update() advances the\n     * simulation at each vertical bar in the first row below, and draw() calls\n     * happen at each vertical bar in the second row below, then some frames\n     * will have time left over that is not yet simulated by update() when\n     * rendering occurs in draw():\n     *\n     *     update() timesteps:  |  |  |  |  |  |  |  |  |\n     *     draw() calls:        |   |   |   |   |   |   |\n     *\n     * To interpolate motion for rendering purposes, objects' state after the\n     * last update() must be retained and used to calculate an intermediate\n     * state. Note that this means renders will be up to one update() behind.\n     * This is still better than extrapolating (projecting objects' state after\n     * a future update()) which can produce bizarre results. Storing multiple\n     * states can be difficult to set up, and keep in mind that running this\n     * process takes time that could push the frame rate down, so it's often\n     * not worthwhile unless stuttering is visible.\n     *\n     * @param {Function} draw\n     *   The draw() function.\n     * @param {Number} [draw.interpolationPercentage]\n     *   The cumulative amount of time that hasn't been simulated yet, divided\n     *   by the amount of time that will be simulated the next time update()\n     *   runs. Useful for interpolating frames.\n     */\n    setDraw: function (fun) {\n        draw = fun || draw;\n        return this;\n    },\n\n    /**\n     * Sets the function that runs at the end of the main loop.\n     *\n     * Unlike {@link #setUpdate update}(), which can run zero or more times per\n     * frame, end() always runs exactly once per frame. This makes it useful\n     * for any updates that are not dependent on time in the simulation.\n     * Examples include cleaning up any temporary state set up by\n     * {@link #setBegin begin}(), lowering the visual quality if the frame rate\n     * is too low, or performing long-running updates incrementally. Compared\n     * to begin(), generally actions should occur in end() if they use anything\n     * that update() or {@link #setDraw draw}() affect.\n     *\n     * @param {Function} end\n     *   The end() function.\n     * @param {Number} [end.fps]\n     *   The exponential moving average of the frames per second. This is the\n     *   same value returned by `MainLoop.getFPS()`. It can be used to take\n     *   action when the FPS is too low (or to restore to normalcy if the FPS\n     *   moves back up). Examples of actions to take if the FPS is too low\n     *   include exiting the application, lowering the visual quality, stopping\n     *   or reducing activities outside of the main loop like event handlers or\n     *   audio playback, performing non-critical updates less frequently, or\n     *   increasing the simulation timestep (by calling\n     *   `MainLoop.setSimulationTimestep()`). Note that this last option\n     *   results in more time being simulated per update() call, which causes\n     *   the application to behave non-deterministically.\n     * @param {Boolean} [end.panic=false]\n     *   Indicates whether the simulation has fallen too far behind real time.\n     *   Specifically, `panic` will be `true` if too many updates occurred in\n     *   one frame. In networked lockstep applications, the application should\n     *   wait for some amount of time to see if the user can catch up before\n     *   dropping the user. In networked but non-lockstep applications, this\n     *   typically indicates that the user needs to be snapped or eased to the\n     *   current authoritative state. When this happens, it may be convenient\n     *   to call `MainLoop.resetFrameDelta()` to discard accumulated pending\n     *   updates. In non-networked applications, it may be acceptable to allow\n     *   the application to keep running for awhile to see if it will catch up.\n     *   However, this could also cause the application to look like it is\n     *   running very quickly for a few frames as it transitions through the\n     *   intermediate states. An alternative that may be acceptable is to\n     *   simply ignore the unsimulated elapsed time by calling\n     *   `MainLoop.resetFrameDelta()` even though this introduces\n     *   non-deterministic behavior. In all cases, if the application panics\n     *   frequently, this is an indication that the main loop is running too\n     *   slowly. However, most of the time the drop in frame rate will probably\n     *   be noticeable before a panic occurs. To help the application catch up\n     *   after a panic caused by a spiral of death, the same steps can be taken\n     *   that are suggested above if the FPS drops too low.\n     */\n    setEnd: function (fun) {\n        end = fun || end;\n        return this;\n    },\n\n    /**\n     * Starts the main loop.\n     *\n     * Note that the application is not considered \"running\" immediately after\n     * this function returns; rather, it is considered \"running\" after the\n     * application draws its first frame. The distinction is that event\n     * handlers should remain paused until the application is running, even\n     * after `MainLoop.start()` is called. Check `MainLoop.isRunning()` for the\n     * current status. To act after the application starts, register a callback\n     * with requestAnimationFrame() after calling this function and execute the\n     * action in that callback. It is safe to call `MainLoop.start()` multiple\n     * times even before the application starts running and without calling\n     * `MainLoop.stop()` in between, although there is no reason to do this;\n     * the main loop will only start if it is not already started.\n     *\n     * See also `MainLoop.stop()`.\n     */\n    start: function () {\n        if (!started) {\n            // Since the application doesn't start running immediately, track\n            // whether this function was called and use that to keep it from\n            // starting the main loop multiple times.\n            started = true;\n\n            // In the main loop, draw() is called after update(), so if we\n            // entered the main loop immediately, we would never render the\n            // initial state before any updates occur. Instead, we run one\n            // frame where all we do is draw, and then start the main loop with\n            // the next frame.\n            rafHandle = requestAnimationFrame(function (timestamp) {\n                // Render the initial state before any updates occur.\n                draw(1);\n\n                // The application isn't considered \"running\" until the\n                // application starts drawing.\n                running = true;\n\n                // Reset variables that are used for tracking time so that we\n                // don't simulate time passed while the application was paused.\n                lastFrameTimeMs = timestamp;\n                lastFpsUpdate = timestamp;\n                framesThisSecond = 0;\n\n                // Start the main loop.\n                rafHandle = requestAnimationFrame(animate);\n            });\n        }\n        return this;\n    },\n\n    /**\n     * Stops the main loop.\n     *\n     * Event handling and other background tasks should also be paused when the\n     * main loop is paused.\n     *\n     * Note that pausing in multiplayer/multi-user applications will cause the\n     * player's/user's client to become out of sync. In this case the\n     * simulation should exit, or the player/user needs to be snapped to their\n     * updated position when the main loop is started again.\n     *\n     * See also `MainLoop.start()` and `MainLoop.isRunning()`.\n     */\n    stop: function () {\n        running = false;\n        started = false;\n        cancelAnimationFrame(rafHandle);\n\n        return this;\n    },\n\n    /**\n     * Returns whether the main loop is currently running.\n     *\n     * See also `MainLoop.start()` and `MainLoop.stop()`.\n     *\n     * @return {Boolean}\n     *   Whether the main loop is currently running.\n     */\n    isRunning: function () {\n        return running;\n    }\n};\n\n/**\n * The main loop that runs updates and rendering.\n *\n * @param {DOMHighResTimeStamp} timestamp\n *   The current timestamp. In practice this is supplied by\n *   requestAnimationFrame at the time that it starts to fire callbacks. This\n *   should only be used for comparison to other timestamps because the epoch\n *   (i.e. the \"zero\" time) depends on the engine running this code. In engines\n *   that support `DOMHighResTimeStamp` (all modern browsers except iOS Safari\n *   8) the epoch is the time the page started loading, specifically\n *   `performance.timing.navigationStart`. Everywhere else, including node.js,\n *   the epoch is the Unix epoch (1970-01-01T00:00:00Z).\n *\n * @ignore\n */\nfunction animate (timestamp) {\n    // Throttle the frame rate (if minFrameDelay is set to a non-zero value by\n    // `MainLoop.setMaxAllowedFPS()`).\n    if (timestamp < lastFrameTimeMs + minFrameDelay) {\n        // Run the loop again the next time the browser is ready to render.\n        rafHandle = requestAnimationFrame(animate);\n\n        return;\n    }\n\n    // frameDelta is the cumulative amount of in-app time that hasn't been\n    // simulated yet. Add the time since the last frame. We need to track total\n    // not-yet-simulated time (as opposed to just the time elapsed since the\n    // last frame) because not all actually elapsed time is guaranteed to be\n    // simulated each frame. See the comments below for details.\n    frameDelta += timestamp - lastFrameTimeMs;\n    lastFrameTimeMs = timestamp;\n\n    // Run any updates that are not dependent on time in the simulation. See\n    // `MainLoop.setBegin()` for additional details on how to use this.\n    begin(timestamp, frameDelta);\n\n    // Update the estimate of the frame rate, `fps`. Every second, the number\n    // of frames that occurred in that second are included in an exponential\n    // moving average of all frames per second, with an alpha of 0.25. This\n    // means that more recent seconds affect the estimated frame rate more than\n    // older seconds.\n    if (timestamp > lastFpsUpdate + 1000) {\n        // Compute the new exponential moving average with an alpha of 0.25.\n        // Using constants inline is okay here.\n        fps = 0.25 * framesThisSecond + 0.75 * fps;\n\n        lastFpsUpdate = timestamp;\n        framesThisSecond = 0;\n    }\n\n    framesThisSecond++;\n\n    /*\n     * A naive way to move an object along its X-axis might be to write a main\n     * loop containing the statement `obj.x += 10;` which would move the object\n     * 10 units per frame. This approach suffers from the issue that it is\n     * dependent on the frame rate. In other words, if your application is\n     * running slowly (that is, fewer frames per second), your object will also\n     * appear to move slowly, whereas if your application is running quickly\n     * (that is, more frames per second), your object will appear to move\n     * quickly. This is undesirable, especially in multiplayer/multi-user\n     * applications.\n     *\n     * One solution is to multiply the speed by the amount of time that has\n     * passed between rendering frames. For example, if you want your object to\n     * move 600 units per second, you might write `obj.x += 600 * delta`, where\n     * `delta` is the time passed since the last frame. (For convenience, let's\n     * move this statement to an update() function that takes `delta` as a\n     * parameter.) This way, your object will move a constant distance over\n     * time. However, at low frame rates and high speeds, your object will move\n     * large distances every frame, which can cause it to do strange things\n     * such as move through walls. Additionally, we would like our program to\n     * be deterministic. That is, every time we run the application with the\n     * same input, we would like exactly the same output. If the time between\n     * frames (the `delta`) varies, our output will diverge the longer the\n     * program runs due to accumulated rounding errors, even at normal frame\n     * rates.\n     *\n     * A better solution is to separate the amount of time simulated in each\n     * update() from the amount of time between frames. Our update() function\n     * doesn't need to change; we just need to change the delta we pass to it\n     * so that each update() simulates a fixed amount of time (that is, `delta`\n     * should have the same value each time update() is called). The update()\n     * function can be run multiple times per frame if needed to simulate the\n     * total amount of time passed since the last frame. (If the time that has\n     * passed since the last frame is less than the fixed simulation time, we\n     * just won't run an update() until the the next frame. If there is\n     * unsimulated time left over that is less than our timestep, we'll just\n     * leave it to be simulated during the next frame.) This approach avoids\n     * inconsistent rounding errors and ensures that there are no giant leaps\n     * through walls between frames.\n     *\n     * That is what is done below. It introduces a new problem, but it is a\n     * manageable one: if the amount of time spent simulating is consistently\n     * longer than the amount of time between frames, the application could\n     * freeze and crash in a spiral of death. This won't happen as long as the\n     * fixed simulation time is set to a value that is high enough that\n     * update() calls usually take less time than the amount of time they're\n     * simulating. If it does start to happen anyway, see `MainLoop.setEnd()`\n     * for a discussion of ways to stop it.\n     *\n     * Additionally, see `MainLoop.setUpdate()` for a discussion of performance\n     * considerations.\n     *\n     * Further reading for those interested:\n     *\n     * - http://gameprogrammingpatterns.com/game-loop.html\n     * - http://gafferongames.com/game-physics/fix-your-timestep/\n     * - https://gamealchemist.wordpress.com/2013/03/16/thoughts-on-the-javascript-game-loop/\n     * - https://developer.mozilla.org/en-US/docs/Games/Anatomy\n     */\n    numUpdateSteps = 0;\n    while (frameDelta >= simulationTimestep) {\n        update(simulationTimestep);\n        frameDelta -= simulationTimestep;\n\n        /*\n         * Sanity check: bail if we run the loop too many times.\n         *\n         * One way this could happen is if update() takes longer to run than\n         * the time it simulates, thereby causing a spiral of death. For ways\n         * to avoid this, see `MainLoop.setEnd()`. Another way this could\n         * happen is if the browser throttles serving frames, which typically\n         * occurs when the tab is in the background or the device battery is\n         * low. An event outside of the main loop such as audio processing or\n         * synchronous resource reads could also cause the application to hang\n         * temporarily and accumulate not-yet-simulated time as a result.\n         *\n         * 240 is chosen because, for any sane value of simulationTimestep, 240\n         * updates will simulate at least one second, and it will simulate four\n         * seconds with the default value of simulationTimestep. (Safari\n         * notifies users that the script is taking too long to run if it takes\n         * more than five seconds.)\n         *\n         * If there are more updates to run in a frame than this, the\n         * application will appear to slow down to the user until it catches\n         * back up. In networked applications this will usually cause the user\n         * to get out of sync with their peers, but if the updates are taking\n         * this long already, they're probably already out of sync.\n         */\n        if (++numUpdateSteps >= 240) {\n            panic = true;\n            break;\n        }\n    }\n\n    /*\n     * Render the screen. We do this regardless of whether update() has run\n     * during this frame because it is possible to interpolate between updates\n     * to make the frame rate appear faster than updates are actually\n     * happening. See `MainLoop.setDraw()` for an explanation of how to do\n     * that.\n     *\n     * We draw after updating because we want the screen to reflect a state of\n     * the application that is as up-to-date as possible. (`MainLoop.start()`\n     * draws the very first frame in the application's initial state, before\n     * any updates have occurred.) Some sources speculate that rendering\n     * earlier in the requestAnimationFrame callback can get the screen painted\n     * faster; this is mostly not true, and even when it is, it's usually just\n     * a trade-off between rendering the current frame sooner and rendering the\n     * next frame later.\n     *\n     * See `MainLoop.setDraw()` for details about draw() itself.\n     */\n    draw(frameDelta / simulationTimestep);\n\n    // Run any updates that are not dependent on time in the simulation. See\n    // `MainLoop.setEnd()` for additional details on how to use this.\n    end(fps, panic);\n\n    panic = false;\n\n    // Run the loop again the next time the browser is ready to render.\n    rafHandle = requestAnimationFrame(animate);\n}\n\nexport default MainLoop;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/utils/mainloop.js\n **/","import Howler from 'howler';\n\nlet _assets = {\n    atlases: new Map(),\n    textures: new Map(),\n    maps: new Map(),\n    fonts: new Map(),\n    audio: new Map()\n};\n\nlet _loadHowlerAudio = function (name, spriteJson) {\n    return new Promise((resolve, reject) => {\n        spriteJson.onload = function () {\n            return resolve();\n        };\n\n        spriteJson.onloaderror = function (soundId, err) {\n            return reject(err);\n        };\n\n        let sound = new Howler.Howl(spriteJson);\n\n        let audio = {\n            mapping: spriteJson,\n            sound: sound\n        };\n\n        _assets.audio.set(name, audio);\n        console.log(_assets);\n    });\n};\n\nlet _loadAudioSprite = function (audioSpritePath, name) {\n    return _loadJson(audioSpritePath + name + '.json').then(function (spriteJson) {\n        // FIXME change \"urls\" to \"src\" to work with Howler 2\n        spriteJson.src = spriteJson.urls;\n\n        let fullSources = [];\n\n        for (let src of spriteJson.src) {\n            fullSources.push(audioSpritePath + src);\n        }\n\n        spriteJson.src = fullSources;\n\n        return _loadHowlerAudio(name, spriteJson);\n    });\n};\n\nlet _loadFont = function (fontsPath, name) {\n    let font = {\n        mapping: null,\n        texture: null\n    };\n\n    return _loadJson(fontsPath + name + '.json').then((fontJson) => {\n        font.mapping = fontJson;\n\n        // TODO only supports 1 font page for now\n        return _loadTexture(name, fontsPath + fontJson.pages[0]);\n    }).then(() => {\n        font.texture = _assets.textures.get(name);\n\n        _assets.fonts.set(name, font);\n    });\n};\n\nlet _loadTexture = function (name, url) {\n    return new Promise(function (resolve, reject) {\n        _textureLoader.load(url, function (texture) {\n            _assets.textures.set(name, texture);\n\n            return resolve();\n        }, function (progress) {\n            console.log((progress.loaded / progress.total * 100) + '% loaded');\n        }, function (err) {\n            return reject(err);\n        });\n    });\n};\n\nlet _loadXhr = function (url) {\n    return new Promise(function (resolve, reject) {\n        _xhrLoader.load(url, function (response) {\n            return resolve(response);\n        }, function (progress) {\n            console.log((progress.loaded / progress.total * 100) + '% loaded');\n        }, function (err) {\n            return reject(err);\n        });\n    });\n};\n\nlet _loadJson = function (url) {\n    return _loadXhr(url).then(function (response) {\n        try {\n            return JSON.parse(response);\n        } catch (err) {\n            throw err;\n        }\n    });\n};\n\nlet _loadAtlas = function (atlasesPath, name) {\n    return _loadJson(atlasesPath + name + '.json').then(function (atlas) {\n        return atlas;\n    }).then(function (atlas) {\n        _assets.atlases.set(name, atlas);\n        return _loadTexture(name, atlasesPath + atlas.meta.image);\n    });\n};\n\nlet _loadMap = function (mapsPath, name) {\n    return _loadJson(mapsPath + name + '.json').then(function (atlas) {\n        _assets.maps.set(name, atlas);\n    });\n};\n\nlet _textureLoader = null;\nlet _xhrLoader = null;\n\nlet AssetLoader = {\n    init: function (assetConfig) {\n        _textureLoader = new THREE.TextureLoader();\n        _xhrLoader = new THREE.XHRLoader();\n\n        let assetsToLoad = [];\n        let paths = assetConfig.paths;\n\n        for (let atlasName of assetConfig.textureAtlases) {\n            assetsToLoad.push(_loadAtlas(paths.atlases + '/', atlasName));\n        }\n\n        for (let mapName of assetConfig.maps) {\n            assetsToLoad.push(_loadMap(paths.maps + '/', mapName));\n        }\n\n        for (let fontName of assetConfig.fonts) {\n            assetsToLoad.push(_loadFont(paths.fonts + '/', fontName));\n        }\n\n        for (let audioSpriteName of assetConfig.audio) {\n            assetsToLoad.push(_loadAudioSprite(paths.audio + '/', audioSpriteName));\n        }\n\n        return Promise.all(assetsToLoad);\n    },\n\n    getTexture (name) {\n        let texture = _assets.textures.get(name);\n\n        if (!texture) {\n            throw new Error('Texture does not exist: ' + name);\n        }\n\n        return texture;\n    },\n\n    cloneTexture (name) {\n        let texture = this.getTexture(name);\n        let clone = texture.clone();\n\n        clone.needsUpdate = true;\n\n        return clone;\n    },\n\n    getMap (name) {\n        let map = _assets.maps.get(name);\n\n        if (!map) {\n            throw new Error('Map does not exist: ' + name);\n        }\n\n        return map;\n    },\n\n    getAtlasMapping (name) {\n        let mapping = _assets.atlases.get(name);\n\n        if (!mapping) {\n            throw new Error('Atlas mapping does not exist: ' + name);\n        }\n\n        return mapping;\n    },\n\n    getFont (name) {\n        let font = _assets.fonts.get(name);\n\n        if (!font) {\n            throw new Error('Font does not exist: ' + name);\n        }\n\n        return font;\n    },\n\n    getAudioSprite (name) {\n        let audioSprite = _assets.audio.get(name);\n\n        if (!audioSprite) {\n            throw new Error('Audio sprite does not exist: ' + name);\n        }\n\n        return audioSprite;\n    }\n};\n\nexport default AssetLoader;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/AssetManager.js\n **/","/*! howler.js v2.0.0-beta5 | (c) 2013-2015, James Simpson of GoldFire Studios | MIT License | howlerjs.com */\n!function(){\"use strict\";function e(){try{\"undefined\"!=typeof AudioContext?n=new AudioContext:\"undefined\"!=typeof webkitAudioContext?n=new webkitAudioContext:o=!1}catch(e){o=!1}if(!o)if(\"undefined\"!=typeof Audio)try{var u=new Audio;\"undefined\"==typeof u.oncanplaythrough&&(d=\"canplay\")}catch(e){t=!0}else t=!0;try{var u=new Audio;u.muted&&(t=!0)}catch(e){}o&&(r=\"undefined\"==typeof n.createGain?n.createGainNode():n.createGain(),r.gain.value=1,r.connect(n.destination))}var n=null,o=!0,t=!1,r=null,d=\"canplaythrough\";e();var u=function(){this.init()};u.prototype={init:function(){var e=this||i;return e._codecs={},e._howls=[],e._muted=!1,e._volume=1,e.state=\"running\",e.autoSuspend=!0,e._autoSuspend(),e.mobileAutoEnable=!0,e.noAudio=t,e.usingWebAudio=o,e.ctx=n,t||e._setupCodecs(),e},volume:function(e){var n=this||i;if(e=parseFloat(e),\"undefined\"!=typeof e&&e>=0&&1>=e){n._volume=e,o&&(r.gain.value=e);for(var t=0;t<n._howls.length;t++)if(!n._howls[t]._webAudio)for(var d=n._howls[t]._getSoundIds(),u=0;u<d.length;u++){var a=n._howls[t]._soundById(d[u]);a&&a._node&&(a._node.volume=a._volume*e)}return n}return n._volume},mute:function(e){var n=this||i;n._muted=e,o&&(r.gain.value=e?0:n._volume);for(var t=0;t<n._howls.length;t++)if(!n._howls[t]._webAudio)for(var d=n._howls[t]._getSoundIds(),u=0;u<d.length;u++){var a=n._howls[t]._soundById(d[u]);a&&a._node&&(a._node.muted=e?!0:a._muted)}return n},unload:function(){for(var o=this||i,t=o._howls.length-1;t>=0;t--)o._howls[t].unload();return o.usingWebAudio&&\"undefined\"!=typeof n.close&&(o.ctx=null,n.close(),e(),o.ctx=n),o},codecs:function(e){return(this||i)._codecs[e]},_setupCodecs:function(){var e=this||i,n=new Audio,o=n.canPlayType(\"audio/mpeg;\").replace(/^no$/,\"\"),t=/OPR\\//.test(navigator.userAgent);return e._codecs={mp3:!(t||!o&&!n.canPlayType(\"audio/mp3;\").replace(/^no$/,\"\")),mpeg:!!o,opus:!!n.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/,\"\"),ogg:!!n.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/,\"\"),wav:!!n.canPlayType('audio/wav; codecs=\"1\"').replace(/^no$/,\"\"),aac:!!n.canPlayType(\"audio/aac;\").replace(/^no$/,\"\"),m4a:!!(n.canPlayType(\"audio/x-m4a;\")||n.canPlayType(\"audio/m4a;\")||n.canPlayType(\"audio/aac;\")).replace(/^no$/,\"\"),mp4:!!(n.canPlayType(\"audio/x-mp4;\")||n.canPlayType(\"audio/mp4;\")||n.canPlayType(\"audio/aac;\")).replace(/^no$/,\"\"),weba:!!n.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/,\"\"),webm:!!n.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/,\"\")},e},_enableMobileAudio:function(){var e=this||i,o=/iPhone|iPad|iPod|Android|BlackBerry|BB10|Silk/i.test(navigator.userAgent),t=!!(\"ontouchend\"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0);if(!n||!e._mobileEnabled&&o&&t){e._mobileEnabled=!1;var r=function(){var o=n.createBuffer(1,1,22050),t=n.createBufferSource();t.buffer=o,t.connect(n.destination),\"undefined\"==typeof t.start?t.noteOn(0):t.start(0),t.onended=function(){t.disconnect(0),e._mobileEnabled=!0,e.mobileAutoEnable=!1,document.removeEventListener(\"touchend\",r,!0)}};return document.addEventListener(\"touchend\",r,!0),e}},_autoSuspend:function(){var e=this;if(e.autoSuspend&&n&&\"undefined\"!=typeof n.suspend&&o){for(var t=0;t<e._howls.length;t++)if(e._howls[t]._webAudio)for(var r=0;r<e._howls[t]._sounds.length;r++)if(!e._howls[t]._sounds[r]._paused)return e;return e._suspendTimer=setTimeout(function(){e.autoSuspend&&(e._suspendTimer=null,e.state=\"suspending\",n.suspend().then(function(){e.state=\"suspended\",e._resumeAfterSuspend&&(delete e._resumeAfterSuspend,e._autoResume())}))},3e4),e}},_autoResume:function(){var e=this;if(n&&\"undefined\"!=typeof n.resume&&o)return\"running\"===e.state&&e._suspendTimer?(clearTimeout(e._suspendTimer),e._suspendTimer=null):\"suspended\"===e.state?(e.state=\"resuming\",n.resume().then(function(){e.state=\"running\"})):\"suspending\"===e.state&&(e._resumeAfterSuspend=!0),e}};var i=new u,a=function(e){var n=this;return e.src&&0!==e.src.length?void n.init(e):void console.error(\"An array of source files must be passed with any new Howl.\")};a.prototype={init:function(e){var t=this;return t._autoplay=e.autoplay||!1,t._ext=e.ext||null,t._html5=e.html5||!1,t._muted=e.mute||!1,t._loop=e.loop||!1,t._pool=e.pool||5,t._preload=\"boolean\"==typeof e.preload?e.preload:!0,t._rate=e.rate||1,t._sprite=e.sprite||{},t._src=\"string\"!=typeof e.src?e.src:[e.src],t._volume=void 0!==e.volume?e.volume:1,t._duration=0,t._loaded=!1,t._sounds=[],t._endTimers={},t._onend=e.onend?[{fn:e.onend}]:[],t._onfaded=e.onfaded?[{fn:e.onfaded}]:[],t._onload=e.onload?[{fn:e.onload}]:[],t._onloaderror=e.onloaderror?[{fn:e.onloaderror}]:[],t._onpause=e.onpause?[{fn:e.onpause}]:[],t._onplay=e.onplay?[{fn:e.onplay}]:[],t._onstop=e.onstop?[{fn:e.onstop}]:[],t._webAudio=o&&!t._html5,\"undefined\"!=typeof n&&n&&i.mobileAutoEnable&&i._enableMobileAudio(),i._howls.push(t),t._preload&&t.load(),t},load:function(){var e=this,n=null;if(t)return void e._emit(\"loaderror\",null,\"No audio support.\");\"string\"==typeof e._src&&(e._src=[e._src]);for(var o=0;o<e._src.length;o++){var r,d;if(e._ext&&e._ext[o]?r=e._ext[o]:(d=e._src[o],r=/^data:audio\\/([^;,]+);/i.exec(d),r||(r=/\\.([^.]+)$/.exec(d.split(\"?\",1)[0])),r&&(r=r[1].toLowerCase())),i.codecs(r)){n=e._src[o];break}}return n?(e._src=n,\"https:\"===window.location.protocol&&\"http:\"===n.slice(0,5)&&(e._html5=!0,e._webAudio=!1),new _(e),e._webAudio&&l(e),e):void e._emit(\"loaderror\",null,\"No codec support for selected audio sources.\")},play:function(e){var o=this,t=arguments,r=null;if(\"number\"==typeof e)r=e,e=null;else if(\"undefined\"==typeof e){e=\"__default\";for(var u=0,a=0;a<o._sounds.length;a++)o._sounds[a]._paused&&!o._sounds[a]._ended&&(u++,r=o._sounds[a]._id);1===u?e=null:r=null}var _=r?o._soundById(r):o._inactiveSound();if(!_)return null;if(r&&!e&&(e=_._sprite||\"__default\"),!o._loaded&&!o._sprite[e])return o.once(\"load\",function(){o.play(o._soundById(_._id)?_._id:void 0)}),_._id;if(r&&!_._paused)return _._id;o._webAudio&&i._autoResume();var s=_._seek>0?_._seek:o._sprite[e][0]/1e3,l=(o._sprite[e][0]+o._sprite[e][1])/1e3-s,f=1e3*l/Math.abs(_._rate);f!==1/0&&(o._endTimers[_._id]=setTimeout(o._ended.bind(o,_),f)),_._paused=!1,_._ended=!1,_._sprite=e,_._seek=s,_._start=o._sprite[e][0]/1e3,_._stop=(o._sprite[e][0]+o._sprite[e][1])/1e3,_._loop=!(!_._loop&&!o._sprite[e][2]);var c=_._node;if(o._webAudio){var p=function(){o._refreshBuffer(_);var e=_._muted||o._muted?0:_._volume*i.volume();c.gain.setValueAtTime(e,n.currentTime),_._playStart=n.currentTime,\"undefined\"==typeof c.bufferSource.start?_._loop?c.bufferSource.noteGrainOn(0,s,86400):c.bufferSource.noteGrainOn(0,s,l):_._loop?c.bufferSource.start(0,s,86400):c.bufferSource.start(0,s,l),o._endTimers[_._id]||f===1/0||(o._endTimers[_._id]=setTimeout(o._ended.bind(o,_),f)),t[1]||setTimeout(function(){o._emit(\"play\",_._id)},0)};o._loaded?p():(o.once(\"load\",p),o._clearTimer(_._id))}else{var m=function(){c.currentTime=s,c.muted=_._muted||o._muted||i._muted||c.muted,c.volume=_._volume*i.volume(),c.playbackRate=_._rate,setTimeout(function(){c.play(),t[1]||o._emit(\"play\",_._id)},0)};if(4===c.readyState||!c.readyState&&navigator.isCocoonJS)m();else{var v=function(){f!==1/0&&(o._endTimers[_._id]=setTimeout(o._ended.bind(o,_),f)),m(),c.removeEventListener(d,v,!1)};c.addEventListener(d,v,!1),o._clearTimer(_._id)}}return _._id},pause:function(e){var n=this;if(!n._loaded)return n.once(\"play\",function(){n.pause(e)}),n;for(var o=n._getSoundIds(e),t=0;t<o.length;t++){n._clearTimer(o[t]);var r=n._soundById(o[t]);if(r&&!r._paused){if(r._seek=n.seek(o[t]),r._paused=!0,n._stopFade(o[t]),r._node)if(n._webAudio){if(!r._node.bufferSource)return n;\"undefined\"==typeof r._node.bufferSource.stop?r._node.bufferSource.noteOff(0):r._node.bufferSource.stop(0),r._node.bufferSource=null}else isNaN(r._node.duration)&&r._node.duration!==1/0||r._node.pause();arguments[1]||n._emit(\"pause\",r._id)}}return n},stop:function(e){var n=this;if(!n._loaded)return\"undefined\"!=typeof n._sounds[0]._sprite&&n.once(\"play\",function(){n.stop(e)}),n;for(var o=n._getSoundIds(e),t=0;t<o.length;t++){n._clearTimer(o[t]);var r=n._soundById(o[t]);if(r&&!r._paused){if(r._seek=r._start||0,r._paused=!0,r._ended=!0,n._stopFade(o[t]),r._node)if(n._webAudio){if(!r._node.bufferSource)return n;\"undefined\"==typeof r._node.bufferSource.stop?r._node.bufferSource.noteOff(0):r._node.bufferSource.stop(0),r._node.bufferSource=null}else isNaN(r._node.duration)&&r._node.duration!==1/0||(r._node.pause(),r._node.currentTime=r._start||0);n._emit(\"stop\",r._id)}}return n},mute:function(e,o){var t=this;if(!t._loaded)return t.once(\"play\",function(){t.mute(e,o)}),t;if(\"undefined\"==typeof o){if(\"boolean\"!=typeof e)return t._muted;t._muted=e}for(var r=t._getSoundIds(o),d=0;d<r.length;d++){var u=t._soundById(r[d]);u&&(u._muted=e,t._webAudio&&u._node?u._node.gain.setValueAtTime(e?0:u._volume*i.volume(),n.currentTime):u._node&&(u._node.muted=i._muted?!0:e))}return t},volume:function(){var e,o,t=this,r=arguments;if(0===r.length)return t._volume;if(1===r.length){var d=t._getSoundIds(),u=d.indexOf(r[0]);u>=0?o=parseInt(r[0],10):e=parseFloat(r[0])}else r.length>=2&&(e=parseFloat(r[0]),o=parseInt(r[1],10));var a;if(!(\"undefined\"!=typeof e&&e>=0&&1>=e))return a=o?t._soundById(o):t._sounds[0],a?a._volume:0;if(!t._loaded)return t.once(\"play\",function(){t.volume.apply(t,r)}),t;\"undefined\"==typeof o&&(t._volume=e),o=t._getSoundIds(o);for(var _=0;_<o.length;_++)a=t._soundById(o[_]),a&&(a._volume=e,r[2]||t._stopFade(o[_]),t._webAudio&&a._node&&!a._muted?a._node.gain.setValueAtTime(e*i.volume(),n.currentTime):a._node&&!a._muted&&(a._node.volume=e*i.volume()));return t},fade:function(e,o,t,r){var d=this;if(!d._loaded)return d.once(\"play\",function(){d.fade(e,o,t,r)}),d;d.volume(e,r);for(var u=d._getSoundIds(r),i=0;i<u.length;i++){var a=d._soundById(u[i]);if(a)if(d._webAudio&&!a._muted){var _=n.currentTime,s=_+t/1e3;a._volume=e,a._node.gain.setValueAtTime(e,_),a._node.gain.linearRampToValueAtTime(o,s),a._timeout=setTimeout(function(e,t){delete t._timeout,setTimeout(function(){t._volume=o,d._emit(\"faded\",e)},s-n.currentTime>0?Math.ceil(1e3*(s-n.currentTime)):0)}.bind(d,u[i],a),t)}else{var l=Math.abs(e-o),f=e>o?\"out\":\"in\",c=l/.01,p=t/c;!function(){var n=e;a._interval=setInterval(function(e,t){n+=\"in\"===f?.01:-.01,n=Math.max(0,n),n=Math.min(1,n),n=Math.round(100*n)/100,d.volume(n,e,!0),n===o&&(clearInterval(t._interval),delete t._interval,d._emit(\"faded\",e))}.bind(d,u[i],a),p)}()}}return d},_stopFade:function(e){var o=this,t=o._soundById(e);return t._interval?(clearInterval(t._interval),delete t._interval,o._emit(\"faded\",e)):t._timeout&&(clearTimeout(t._timeout),delete t._timeout,t._node.gain.cancelScheduledValues(n.currentTime),o._emit(\"faded\",e)),o},loop:function(){var e,n,o,t=this,r=arguments;if(0===r.length)return t._loop;if(1===r.length){if(\"boolean\"!=typeof r[0])return o=t._soundById(parseInt(r[0],10)),o?o._loop:!1;e=r[0],t._loop=e}else 2===r.length&&(e=r[0],n=parseInt(r[1],10));for(var d=t._getSoundIds(n),u=0;u<d.length;u++)o=t._soundById(d[u]),o&&(o._loop=e,t._webAudio&&o._node&&o._node.bufferSource&&(o._node.bufferSource.loop=e));return t},rate:function(){var e,n,o=this,t=arguments;if(0===t.length)n=o._sounds[0]._id;else if(1===t.length){var r=o._getSoundIds(),d=r.indexOf(t[0]);d>=0?n=parseInt(t[0],10):e=parseFloat(t[0])}else 2===t.length&&(e=parseFloat(t[0]),n=parseInt(t[1],10));var u;if(\"number\"!=typeof e)return u=o._soundById(n),u?u._rate:o._rate;if(!o._loaded)return o.once(\"load\",function(){o.rate.apply(o,t)}),o;\"undefined\"==typeof n&&(o._rate=e),n=o._getSoundIds(n);for(var i=0;i<n.length;i++)if(u=o._soundById(n[i])){u._rate=e,o._webAudio&&u._node&&u._node.bufferSource?u._node.bufferSource.playbackRate.value=e:u._node&&(u._node.playbackRate=e);var a=o.seek(n[i]),_=(o._sprite[u._sprite][0]+o._sprite[u._sprite][1])/1e3-a,s=1e3*_/Math.abs(u._rate);o._clearTimer(n[i]),o._endTimers[n[i]]=setTimeout(o._ended.bind(o,u),s)}return o},seek:function(){var e,o,t=this,r=arguments;if(0===r.length)o=t._sounds[0]._id;else if(1===r.length){var d=t._getSoundIds(),u=d.indexOf(r[0]);u>=0?o=parseInt(r[0],10):(o=t._sounds[0]._id,e=parseFloat(r[0]))}else 2===r.length&&(e=parseFloat(r[0]),o=parseInt(r[1],10));if(\"undefined\"==typeof o)return t;if(!t._loaded)return t.once(\"load\",function(){t.seek.apply(t,r)}),t;var i=t._soundById(o);if(i){if(!(e>=0))return t._webAudio?i._seek+(t.playing(o)?n.currentTime-i._playStart:0):i._node.currentTime;var a=t.playing(o);a&&t.pause(o,!0),i._seek=e,t._clearTimer(o),a&&t.play(o,!0)}return t},playing:function(e){var n=this,o=n._soundById(e)||n._sounds[0];return o?!o._paused:!1},duration:function(){return this._duration},unload:function(){for(var e=this,n=e._sounds,o=0;o<n.length;o++){n[o]._paused||(e.stop(n[o]._id),e._emit(\"end\",n[o]._id)),e._webAudio||(n[o]._node.src=\"\",n[o]._node.removeEventListener(\"error\",n[o]._errorFn,!1),n[o]._node.removeEventListener(d,n[o]._loadFn,!1)),delete n[o]._node,e._clearTimer(n[o]._id);var t=i._howls.indexOf(e);t>=0&&i._howls.splice(t,1)}return s&&delete s[e._src],e._sounds=[],e=null,null},on:function(e,n,o,t){var r=this,d=r[\"_on\"+e];return\"function\"==typeof n&&d.push(t?{id:o,fn:n,once:t}:{id:o,fn:n}),r},off:function(e,n,o){var t=this,r=t[\"_on\"+e];if(n){for(var d=0;d<r.length;d++)if(n===r[d].fn&&o===r[d].id){r.splice(d,1);break}}else if(e)t[\"_on\"+e]=[];else for(var u=Object.keys(t),d=0;d<u.length;d++)0===u[d].indexOf(\"_on\")&&Array.isArray(t[u[d]])&&(t[u[d]]=[]);return t},once:function(e,n,o){var t=this;return t.on(e,n,o,1),t},_emit:function(e,n,o){for(var t=this,r=t[\"_on\"+e],d=0;d<r.length;d++)r[d].id&&r[d].id!==n||(setTimeout(function(e){e.call(this,n,o)}.bind(t,r[d].fn),0),r[d].once&&t.off(e,r[d].fn,r[d].id));return t},_ended:function(e){var o=this,t=e._sprite,r=!(!e._loop&&!o._sprite[t][2]);if(o._emit(\"end\",e._id),!o._webAudio&&r&&o.stop(e._id).play(e._id),o._webAudio&&r){o._emit(\"play\",e._id),e._seek=e._start||0,e._playStart=n.currentTime;var d=1e3*(e._stop-e._start)/Math.abs(e._rate);o._endTimers[e._id]=setTimeout(o._ended.bind(o,e),d)}return o._webAudio&&!r&&(e._paused=!0,e._ended=!0,e._seek=e._start||0,o._clearTimer(e._id),e._node.bufferSource=null,i._autoSuspend()),o._webAudio||r||o.stop(e._id),o},_clearTimer:function(e){var n=this;return n._endTimers[e]&&(clearTimeout(n._endTimers[e]),delete n._endTimers[e]),n},_soundById:function(e){for(var n=this,o=0;o<n._sounds.length;o++)if(e===n._sounds[o]._id)return n._sounds[o];return null},_inactiveSound:function(){var e=this;e._drain();for(var n=0;n<e._sounds.length;n++)if(e._sounds[n]._ended)return e._sounds[n].reset();return new _(e)},_drain:function(){var e=this,n=e._pool,o=0,t=0;if(!(e._sounds.length<n)){for(t=0;t<e._sounds.length;t++)e._sounds[t]._ended&&o++;for(t=e._sounds.length-1;t>=0;t--){if(n>=o)return;e._sounds[t]._ended&&(e._webAudio&&e._sounds[t]._node&&e._sounds[t]._node.disconnect(0),e._sounds.splice(t,1),o--)}}},_getSoundIds:function(e){var n=this;if(\"undefined\"==typeof e){for(var o=[],t=0;t<n._sounds.length;t++)o.push(n._sounds[t]._id);return o}return[e]},_refreshBuffer:function(e){var o=this;return e._node.bufferSource=n.createBufferSource(),e._node.bufferSource.buffer=s[o._src],e._node.bufferSource.connect(e._panner?e._panner:e._node),e._node.bufferSource.loop=e._loop,e._loop&&(e._node.bufferSource.loopStart=e._start||0,e._node.bufferSource.loopEnd=e._stop),e._node.bufferSource.playbackRate.value=o._rate,o}};var _=function(e){this._parent=e,this.init()};if(_.prototype={init:function(){var e=this,n=e._parent;return e._muted=n._muted,e._loop=n._loop,e._volume=n._volume,e._muted=n._muted,e._rate=n._rate,e._seek=0,e._paused=!0,e._ended=!0,e._sprite=\"__default\",e._id=Math.round(Date.now()*Math.random()),n._sounds.push(e),e.create(),e},create:function(){var e=this,o=e._parent,t=i._muted||e._muted||e._parent._muted?0:e._volume*i.volume();return o._webAudio?(e._node=\"undefined\"==typeof n.createGain?n.createGainNode():n.createGain(),e._node.gain.setValueAtTime(t,n.currentTime),e._node.paused=!0,e._node.connect(r)):(e._node=new Audio,e._errorFn=e._errorListener.bind(e),e._node.addEventListener(\"error\",e._errorFn,!1),e._loadFn=e._loadListener.bind(e),e._node.addEventListener(d,e._loadFn,!1),e._node.src=o._src,e._node.preload=\"auto\",e._node.volume=t,e._node.load()),e},reset:function(){var e=this,n=e._parent;return e._muted=n._muted,e._loop=n._loop,e._volume=n._volume,e._muted=n._muted,e._rate=n._rate,e._seek=0,e._paused=!0,e._ended=!0,e._sprite=\"__default\",e._id=Math.round(Date.now()*Math.random()),e},_errorListener:function(){var e=this;e._node.error&&4===e._node.error.code&&(i.noAudio=!0),e._parent._emit(\"loaderror\",e._id,e._node.error?e._node.error.code:0),e._node.removeEventListener(\"error\",e._errorListener,!1)},_loadListener:function(){var e=this,n=e._parent;n._duration=Math.ceil(10*e._node.duration)/10,0===Object.keys(n._sprite).length&&(n._sprite={__default:[0,1e3*n._duration]}),n._loaded||(n._loaded=!0,n._emit(\"load\")),n._autoplay&&n.play(),e._node.removeEventListener(d,e._loadFn,!1)}},o)var s={},l=function(e){var n=e._src;if(s[n])return e._duration=s[n].duration,void p(e);if(/^data:[^;]+;base64,/.test(n)){window.atob=window.atob||function(e){for(var n,o,t=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\",r=String(e).replace(/=+$/,\"\"),d=0,u=0,i=\"\";o=r.charAt(u++);~o&&(n=d%4?64*n+o:o,d++%4)?i+=String.fromCharCode(255&n>>(-2*d&6)):0)o=t.indexOf(o);return i};for(var o=atob(n.split(\",\")[1]),t=new Uint8Array(o.length),r=0;r<o.length;++r)t[r]=o.charCodeAt(r);c(t.buffer,e)}else{var d=new XMLHttpRequest;d.open(\"GET\",n,!0),d.responseType=\"arraybuffer\",d.onload=function(){c(d.response,e)},d.onerror=function(){e._webAudio&&(e._html5=!0,e._webAudio=!1,e._sounds=[],delete s[n],e.load())},f(d)}},f=function(e){try{e.send()}catch(n){e.onerror()}},c=function(e,o){n.decodeAudioData(e,function(e){e&&o._sounds.length>0&&(s[o._src]=e,p(o,e))},function(){o._emit(\"loaderror\",null,\"Decoding audio data failed.\")})},p=function(e,n){n&&!e._duration&&(e._duration=n.duration),0===Object.keys(e._sprite).length&&(e._sprite={__default:[0,1e3*e._duration]}),e._loaded||(e._loaded=!0,e._emit(\"load\")),e._autoplay&&e.play()};\"function\"==typeof define&&define.amd&&define([],function(){return{Howler:i,Howl:a}}),\"undefined\"!=typeof exports&&(exports.Howler=i,exports.Howl=a),\"undefined\"!=typeof window&&(window.HowlerGlobal=u,window.Howler=i,window.Howl=a,window.Sound=_)}();\n/*! Effects Plugin */\n!function(){\"use strict\";HowlerGlobal.prototype.init=function(e){return function(){var n=this;return n._pos=[0,0,0],n._orientation=[0,0,-1,0,1,0],n._velocity=[0,0,0],n._listenerAttr={dopplerFactor:1,speedOfSound:343.3},e.call(this,o)}}(HowlerGlobal.prototype.init),HowlerGlobal.prototype.pos=function(e,n,t){var o=this;return o.ctx&&o.ctx.listener?(n=\"number\"!=typeof n?o._pos[1]:n,t=\"number\"!=typeof t?o._pos[2]:t,\"number\"!=typeof e?o._pos:(o._pos=[e,n,t],o.ctx.listener.setPosition(o._pos[0],o._pos[1],o._pos[2]),o)):o},HowlerGlobal.prototype.orientation=function(e,n,t,o,r,i){var a=this;if(!a.ctx||!a.ctx.listener)return a;var p=a._orientation;return n=\"number\"!=typeof n?p[1]:n,t=\"number\"!=typeof t?p[2]:t,o=\"number\"!=typeof o?p[3]:o,r=\"number\"!=typeof r?p[4]:r,i=\"number\"!=typeof i?p[5]:i,\"number\"!=typeof e?p:(a._orientation=[e,n,t,o,r,i],a.ctx.listener.setOrientation(p[0],p[1],p[2],p[3],p[4],p[5]),a)},HowlerGlobal.prototype.velocity=function(e,n,t){var o=this;return o.ctx&&o.ctx.listener?(n=\"number\"!=typeof n?o._velocity[1]:n,t=\"number\"!=typeof t?o._velocity[2]:t,\"number\"!=typeof e?o._velocity:(o._velocity=[e,n,t],o.ctx.listener.setVelocity(o._velocity[0],o._velocity[1],o._velocity[2]),o)):o},HowlerGlobal.prototype.listenerAttr=function(e){var n=this;if(!n.ctx||!n.ctx.listener)return n;var t=n._listenerAttr;return e?(n._listenerAttr={dopplerFactor:\"undefined\"!=typeof e.dopplerFactor?e.dopplerFactor:t.dopplerFactor,speedOfSound:\"undefined\"!=typeof e.speedOfSound?e.speedOfSound:t.speedOfSound},n.ctx.listener.dopplerFactor=t.dopplerFactor,n.ctx.listener.speedOfSound=t.speedOfSound,n):t},Howl.prototype.init=function(e){return function(n){var t=this;return t._orientation=n.orientation||[1,0,0],t._pos=n.pos||null,t._velocity=n.velocity||[0,0,0],t._pannerAttr={coneInnerAngle:\"undefined\"!=typeof n.coneInnerAngle?n.coneInnerAngle:360,coneOUterAngle:\"undefined\"!=typeof n.coneOUterAngle?n.coneOUterAngle:360,coneOuterGain:\"undefined\"!=typeof n.coneOuterGain?n.coneOuterGain:0,distanceModel:\"undefined\"!=typeof n.distanceModel?n.distanceModel:\"inverse\",maxDistance:\"undefined\"!=typeof n.maxDistance?n.maxDistance:1e4,panningModel:\"undefined\"!=typeof n.panningModel?n.panningModel:\"HRTF\",refDistance:\"undefined\"!=typeof n.refDistance?n.refDistance:1,rolloffFactor:\"undefined\"!=typeof n.rolloffFactor?n.rolloffFactor:1},e.call(this,n)}}(Howl.prototype.init),Howl.prototype.pos=function(n,t,o,r){var i=this;if(!i._webAudio)return i;if(!i._loaded)return i.once(\"play\",function(){i.pos(n,t,o,r)}),i;if(t=\"number\"!=typeof t?0:t,o=\"number\"!=typeof o?-.5:o,\"undefined\"==typeof r){if(\"number\"!=typeof n)return i._pos;i._pos=[n,t,o]}for(var a=i._getSoundIds(r),p=0;p<a.length;p++){var l=i._soundById(a[p]);if(l){if(\"number\"!=typeof n)return l._pos;l._pos=[n,t,o],l._node&&(l._panner||e(l),l._panner.setPosition(n,t,o))}}return i},Howl.prototype.orientation=function(n,t,o,r){var i=this;if(!i._webAudio)return i;if(!i._loaded)return i.once(\"play\",function(){i.orientation(n,t,o,r)}),i;if(t=\"number\"!=typeof t?i._orientation[1]:t,o=\"number\"!=typeof o?i._orientation[1]:o,\"undefined\"==typeof r){if(\"number\"!=typeof n)return i._orientation;i._orientation=[n,t,o]}for(var a=i._getSoundIds(r),p=0;p<a.length;p++){var l=i._soundById(a[p]);if(l){if(\"number\"!=typeof n)return l._orientation;l._orientation=[n,t,o],l._node&&(l._panner||e(l),l._panner.setOrientation(n,t,o))}}return i},Howl.prototype.velocity=function(n,t,o,r){var i=this;if(!i._webAudio)return i;if(!i._loaded)return i.once(\"play\",function(){i.velocity(n,t,o,r)}),i;if(t=\"number\"!=typeof t?i._velocity[1]:t,o=\"number\"!=typeof o?i._velocity[1]:o,\"undefined\"==typeof r){if(\"number\"!=typeof n)return i._velocity;i._velocity=[n,t,o]}for(var a=i._getSoundIds(r),p=0;p<a.length;p++){var l=i._soundById(a[p]);if(l){if(\"number\"!=typeof n)return l._velocity;l._velocity=[n,t,o],l._node&&(l._panner||e(l),l._panner.setVelocity(n,t,o))}}return i},Howl.prototype.pannerAttr=function(){var n,t,o,r=this,i=arguments;if(!r._webAudio)return r;if(0===i.length)return r._pannerAttr;if(1===i.length){if(\"object\"!=typeof i[0])return o=r._soundById(parseInt(i[0],10)),o?o._pannerAttr:r._pannerAttr;n=i[0],\"undefined\"==typeof t&&(r._pannerAttr={coneInnerAngle:\"undefined\"!=typeof n.coneInnerAngle?n.coneInnerAngle:r._coneInnerAngle,coneOUterAngle:\"undefined\"!=typeof n.coneOUterAngle?n.coneOUterAngle:r._coneOUterAngle,coneOuterGain:\"undefined\"!=typeof n.coneOuterGain?n.coneOuterGain:r._coneOuterGain,distanceModel:\"undefined\"!=typeof n.distanceModel?n.distanceModel:r._distanceModel,maxDistance:\"undefined\"!=typeof n.maxDistance?n.maxDistance:r._maxDistance,panningModel:\"undefined\"!=typeof n.panningModel?n.panningModel:r._panningModel,refDistance:\"undefined\"!=typeof n.refDistance?n.refDistance:r._refDistance,rolloffFactor:\"undefined\"!=typeof n.rolloffFactor?n.rolloffFactor:r._rolloffFactor})}else 2===i.length&&(n=i[0],t=parseInt(i[1],10));for(var a=r._getSoundIds(t),p=0;p<a.length;p++)if(o=r._soundById(a[p])){var l=o._pannerAttr;l={coneInnerAngle:\"undefined\"!=typeof n.coneInnerAngle?n.coneInnerAngle:l.coneInnerAngle,coneOUterAngle:\"undefined\"!=typeof n.coneOUterAngle?n.coneOUterAngle:l.coneOUterAngle,coneOuterGain:\"undefined\"!=typeof n.coneOuterGain?n.coneOuterGain:l.coneOuterGain,distanceModel:\"undefined\"!=typeof n.distanceModel?n.distanceModel:l.distanceModel,maxDistance:\"undefined\"!=typeof n.maxDistance?n.maxDistance:l.maxDistance,panningModel:\"undefined\"!=typeof n.panningModel?n.panningModel:l.panningModel,refDistance:\"undefined\"!=typeof n.refDistance?n.refDistance:l.refDistance,rolloffFactor:\"undefined\"!=typeof n.rolloffFactor?n.rolloffFactor:l.rolloffFactor};var c=o._panner;c?(c.coneInnerAngle=l.coneInnerAngle,c.coneOUterAngle=l.coneOUterAngle,c.coneOuterGain=l.coneOuterGain,c.distanceModel=l.distanceModel,c.maxDistance=l.maxDistance,c.panningModel=l.panningModel,c.refDistance=l.refDistance,c.rolloffFactor=l.rolloffFactor):(o._pos||(o._pos=r._pos||[0,0,-.5]),e(o))}return r},Sound.prototype.init=function(e){return function(){var n=this,t=n._parent;n._orientation=t._orientation,n._pos=t._pos,n._velocity=t._velocity,n._pannerAttr=t._pannerAttr,e.call(this),n._pos&&t.pos(n._pos[0],n._pos[1],n._pos[2],n._id)}}(Sound.prototype.init),Sound.prototype.reset=function(e){return function(){var n=this,t=n._parent;return n._orientation=t._orientation,n._pos=t._pos,n._velocity=t._velocity,n._pannerAttr=t._pannerAttr,e.call(this)}}(Sound.prototype.reset);var e=function(e){e._panner=Howler.ctx.createPanner(),e._panner.coneInnerAngle=e._pannerAttr.coneInnerAngle,e._panner.coneOUterAngle=e._pannerAttr.coneOUterAngle,e._panner.coneOuterGain=e._pannerAttr.coneOuterGain,e._panner.distanceModel=e._pannerAttr.distanceModel,e._panner.maxDistance=e._pannerAttr.maxDistance,e._panner.panningModel=e._pannerAttr.panningModel,e._panner.refDistance=e._pannerAttr.refDistance,e._panner.rolloffFactor=e._pannerAttr.rolloffFactor,e._panner.setPosition(e._pos[0],e._pos[1],e._pos[2]),e._panner.setOrientation(e._orientation[0],e._orientation[1],e._orientation[2]),e._panner.setVelocity(e._velocity[0],e._velocity[1],e._velocity[2]),e._panner.connect(e._node),e._paused||e._parent.pause(e._id).play(e._id)}}();\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/howler/howler.min.js\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = __webpack_amd_options__;\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/amd-options.js\n ** module id = 10\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/path-browserify/index.js\n ** module id = 11\n ** module chunks = 0\n **/","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 12\n ** module chunks = 0\n **/","import { ViewContainer, BackgroundView } from '../../engine/graphics';\nimport MenuItem from '../../engine/menu-system/MenuItem';\nimport MenuInput from './MenuInput';\nimport MenuItemsView from './views/MenuItemsView';\nimport MenuRenderView from './views/MenuRenderView';\nimport LogoView from './views/LogoView';\nimport MenuAudio from './MenuAudio';\nimport Menu from '../../engine/menu-system/Menu';\nimport OptionsMenu from './OptionsMenu';\nimport HelpMenu from './HelpMenu';\nimport PlayBuilder from '../play/PlayBuilder';\n\nimport MenuState from './MenuState';\n\n/**\n * Create the play state.\n *\n * @param {Engine} engine Game engine.\n * @param {object} options Options for the play state.\n *\n * @return {PlayState} The created play state.\n */\nfunction createPlayState (engine, options) {\n    let playOptions = Object.assign({\n        poolLimit: 200,\n        teams: ['american', 'german'],\n        cpuCount: 7,\n        map: 'level2',\n        playerName: 'unknown soldier'\n    }, options);\n\n    let playState = PlayBuilder.createSingleplayer(engine, playOptions);\n\n    engine.addState('play', playState);\n\n    return playState;\n}\n\nlet MenuBuilder = {\n    create (engine) {\n        this.engine = engine;\n        this.state = new MenuState();\n        this.menu = new Menu();\n\n        let menuInput = new MenuInput(this.state);\n\n        this.state.inputs.add(menuInput);\n\n        this.subMenus = new Map([\n            ['options', OptionsMenu.create(this.state)],\n            ['help', HelpMenu.create(this.state)]\n        ]);\n\n        this._createMenuItems();\n\n        this.state.currentMenu = 'main';\n        this.state.audio = new MenuAudio(this.state, 'menu_effects', 'background');\n\n        this._createView();\n\n        return this.state;\n    },\n\n    _createMenuItems () {\n        this.menu.addMenuItem(new MenuItem('createGame', 'Create game', (menuItem) => {\n            let playState = this.engine.states.get('play');\n\n            if (!playState) {\n                playState = createPlayState(this.engine, {\n                    playerName: this.state.options.get('name')\n                });\n\n                menuItem.text = 'Create game';\n            } else {\n                this.state.gamePlaying = true;\n\n                playState.player.name = this.state.options.get('name');\n                menuItem.text = 'Continue game';\n            }\n\n            playState.resume();\n\n            this.engine.changeState('play');\n        }));\n\n        this.menu.addMenuItem(new MenuItem('options', 'Options', () => {\n            this.state.currentMenu = 'options';\n        }));\n\n        this.menu.addMenuItem(new MenuItem('help', 'Help', () => {\n            this.state.currentMenu = 'help';\n        }));\n\n        for (let [subMenuName, subMenu] of this.subMenus.entries()) {\n            this.state.addMenu(subMenuName, subMenu.menu);\n        }\n\n        this.state.addMenu('main', this.menu);\n    },\n\n    _createView () {\n        let menuView = new MenuRenderView(this.state);\n        let viewContainer = new ViewContainer();\n        let background1 = new BackgroundView('normandy', 'ui');\n\n        viewContainer.addDynamicView(new MenuItemsView(this.menu), { x: 500, y: 100, z: 0 });\n        viewContainer.addStaticView(new LogoView('logo', 'ui'), { x: 300, y: 300, z: 0 });\n\n        background1.lightness = 0.5;\n        viewContainer.backgroundView = background1;\n\n        for (let [subMenuName, subMenu] of this.subMenus.entries()) {\n            menuView.addViewContainer(subMenuName, subMenu.viewContainer);\n        }\n\n        menuView.addViewContainer('main', viewContainer);\n\n        menuView.currentViewContainer = 'main';\n\n        this.state.addView(menuView);\n    }\n};\n\nexport default MenuBuilder;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/MenuBuilder.js\n **/","import Animation from './Animation';\nimport Renderer from './Renderer';\nimport RenderView from './RenderView';\nimport TextureAtlas from './TextureAtlas';\nimport TextureFrame from './TextureFrame';\nimport TextureManager from './TextureManager';\nimport TextView from './TextView';\nimport View from './View';\nimport ViewContainer from './ViewContainer';\nimport BackgroundView from './BackgroundView';\n\nexport {\n    Animation,\n    Renderer,\n    RenderView,\n    TextureAtlas,\n    TextureFrame,\n    TextureManager,\n    TextView,\n    View,\n    BackgroundView,\n    ViewContainer\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/index.js\n **/","import TextureFrame from './TextureFrame';\n\nclass Animation {\n    constructor (textureAtlas, geometry, interval = 10, repeat = true, frames = [],\n            framePrefix = '', fixed = false) {\n        this.textureAtlas = textureAtlas;\n        this.geometry = geometry;\n\n        // Use the first frame as a size reference\n        this.textureFrame = new TextureFrame(this.textureAtlas, geometry, framePrefix + frames[0], fixed);\n\n        this.interval = interval;\n        this.frames = frames;\n        this.framePrefix = framePrefix;\n        this.currentFrameIndex = 0;\n        this.currentDisplayTime = 0;\n\n        this._updateTexture();\n    }\n\n    get texture () {\n        return this.textureAtlas.texture;\n    }\n\n    _updateTexture () {\n        let currentFrame = this.framePrefix + this.frames[this.currentFrameIndex];\n\n        this.textureFrame.frame = currentFrame;\n    }\n\n    reset () {\n        this.currentFrameIndex = 0;\n        this.currentDisplayTime = 0;\n    }\n\n    update (delta) {\n        this.currentDisplayTime += 1;\n\n        if (this.currentDisplayTime > this.interval) {\n            this.currentDisplayTime = 0;\n\n            this.currentFrameIndex++;\n\n            if (this.currentFrameIndex >= this.frames.length) {\n                this.currentFrameIndex = 0;\n            }\n\n            this._updateTexture();\n        }\n    }\n\n    get currentFrame () {\n        return this.frames[this.currentFrameIndex];\n    }\n};\n\nexport default Animation;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/Animation.js\n **/","class TextureFrame {\n    constructor (textureAtlas, geometry, initialFrame, fixed = false) {\n        this.textureAtlas = textureAtlas;\n        this.geometry = geometry;\n        this.fixed = fixed;\n\n        if (initialFrame) {\n            this.frame = initialFrame;\n\n            if (fixed) {\n                let size = this.textureAtlas.getFrameSize(initialFrame);\n\n                this._changeSize(size.width, size.height);\n            }\n        }\n    }\n\n    get texture () {\n        return this.textureAtlas.texture;\n    }\n\n    _changeSize (width, height) {\n        this.width = width;\n        this.height = height;\n        let aw = this.textureAtlas.width;\n        let ah = this.textureAtlas.height;\n\n        if (this.geometry) {\n            // TODO make this more efficient (no new instances necessary)\n            let bounds = [\n                new THREE.Vector2(0, ah / ah), // lower left\n                new THREE.Vector2(0, (ah - height) / ah), // upper left\n                new THREE.Vector2(width / aw, (ah - height) / ah), // upper right\n                new THREE.Vector2(width / aw, ah / ah) // lower right\n            ];\n\n            // If a geometry is merged, for example multiple planes\n            for (let i = 1; i < this.geometry.faceVertexUvs[0].length; i += 2) {\n                this.geometry.faceVertexUvs[0][i - 1] = [bounds[0], bounds[1], bounds[3]];\n                this.geometry.faceVertexUvs[0][i] = [bounds[1], bounds[2], bounds[3]];\n            }\n\n            this.geometry.uvsNeedUpdate = true;\n        }\n    }\n\n    set frame (frameName) {\n        let offset = this.textureAtlas.getFrameOffset(frameName);\n        let size = this.textureAtlas.getFrameSize(frameName);\n\n        // Size changed\n        if (!this.fixed) {\n            if (size.width !== this.width || size.height !== this.height) {\n                this._changeSize(size.width, size.height);\n            }\n        }\n\n        this.texture.offset = offset;\n    }\n}\n\nexport default TextureFrame;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/TextureFrame.js\n **/","class RenderView {\n    constructor () {\n        this.width = 800;\n        this.height = 600;\n        this._initialized = false;\n        this.clearColor = 0x000000;\n        this.viewContainers = new Map();\n        this._currentViewContainer = null;\n        this.currentViewContainerName = null;\n        this.camera = null;\n    }\n\n    init () {\n        this.scene = new THREE.Scene();\n\n        for (let [name, viewContainer] of this.viewContainers.entries()) {\n            viewContainer.init();\n            viewContainer.width = this.width;\n            viewContainer.height = this.height;\n\n            this.scene.add(viewContainer.mesh);\n\n            if (name === this.currentViewContainerName) {\n                viewContainer.visible = true;\n                this._currentViewContainer = viewContainer;\n            } else {\n                viewContainer.visible = false;\n            }\n        }\n    }\n\n    update (delta) {\n        if (this._currentViewContainer) {\n            this._currentViewContainer.update(delta);\n        } else {\n            console.warn('no current ViewContainer');\n        }\n    }\n\n    set size (size) {\n        this.width = size.width;\n        this.height = size.height;\n\n        if (this.camera) {\n            this.camera.aspect = this.width / this.height;\n            this.camera.updateProjectionMatrix();\n        }\n\n        if (this._initialized) {\n            for (let viewContainer of this.viewContainers.values()) {\n                viewContainer.width = this.width;\n                viewContainer.height = this.height;\n            }\n        }\n    }\n\n    set currentViewContainer (name) {\n        let newViewContainer = this.viewContainers.get(name);\n\n        if (this._initialized) {\n            if (this._currentViewContainer) {\n                this._currentViewContainer.visible = false;\n            }\n\n            newViewContainer.visible = true;\n        }\n\n        this.currentViewContainerName = name;\n        this._currentViewContainer = newViewContainer;\n    }\n\n    get currentViewContainer () {\n        return this._currentViewContainer;\n    }\n\n    addViewContainer (name, viewContainer) {\n        if (this._initialized) {\n            viewContainer.init();\n            viewContainer.width = this.width;\n            viewContainer.height = this.height;\n\n            this.scene.add(viewContainer.mesh);\n        }\n        this.viewContainers.set(name, viewContainer);\n    }\n}\n\nexport default RenderView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/RenderView.js\n **/","import AssetManager from '../AssetManager';\n\nclass TextureAtlas {\n    constructor (name, clone, filter = {}) {\n        this.mapping = AssetManager.getAtlasMapping(name);\n\n        if (!this.mapping) {\n            throw new Error('TextureAtlas does not exists', name);\n        }\n\n        if (clone) {\n            this.texture = AssetManager.cloneTexture(name);\n        } else {\n            this.texture = AssetManager.getTexture(name);\n        }\n\n        this.texture.wrapS = THREE.RepeatWrapping;\n        this.texture.wrapT = THREE.RepeatWrapping;\n\n        this.width = this.mapping.meta.size.w;\n        this.height = this.mapping.meta.size.h;\n\n        this.frames = new Map();\n\n        for (let frame of this.mapping.frames) {\n            let d = frame.frame;\n\n            // Origin image is y-inverted compared to what THREE wants\n            let bounds = [\n                new THREE.Vector2(d.x / this.width, (this.height - (d.y)) / this.height), // lower left\n                new THREE.Vector2(d.x / this.width, (this.height - (d.y + d.h)) / this.height), // upper left\n                new THREE.Vector2((d.x + d.w) / this.width, (this.height - (d.y + d.h)) / this.height), // upper right\n                new THREE.Vector2((d.x + d.w) / this.width, (this.height - (d.y)) / this.height) // lower right\n            ];\n\n            this.frames.set(frame.filename, {\n                bounds: bounds,\n                frame: frame,\n                framePosition: {\n                    x: d.x,\n                    y: d.y\n                },\n                frameSize: {\n                    width: d.w,\n                    height: d.h\n                }\n            });\n        }\n    }\n\n    getFrameOffset (name) {\n        let d = this.frames.get(name + '.png').framePosition;\n\n        return new THREE.Vector2(d.x / this.width, (this.height - d.y) / this.height);\n    }\n\n    getFrameSize (name) {\n        return this.frames.get(name + '.png').frameSize;\n    }\n\n    getBounds (name) {\n        return this.frames.get(name + '.png').bounds;\n    }\n}\n\nexport default TextureAtlas;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/TextureAtlas.js\n **/","import TextureAtlas from './TextureAtlas';\nlet _atlases = new Map();\n\nlet TextureManager = {\n    getAtlas (name, clone) {\n        if (clone) {\n            return new TextureAtlas(name, clone);\n        }\n\n        let atlas = _atlases.get(name);\n\n        if (!atlas) {\n            atlas = new TextureAtlas(name);\n\n            _atlases.set(name, atlas);\n        }\n\n        return atlas;\n    }\n};\n\nexport default TextureManager;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/TextureManager.js\n **/","import View from './View';\nimport AssetManager from '../AssetManager';\nimport createTextGeometry from 'three-bmfont-text';\n\nclass TextView extends View {\n    constructor (text, options = {}) {\n        super();\n\n        let fontName = options.font || 'long_shot';\n\n        this._text = text;\n        this.font = AssetManager.getFont(fontName);\n        this.width = options.width || 100;\n        this.align = options.aligh || 'left';\n        this._color = options.color || 0xff0000;\n    }\n\n    init () {\n        this.geometry = createTextGeometry({\n            text: this._text,\n            width: this.width,\n            align: this.align,\n            font: this.font.mapping\n        });\n\n        this.texture = this.font.texture;\n\n        this.material = new THREE.MeshBasicMaterial({\n            map: this.texture,\n            transparent: true,\n            color: this._color\n        });\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        this.mesh.rotation.y = 180 * (Math.PI / 180);\n        this.mesh.rotation.z = 180 * (Math.PI / 180);\n\n        super.init();\n    }\n\n    get color () {\n        return this._color;\n    }\n\n    set color (color) {\n        this.material.color.setHex(color);\n    }\n\n    get text () {\n        return this._text;\n    }\n\n    get height () {\n        return this.geometry.layout.height;\n    }\n\n    _updateGeometry () {\n        this.geometry.update({\n            text: this._text,\n            width: this.width,\n            align: this.align,\n            font: this.font.mapping\n        });\n\n        this.geometry.uvsNeedUpdate = true;\n    }\n\n    set text (text) {\n        text = text.toString();\n\n        // Check if text is not the same\n        if (text !== this._text) {\n            this._text = text;\n            this._updateGeometry();\n        }\n    }\n}\n\nexport default TextView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/TextView.js\n **/","class View {\n    constructor () {\n        this.mesh = null;\n        this.initialPosition = null;\n        this._initialized = false;\n    }\n\n    init () {\n        if (this.initialPosition) {\n            if (!this.mesh) {\n                throw new Error('No mesh initialized!');\n            }\n\n            this.mesh.position.x = this.initialPosition.x;\n            this.mesh.position.y = this.initialPosition.y;\n            this.mesh.position.z = this.initialPosition.z;\n        }\n\n        this._initialized = true;\n    }\n\n    get position () {\n        return this.mesh.position;\n    }\n\n    set position ({ x, y, z }) {\n        if (this.mesh && this.initialized) {\n            if (x) {\n                this.mesh.position.x = x;\n            }\n\n            if (y) {\n                this.mesh.position.y = y;\n            }\n\n            if (z) {\n                this.mesh.position.z = z;\n            }\n        } else {\n            this.initialPosition = {\n                x: x,\n                y: y,\n                z: z\n            };\n        }\n    }\n}\n\nexport default View;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/View.js\n **/","var createLayout = require('layout-bmfont-text')\nvar inherits = require('inherits')\nvar createIndices = require('quad-indices')\nvar buffer = require('three-buffer-vertex-data')\nvar assign = require('object-assign')\n\nvar vertices = require('./lib/vertices')\nvar utils = require('./lib/utils')\n\nvar Base = THREE.BufferGeometry\n\nmodule.exports = function createTextGeometry (opt) {\n  return new TextGeometry(opt)\n}\n\nfunction TextGeometry (opt) {\n  Base.call(this)\n\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use these as default values for any subsequent\n  // calls to update()\n  this._opt = assign({}, opt)\n\n  // also do an initial setup...\n  if (opt) this.update(opt)\n}\n\ninherits(TextGeometry, Base)\n\nTextGeometry.prototype.update = function (opt) {\n  if (typeof opt === 'string') {\n    opt = { text: opt }\n  }\n\n  // use constructor defaults\n  opt = assign({}, this._opt, opt)\n\n  if (!opt.font) {\n    throw new TypeError('must specify a { font } in options')\n  }\n\n  this.layout = createLayout(opt)\n\n  // get vec2 texcoords\n  var flipY = opt.flipY !== false\n\n  // the desired BMFont data\n  var font = opt.font\n\n  // determine texture size from font file\n  var texWidth = font.common.scaleW\n  var texHeight = font.common.scaleH\n\n  // get visible glyphs\n  var glyphs = this.layout.glyphs.filter(function (glyph) {\n    var bitmap = glyph.data\n    return bitmap.width * bitmap.height > 0\n  })\n\n  // provide visible glyphs for convenience\n  this.visibleGlyphs = glyphs\n\n  // get common vertex data\n  var positions = vertices.positions(glyphs)\n  var uvs = vertices.uvs(glyphs, texWidth, texHeight, flipY)\n  var indices = createIndices({\n    clockwise: true,\n    type: 'uint16',\n    count: glyphs.length\n  })\n\n  // update vertex data\n  buffer.index(this, indices, 1, 'uint16')\n  buffer.attr(this, 'position', positions, 2)\n  buffer.attr(this, 'uv', uvs, 2)\n\n  // update multipage data\n  if (!opt.multipage && 'page' in this.attributes) {\n    // disable multipage rendering\n    this.removeAttribute('page')\n  } else if (opt.multipage) {\n    var pages = vertices.pages(glyphs)\n    // enable multipage rendering\n    buffer.attr(this, 'page', pages, 1)\n  }\n}\n\nTextGeometry.prototype.computeBoundingSphere = function () {\n  if (this.boundingSphere === null) {\n    this.boundingSphere = new THREE.Sphere()\n  }\n\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    this.boundingSphere.radius = 0\n    this.boundingSphere.center.set(0, 0, 0)\n    return\n  }\n  utils.computeSphere(positions, this.boundingSphere)\n  if (isNaN(this.boundingSphere.radius)) {\n    console.error('THREE.BufferGeometry.computeBoundingSphere(): ' +\n      'Computed radius is NaN. The ' +\n      '\"position\" attribute is likely to have NaN values.')\n  }\n}\n\nTextGeometry.prototype.computeBoundingBox = function () {\n  if (this.boundingBox === null) {\n    this.boundingBox = new THREE.Box3()\n  }\n\n  var bbox = this.boundingBox\n  var positions = this.attributes.position.array\n  var itemSize = this.attributes.position.itemSize\n  if (!positions || !itemSize || positions.length < 2) {\n    bbox.makeEmpty()\n    return\n  }\n  utils.computeBox(positions, bbox)\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-bmfont-text/index.js\n ** module id = 22\n ** module chunks = 0\n **/","var wordWrap = require('word-wrapper')\nvar xtend = require('xtend')\nvar findChar = require('indexof-property')('id')\nvar number = require('as-number')\n\nvar X_HEIGHTS = ['x', 'e', 'a', 'o', 'n', 's', 'r', 'c', 'u', 'm', 'v', 'w', 'z']\nvar M_WIDTHS = ['m', 'w']\nvar CAP_HEIGHTS = ['H', 'I', 'N', 'E', 'F', 'K', 'L', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z']\n\n\nvar TAB_ID = '\\t'.charCodeAt(0)\nvar SPACE_ID = ' '.charCodeAt(0)\nvar ALIGN_LEFT = 0, \n    ALIGN_CENTER = 1, \n    ALIGN_RIGHT = 2\n\nmodule.exports = function createLayout(opt) {\n  return new TextLayout(opt)\n}\n\nfunction TextLayout(opt) {\n  this.glyphs = []\n  this._measure = this.computeMetrics.bind(this)\n  this.update(opt)\n}\n\nTextLayout.prototype.update = function(opt) {\n  opt = xtend({\n    measure: this._measure\n  }, opt)\n  this._opt = opt\n  this._opt.tabSize = number(this._opt.tabSize, 4)\n\n  if (!opt.font)\n    throw new Error('must provide a valid bitmap font')\n\n  var glyphs = this.glyphs\n  var text = opt.text||'' \n  var font = opt.font\n  this._setupSpaceGlyphs(font)\n  \n  var lines = wordWrap.lines(text, opt)\n  var minWidth = opt.width || 0\n\n  //clear glyphs\n  glyphs.length = 0\n\n  //get max line width\n  var maxLineWidth = lines.reduce(function(prev, line) {\n    return Math.max(prev, line.width, minWidth)\n  }, 0)\n\n  //the pen position\n  var x = 0\n  var y = 0\n  var lineHeight = number(opt.lineHeight, font.common.lineHeight)\n  var baseline = font.common.base\n  var descender = lineHeight-baseline\n  var letterSpacing = opt.letterSpacing || 0\n  var height = lineHeight * lines.length - descender\n  var align = getAlignType(this._opt.align)\n\n  //draw text along baseline\n  y -= height\n  \n  //the metrics for this text layout\n  this._width = maxLineWidth\n  this._height = height\n  this._descender = font.common.lineHeight - baseline\n  this._baseline = baseline\n  this._xHeight = getXHeight(font)\n  this._capHeight = getCapHeight(font)\n  this._lineHeight = lineHeight\n  this._ascender = lineHeight - descender - this._xHeight\n    \n  //layout each glyph\n  var self = this\n  lines.forEach(function(line, lineIndex) {\n    var start = line.start\n    var end = line.end\n    var lineWidth = line.width\n    var lastGlyph\n    \n    //for each glyph in that line...\n    for (var i=start; i<end; i++) {\n      var id = text.charCodeAt(i)\n      var glyph = self.getGlyph(font, id)\n      if (glyph) {\n        if (lastGlyph) \n          x += getKerning(font, lastGlyph.id, glyph.id)\n\n        var tx = x\n        if (align === ALIGN_CENTER) \n          tx += (maxLineWidth-lineWidth)/2\n        else if (align === ALIGN_RIGHT)\n          tx += (maxLineWidth-lineWidth)\n\n        glyphs.push({\n          position: [tx, y],\n          data: glyph,\n          index: i,\n          line: lineIndex\n        })  \n\n        //move pen forward\n        x += glyph.xadvance + letterSpacing\n        lastGlyph = glyph\n      }\n    }\n\n    //next line down\n    y += lineHeight\n    x = 0\n  })\n  this._linesTotal = lines.length;\n}\n\nTextLayout.prototype._setupSpaceGlyphs = function(font) {\n  //These are fallbacks, when the font doesn't include\n  //' ' or '\\t' glyphs\n  this._fallbackSpaceGlyph = null\n  this._fallbackTabGlyph = null\n\n  if (!font.chars || font.chars.length === 0)\n    return\n\n  //try to get space glyph\n  //then fall back to the 'm' or 'w' glyphs\n  //then fall back to the first glyph available\n  var space = getGlyphById(font, SPACE_ID) \n          || getMGlyph(font) \n          || font.chars[0]\n\n  //and create a fallback for tab\n  var tabWidth = this._opt.tabSize * space.xadvance\n  this._fallbackSpaceGlyph = space\n  this._fallbackTabGlyph = xtend(space, {\n    x: 0, y: 0, xadvance: tabWidth, id: TAB_ID, \n    xoffset: 0, yoffset: 0, width: 0, height: 0\n  })\n}\n\nTextLayout.prototype.getGlyph = function(font, id) {\n  var glyph = getGlyphById(font, id)\n  if (glyph)\n    return glyph\n  else if (id === TAB_ID) \n    return this._fallbackTabGlyph\n  else if (id === SPACE_ID) \n    return this._fallbackSpaceGlyph\n  return null\n}\n\nTextLayout.prototype.computeMetrics = function(text, start, end, width) {\n  var letterSpacing = this._opt.letterSpacing || 0\n  var font = this._opt.font\n  var curPen = 0\n  var curWidth = 0\n  var count = 0\n  var glyph\n  var lastGlyph\n\n  if (!font.chars || font.chars.length === 0) {\n    return {\n      start: start,\n      end: start,\n      width: 0\n    }\n  }\n\n  end = Math.min(text.length, end)\n  for (var i=start; i < end; i++) {\n    var id = text.charCodeAt(i)\n    var glyph = this.getGlyph(font, id)\n\n    if (glyph) {\n      //move pen forward\n      var xoff = glyph.xoffset\n      var kern = lastGlyph ? getKerning(font, lastGlyph.id, glyph.id) : 0\n      curPen += kern\n\n      var nextPen = curPen + glyph.xadvance + letterSpacing\n      var nextWidth = curPen + glyph.width\n\n      //we've hit our limit; we can't move onto the next glyph\n      if (nextWidth >= width || nextPen >= width)\n        break\n\n      //otherwise continue along our line\n      curPen = nextPen\n      curWidth = nextWidth\n      lastGlyph = glyph\n    }\n    count++\n  }\n  \n  //make sure rightmost edge lines up with rendered glyphs\n  if (lastGlyph)\n    curWidth += lastGlyph.xoffset\n\n  return {\n    start: start,\n    end: start + count,\n    width: curWidth\n  }\n}\n\n//getters for the private vars\n;['width', 'height', \n  'descender', 'ascender',\n  'xHeight', 'baseline',\n  'capHeight',\n  'lineHeight' ].forEach(addGetter)\n\nfunction addGetter(name) {\n  Object.defineProperty(TextLayout.prototype, name, {\n    get: wrapper(name),\n    configurable: true\n  })\n}\n\n//create lookups for private vars\nfunction wrapper(name) {\n  return (new Function([\n    'return function '+name+'() {',\n    '  return this._'+name,\n    '}'\n  ].join('\\n')))()\n}\n\nfunction getGlyphById(font, id) {\n  if (!font.chars || font.chars.length === 0)\n    return null\n\n  var glyphIdx = findChar(font.chars, id)\n  if (glyphIdx >= 0)\n    return font.chars[glyphIdx]\n  return null\n}\n\nfunction getXHeight(font) {\n  for (var i=0; i<X_HEIGHTS.length; i++) {\n    var id = X_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getMGlyph(font) {\n  for (var i=0; i<M_WIDTHS.length; i++) {\n    var id = M_WIDTHS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx]\n  }\n  return 0\n}\n\nfunction getCapHeight(font) {\n  for (var i=0; i<CAP_HEIGHTS.length; i++) {\n    var id = CAP_HEIGHTS[i].charCodeAt(0)\n    var idx = findChar(font.chars, id)\n    if (idx >= 0) \n      return font.chars[idx].height\n  }\n  return 0\n}\n\nfunction getKerning(font, left, right) {\n  if (!font.kernings || font.kernings.length === 0)\n    return 0\n\n  var table = font.kernings\n  for (var i=0; i<table.length; i++) {\n    var kern = table[i]\n    if (kern.first === left && kern.second === right)\n      return kern.amount\n  }\n  return 0\n}\n\nfunction getAlignType(align) {\n  if (align === 'center')\n    return ALIGN_CENTER\n  else if (align === 'right')\n    return ALIGN_RIGHT\n  return ALIGN_LEFT\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/layout-bmfont-text/index.js\n ** module id = 23\n ** module chunks = 0\n **/","var newline = /\\n/\nvar newlineChar = '\\n'\nvar whitespace = /\\s/\n\nmodule.exports = function(text, opt) {\n    var lines = module.exports.lines(text, opt)\n    return lines.map(function(line) {\n        return text.substring(line.start, line.end)\n    }).join('\\n')\n}\n\nmodule.exports.lines = function wordwrap(text, opt) {\n    opt = opt||{}\n\n    //zero width results in nothing visible\n    if (opt.width === 0 && opt.mode !== 'nowrap') \n        return []\n\n    text = text||''\n    var width = typeof opt.width === 'number' ? opt.width : Number.MAX_VALUE\n    var start = Math.max(0, opt.start||0)\n    var end = typeof opt.end === 'number' ? opt.end : text.length\n    var mode = opt.mode\n\n    var measure = opt.measure || monospace\n    if (mode === 'pre')\n        return pre(measure, text, start, end, width)\n    else\n        return greedy(measure, text, start, end, width, mode)\n}\n\nfunction idxOf(text, chr, start, end) {\n    var idx = text.indexOf(chr, start)\n    if (idx === -1 || idx > end)\n        return end\n    return idx\n}\n\nfunction isWhitespace(chr) {\n    return whitespace.test(chr)\n}\n\nfunction pre(measure, text, start, end, width) {\n    var lines = []\n    var lineStart = start\n    for (var i=start; i<end && i<text.length; i++) {\n        var chr = text.charAt(i)\n        var isNewline = newline.test(chr)\n\n        //If we've reached a newline, then step down a line\n        //Or if we've reached the EOF\n        if (isNewline || i===end-1) {\n            var lineEnd = isNewline ? i : i+1\n            var measured = measure(text, lineStart, lineEnd, width)\n            lines.push(measured)\n            \n            lineStart = i+1\n        }\n    }\n    return lines\n}\n\nfunction greedy(measure, text, start, end, width, mode) {\n    //A greedy word wrapper based on LibGDX algorithm\n    //https://github.com/libgdx/libgdx/blob/master/gdx/src/com/badlogic/gdx/graphics/g2d/BitmapFontCache.java\n    var lines = []\n\n    var testWidth = width\n    //if 'nowrap' is specified, we only wrap on newline chars\n    if (mode === 'nowrap')\n        testWidth = Number.MAX_VALUE\n\n    while (start < end && start < text.length) {\n        //get next newline position\n        var newLine = idxOf(text, newlineChar, start, end)\n\n        //eat whitespace at start of line\n        while (start < newLine) {\n            if (!isWhitespace( text.charAt(start) ))\n                break\n            start++\n        }\n\n        //determine visible # of glyphs for the available width\n        var measured = measure(text, start, newLine, testWidth)\n\n        var lineEnd = start + (measured.end-measured.start)\n        var nextStart = lineEnd + newlineChar.length\n\n        //if we had to cut the line before the next newline...\n        if (lineEnd < newLine) {\n            //find char to break on\n            while (lineEnd > start) {\n                if (isWhitespace(text.charAt(lineEnd)))\n                    break\n                lineEnd--\n            }\n            if (lineEnd === start) {\n                if (nextStart > start + newlineChar.length) nextStart--\n                lineEnd = nextStart // If no characters to break, show all.\n            } else {\n                nextStart = lineEnd\n                //eat whitespace at end of line\n                while (lineEnd > start) {\n                    if (!isWhitespace(text.charAt(lineEnd - newlineChar.length)))\n                        break\n                    lineEnd--\n                }\n            }\n        }\n        if (lineEnd >= start) {\n            var result = measure(text, start, lineEnd, testWidth)\n            lines.push(result)\n        }\n        start = nextStart\n    }\n    return lines\n}\n\n//determines the visible number of glyphs within a given width\nfunction monospace(text, start, end, width) {\n    var glyphs = Math.min(width, end-start)\n    return {\n        start: start,\n        end: start+glyphs\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/word-wrapper/index.js\n ** module id = 24\n ** module chunks = 0\n **/","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/xtend/immutable.js\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = function compile(property) {\n\tif (!property || typeof property !== 'string')\n\t\tthrow new Error('must specify property for indexof search')\n\n\treturn new Function('array', 'value', 'start', [\n\t\t'start = start || 0',\n\t\t'for (var i=start; i<array.length; i++)',\n\t\t'  if (array[i][\"' + property +'\"] === value)',\n\t\t'      return i',\n\t\t'return -1'\n\t].join('\\n'))\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/indexof-property/index.js\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = function numtype(num, def) {\n\treturn typeof num === 'number'\n\t\t? num \n\t\t: (typeof def === 'number' ? def : 0)\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/as-number/index.js\n ** module id = 27\n ** module chunks = 0\n **/","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/inherits/inherits_browser.js\n ** module id = 28\n ** module chunks = 0\n **/","var dtype = require('dtype')\nvar anArray = require('an-array')\nvar isBuffer = require('is-buffer')\n\nvar CW = [0, 2, 3]\nvar CCW = [2, 1, 3]\n\nmodule.exports = function createQuadElements(array, opt) {\n    //if user didn't specify an output array\n    if (!array || !(anArray(array) || isBuffer(array))) {\n        opt = array || {}\n        array = null\n    }\n\n    if (typeof opt === 'number') //backwards-compatible\n        opt = { count: opt }\n    else\n        opt = opt || {}\n\n    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n    var count = typeof opt.count === 'number' ? opt.count : 1\n    var start = (opt.start || 0) \n\n    var dir = opt.clockwise !== false ? CW : CCW,\n        a = dir[0], \n        b = dir[1],\n        c = dir[2]\n\n    var numIndices = count * 6\n\n    var indices = array || new (dtype(type))(numIndices)\n    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        var x = i + start\n        indices[x + 0] = j + 0\n        indices[x + 1] = j + 1\n        indices[x + 2] = j + 2\n        indices[x + 3] = j + a\n        indices[x + 4] = j + b\n        indices[x + 5] = j + c\n    }\n    return indices\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/quad-indices/index.js\n ** module id = 29\n ** module chunks = 0\n **/","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/dtype/index.js\n ** module id = 30\n ** module chunks = 0\n **/","var str = Object.prototype.toString\n\nmodule.exports = anArray\n\nfunction anArray(arr) {\n  return (\n       arr.BYTES_PER_ELEMENT\n    && str.call(arr.buffer) === '[object ArrayBuffer]'\n    || Array.isArray(arr)\n  )\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/an-array/index.js\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * Determine if an object is Buffer\n *\n * Author:   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * License:  MIT\n *\n * `npm install is-buffer`\n */\n\nmodule.exports = function (obj) {\n  return !!(obj != null &&\n    (obj._isBuffer || // For Safari 5-7 (missing Object.prototype.constructor)\n      (obj.constructor &&\n      typeof obj.constructor.isBuffer === 'function' &&\n      obj.constructor.isBuffer(obj))\n    ))\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/is-buffer/index.js\n ** module id = 32\n ** module chunks = 0\n **/","var flatten = require('flatten-vertex-data')\n\nmodule.exports.attr = setAttribute\nmodule.exports.index = setIndex\n\nfunction setIndex (geometry, data, itemSize, dtype) {\n  if (typeof itemSize !== 'number') itemSize = 1\n  if (typeof dtype !== 'number') dtype = 'uint16'\n\n  var isR69 = !geometry.index && typeof geometry.setIndex !== 'function'\n  var attrib = isR69 ? geometry.getAttribute('index') : geometry.index\n  var newAttrib = updateAttribute(attrib, data, itemSize, dtype)\n  if (newAttrib) {\n    if (isR69) geometry.addAttribute('index', newAttrib)\n    else geometry.index = newAttrib\n  }\n}\n\nfunction setAttribute (geometry, key, data, itemSize, dtype) {\n  if (typeof itemSize !== 'number') itemSize = 3\n  if (typeof dtype !== 'number') dtype = 'float32'\n  if (Array.isArray(data) &&\n    Array.isArray(data[0]) &&\n    data[0].length !== itemSize) {\n    throw new Error('Nested vertex array has unexpected size; expected ' +\n      itemSize + ' but found ' + data[0].length)\n  }\n\n  var attrib = geometry.getAttribute(key)\n  var newAttrib = updateAttribute(attrib, data, itemSize, dtype)\n  if (newAttrib) {\n    geometry.addAttribute(key, newAttrib)\n  }\n}\n\nfunction updateAttribute (attrib, data, itemSize, dtype) {\n  data = data || []\n  if (!attrib || rebuildAttribute(attrib, data, itemSize)) {\n    // create a new array with desired type\n    data = flatten(data, dtype)\n    attrib = new THREE.BufferAttribute(data, itemSize)\n    attrib.needsUpdate = true\n    return attrib\n  } else {\n    // copy data into the existing array\n    flatten(data, attrib.array)\n    attrib.needsUpdate = true\n    return null\n  }\n}\n\n// Test whether the attribute needs to be re-created,\n// returns false if we can re-use it as-is.\nfunction rebuildAttribute (attrib, data, itemSize) {\n  if (attrib.itemSize !== itemSize) return true\n  if (!attrib.array) return true\n  var attribLength = attrib.array.length\n  if (Array.isArray(data) && Array.isArray(data[0])) {\n    // [ [ x, y, z ] ]\n    return attribLength !== data.length * itemSize\n  } else {\n    // [ x, y, z ]\n    return attribLength !== data.length\n  }\n  return false\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-buffer-vertex-data/index.js\n ** module id = 33\n ** module chunks = 0\n **/","/*eslint new-cap:0*/\nvar dtype = require('dtype')\nmodule.exports = flattenVertexData\nfunction flattenVertexData (data, output, offset) {\n  if (!data) throw new TypeError('must specify data as first parameter')\n  offset = +(offset || 0) | 0\n\n  if (Array.isArray(data) && Array.isArray(data[0])) {\n    var dim = data[0].length\n    var length = data.length * dim\n\n    // no output specified, create a new typed array\n    if (!output || typeof output === 'string') {\n      output = new (dtype(output || 'float32'))(length + offset)\n    }\n\n    var dstLength = output.length - offset\n    if (length !== dstLength) {\n      throw new Error('source length ' + length + ' (' + dim + 'x' + data.length + ')' +\n        ' does not match destination length ' + dstLength)\n    }\n\n    for (var i = 0, k = offset; i < data.length; i++) {\n      for (var j = 0; j < dim; j++) {\n        output[k++] = data[i][j]\n      }\n    }\n  } else {\n    if (!output || typeof output === 'string') {\n      // no output, create a new one\n      var Ctor = dtype(output || 'float32')\n      if (offset === 0) {\n        output = new Ctor(data)\n      } else {\n        output = new Ctor(data.length + offset)\n        output.set(data, offset)\n      }\n    } else {\n      // store output in existing array\n      output.set(data, offset)\n    }\n  }\n\n  return output\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/flatten-vertex-data/index.js\n ** module id = 34\n ** module chunks = 0\n **/","/* eslint-disable no-unused-vars */\n'use strict';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nmodule.exports = Object.assign || function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 35\n ** module chunks = 0\n **/","module.exports.pages = function pages (glyphs) {\n  var pages = new Float32Array(glyphs.length * 4 * 1)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var id = glyph.data.page || 0\n    pages[i++] = id\n    pages[i++] = id\n    pages[i++] = id\n    pages[i++] = id\n  })\n  return pages\n}\n\nmodule.exports.uvs = function uvs (glyphs, texWidth, texHeight, flipY) {\n  var uvs = new Float32Array(glyphs.length * 4 * 2)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var bitmap = glyph.data\n    var bw = (bitmap.x + bitmap.width)\n    var bh = (bitmap.y + bitmap.height)\n\n    // top left position\n    var u0 = bitmap.x / texWidth\n    var v1 = bitmap.y / texHeight\n    var u1 = bw / texWidth\n    var v0 = bh / texHeight\n\n    if (flipY) {\n      v1 = (texHeight - bitmap.y) / texHeight\n      v0 = (texHeight - bh) / texHeight\n    }\n\n    // BL\n    uvs[i++] = u0\n    uvs[i++] = v1\n    // TL\n    uvs[i++] = u0\n    uvs[i++] = v0\n    // TR\n    uvs[i++] = u1\n    uvs[i++] = v0\n    // BR\n    uvs[i++] = u1\n    uvs[i++] = v1\n  })\n  return uvs\n}\n\nmodule.exports.positions = function positions (glyphs) {\n  var positions = new Float32Array(glyphs.length * 4 * 2)\n  var i = 0\n  glyphs.forEach(function (glyph) {\n    var bitmap = glyph.data\n\n    // bottom left position\n    var x = glyph.position[0] + bitmap.xoffset\n    var y = glyph.position[1] + bitmap.yoffset\n\n    // quad size\n    var w = bitmap.width\n    var h = bitmap.height\n\n    // BL\n    positions[i++] = x\n    positions[i++] = y\n    // TL\n    positions[i++] = x\n    positions[i++] = y + h\n    // TR\n    positions[i++] = x + w\n    positions[i++] = y + h\n    // BR\n    positions[i++] = x + w\n    positions[i++] = y\n  })\n  return positions\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-bmfont-text/lib/vertices.js\n ** module id = 36\n ** module chunks = 0\n **/","var itemSize = 2\nvar box = { min: [0, 0], max: [0, 0] }\n\nfunction bounds (positions) {\n  var count = positions.length / itemSize\n  box.min[0] = positions[0]\n  box.min[1] = positions[1]\n  box.max[0] = positions[0]\n  box.max[1] = positions[1]\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0]\n    var y = positions[i * itemSize + 1]\n    box.min[0] = Math.min(x, box.min[0])\n    box.min[1] = Math.min(y, box.min[1])\n    box.max[0] = Math.max(x, box.max[0])\n    box.max[1] = Math.max(y, box.max[1])\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions)\n  output.min.set(box.min[0], box.min[1], 0)\n  output.max.set(box.max[0], box.max[1], 0)\n}\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions)\n  var minX = box.min[0]\n  var minY = box.min[1]\n  var maxX = box.max[0]\n  var maxY = box.max[1]\n  var width = maxX - minX\n  var height = maxY - minY\n  var length = Math.sqrt(width * width + height * height)\n  output.center.set(minX + width / 2, minY + height / 2, 0)\n  output.radius = length / 2\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/three-bmfont-text/lib/utils.js\n ** module id = 37\n ** module chunks = 0\n **/","class ViewContainer {\n    constructor () {\n        this.staticViews = new Set();\n        this.dynamicViews = new Set();\n        this._backgroundView = null;\n        this._width = 800;\n        this._height = 600;\n\n        this._initialized = false;\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        if (this._backgroundView) {\n            this._backgroundView.init();\n            this._backgroundView.width = this._width;\n            this._backgroundView.height = this._height;\n            this._backgroundView.mesh.renderOrder = -1;\n            this.mesh.add(this._backgroundView.mesh);\n        }\n\n        for (let staticView of this.staticViews) {\n            staticView.init();\n            this.mesh.add(staticView.mesh);\n        }\n\n        for (let view of this.dynamicViews) {\n            view.init();\n            this.mesh.add(view.mesh);\n        }\n\n        this._initialized = true;\n    }\n\n    set backgroundView (backgroundView) {\n        if (backgroundView !== this._backgroundView) {\n            if (this._initialized) {\n                this._backgroundView.init();\n                this._backgroundView.width = this._width;\n                this._backgroundView.height = this._height;\n                this._backgroundView.mesh.renderOrder = -1;\n                this.mesh.remove(this._backgroundView);\n            }\n\n            this._backgroundView = backgroundView;\n        } else {\n            console.warn('backgroundView is the same');\n        }\n    }\n\n    update (delta) {\n        if (!this._initialized) {\n            throw new Error('View not initialized.');\n        }\n\n        for (let view of this.dynamicViews) {\n            view.update(delta);\n        }\n    }\n\n    addStaticView (staticView, position) {\n        if (this._initialized) {\n            staticView.init();\n            this.mesh.add(staticView.mesh);\n        }\n\n        if (position) {\n            staticView.position = { x: position.x, y: position.y, z: position.z };\n        }\n\n        this.staticViews.add(staticView);\n    }\n\n    addDynamicView (dynamicView, position) {\n        if (this._initialized) {\n            dynamicView.init();\n            this.mesh.add(dynamicView.mesh);\n        }\n\n        if (position) {\n            dynamicView.position = { x: position.x, y: position.y, z: position.z };\n        }\n\n        this.dynamicViews.add(dynamicView);\n    }\n\n    set visible (visible) {\n        this.mesh.visible = visible;\n    }\n\n    get visible () {\n        return this.mesh.visible;\n    }\n\n    set width (width) {\n        let scale = width / this._width;\n\n        this._width = width;\n\n        if (this._backgroundView) {\n            this._backgroundView.width = this._width;\n        }\n\n        this.mesh.scale.x = scale;\n    }\n\n    set height (height) {\n        let scale = height / this._height;\n\n        this._height = height;\n\n        if (this._backgroundView) {\n            this._backgroundView.height = this._height;\n        }\n\n        this.mesh.scale.y = scale;\n    }\n}\n\nexport default ViewContainer;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/ViewContainer.js\n **/","import TextureManager from './TextureManager';\nimport TextureFrame from './TextureFrame';\nimport View from './View';\n\nclass BackgroundView extends View {\n    constructor (textureName, textureAtlasName) {\n        super();\n\n        this.textureName = textureName;\n        this.textureAtlasName = textureAtlasName;\n        this._width = null;\n        this._height = null;\n        this._lightness = 1;\n    }\n\n    init () {\n        let textureAtlas = TextureManager.getAtlas(this.textureAtlasName, true);\n        let size = textureAtlas.getFrameSize(this.textureName);\n\n        this._width = size.width;\n        this._height = size.height;\n\n        this.geometry = new THREE.PlaneGeometry(size.width, size.height);\n\n        let textureFrame = new TextureFrame(textureAtlas, this.geometry, this.textureName);\n\n        this.material = new THREE.MeshBasicMaterial({\n            map: textureFrame.texture,\n            transparent: true\n        });\n\n        let hsl = this.material.color.getHSL();\n\n        this.material.color.setHSL(hsl.h, hsl.s, this._lightness);\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        super.init();\n    }\n\n    set lightness (lightness) {\n        if (this._initalized) {\n            let hsl = this.material.color.getHSL();\n\n            this.material.color.setHSL(hsl.h, hsl.s, lightness);\n        }\n\n        this._lightness = lightness;\n    }\n\n    get lightness () {\n        return this._lightness;\n    }\n\n    set width (width) {\n        let scale = width / this._width ;\n\n        this.mesh.scale.x = scale;\n        this.mesh.position.x = width / 2;\n    }\n\n    set height (height) {\n        let scale = height / this._height;\n\n        this.mesh.scale.y = scale;\n        this.mesh.position.y = height / 2;\n    }\n};\n\nexport default BackgroundView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/graphics/BackgroundView.js\n **/","class MenuItem {\n    constructor (name, text, onAction = null) {\n        this.name = name;\n        this.text = text;\n        this.onAction = onAction;\n        this.editable = false;\n    }\n\n    action () {\n        if (this.onAction) {\n            this.onAction(this);\n        }\n    }\n}\n\nexport default MenuItem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/menu-system/MenuItem.js\n **/","import Keyboard from '../../engine/input/Keyboard';\nimport Gamepad from '../../engine/input/Gamepad';\nimport HumanInput from '../../engine/input/HumanInput';\n\nclass MenuInput extends HumanInput {\n    constructor (state) {\n        super();\n\n        this.state = state;\n    }\n\n    update () {\n        let state = this.state;\n\n        if (this.keyboardDownOnce(Keyboard.UP) || Gamepad.isStickDown(0, 'left', 'up')) {\n            state.currentMenu.moveUp();\n        } else if (this.keyboardDownOnce(Keyboard.DOWN) || Gamepad.isStickDown(0, 'left', 'down')) {\n            state.currentMenu.moveDown();\n        }\n\n        let selectedItem = state.currentMenu.selectedItem;\n\n        if (selectedItem.editable && selectedItem.isEditing) {\n            if (this.keyboardDownOnce(Keyboard.BACKSPACE)) {\n                selectedItem.value = selectedItem.value.slice(0, -1);\n            } else if (Keyboard.letterKeyCodes.indexOf(Keyboard.lastPressed) !== -1) {\n                if (this.keyboardDownOnce(Keyboard[Keyboard.keyByCode(Keyboard.lastPressed)])) {\n                    selectedItem.value = selectedItem.value + Keyboard.keyByCode(Keyboard.lastPressed);\n                }\n            }\n        }\n\n        if (this.keyboardDownOnce(Keyboard.ENTER) || this.keyboardDownOnce(Keyboard.SPACE) ||\n                this.gamepadButtonDownOnce('actionSouth')) {\n            state.currentMenu.selectCurrentItem();\n        }\n    }\n}\n\nexport default MenuInput;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/MenuInput.js\n **/","let letterKeys = {\n    A: 65,\n    B: 66,\n    C: 67,\n    D: 68,\n    E: 69,\n    F: 70,\n    G: 71,\n    H: 72,\n    I: 73,\n    J: 74,\n    K: 75,\n    L: 76,\n    M: 77,\n    N: 78,\n    O: 79,\n    P: 80,\n    Q: 81,\n    R: 82,\n    S: 83,\n    T: 84,\n    U: 86,\n    V: 86,\n    W: 87,\n    X: 88,\n    Y: 89,\n    Z: 90\n};\n\nlet keys = {\n    BACKSPACE: 8,\n    CTRL: 17,\n    SPACE: 32,\n    ENTER: 13,\n    SHIFT: 16,\n    ESC: 27,\n    TAB: 9,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40\n};\n\nfor (let key of Object.keys(letterKeys)) {\n    keys[key] = letterKeys[key];\n}\n\nlet codes = {};\n\nlet Keyboard = {\n    _pressed: {},\n    lastPressed: null,\n\n    isDown (keyCode) {\n        return this._pressed[keyCode];\n    },\n\n    onKeydown (event) {\n        this.lastPressed = event.keyCode;\n        this._pressed[event.keyCode] = true;\n    },\n\n    onKeyup (event) {\n        this._pressed[event.keyCode] = false;\n    },\n\n    keyByCode (code) {\n        return codes[code];\n    },\n\n    get pressedCodes () {\n        return this._pressed;\n    },\n\n    get pressedKeys () {\n        let pressed = [];\n\n        for (let code of this._pressed) {\n            pressed.push(this.keyByCode(code));\n        }\n\n        return pressed;\n    },\n\n    keys: keys,\n    get letterKeyCodes () {\n        let letterCodes = [];\n\n        for (let key of Object.keys(letterKeys)) {\n            letterCodes.push(letterKeys[key]);\n        }\n\n        return letterCodes;\n    }\n};\n\nfor (let key of Object.keys(keys)) {\n    let code = keys[key];\n\n    codes[code] = key;\n    Keyboard[key] = code;\n}\n\nwindow.addEventListener('keyup', function (event) {\n    Keyboard.onKeyup(event);\n    event.preventDefault();\n}, false);\n\nwindow.addEventListener('keydown', function (event) {\n    Keyboard.onKeydown(event);\n    event.preventDefault();\n}, false);\n\nexport default Keyboard;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/input/Keyboard.js\n **/","import GamepadMicro from './utils/gamepad-micro';\n\nlet _gp = new GamepadMicro();\nlet _gamepads = [];\n\nlet Gamepad = {\n    isDown: function (index, button) {\n        if (_gamepads.length > 0) {\n            // FIXME rewrite gamepad-micro\n            let gamepad = _gamepads[index + 1];\n\n            if (gamepad.buttons[button] && gamepad.buttons[button].held) {\n                return true;\n            }\n\n            return false;\n        }\n    },\n    isStickDown: function (index, stick, direction) {\n        if (_gamepads.length > 0) {\n            // FIXME rewrite gamepad-micro\n            let gamepad = _gamepads[index + 1];\n\n            if (stick === 'right' && gamepad.rightStick) {\n                if (direction === 'right') {\n                    if (gamepad.rightStick.x > 0.5) {\n                        return true;\n                    }\n                } else if (direction === 'left') {\n                    if (gamepad.rightStick.x < -0.5) {\n                        return true;\n                    }\n                } else if (direction === 'up') {\n                    if (gamepad.rightStick.y < -0.5) {\n                        return true;\n                    }\n                } else if (direction === 'down') {\n                    if (gamepad.rightStick.y > 0.5) {\n                        return true;\n                    }\n                } else {\n                    return false;\n                }\n            }\n\n            if (stick === 'left' && gamepad.leftStick) {\n                if (direction === 'right') {\n                    if (gamepad.leftStick.x > 0.5) {\n                        return true;\n                    }\n                } else if (direction === 'left') {\n                    if (gamepad.leftStick.x < -0.5) {\n                        return true;\n                    }\n                } else if (direction === 'up') {\n                    if (gamepad.leftStick.y < -0.5) {\n                        return true;\n                    }\n                } else if (direction === 'down') {\n                    if (gamepad.leftStick.y > 0.5) {\n                        return true;\n                    }\n                } else {\n                    return false;\n                }\n            }\n        }\n    }\n};\n\n_gp.onUpdate(function (gamepads) {\n    _gamepads = gamepads;\n\n    if (_gp.gamepadsConnected) {\n\n    } else {\n\n    }\n});\n\nexport default Gamepad;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/input/Gamepad.js\n **/","/**\n * Copyright 2014 Christopher Dolphin. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @author dolphin@likethemammal.com (Chris Dolphin)\n */\n\n/**\n * GamepadMicro provides an easy interface to the Gamepad API.\n *\n * @constructor\n */\nfunction GamepadMicro () {\n    this._buttonNames = [\n        'actionSouth',\n        'actionEast',\n        'actionWest',\n        'actionNorth',\n        'leftBumper',\n        'rightBumper',\n        'leftTrigger',\n        'rightTrigger',\n        'select',\n        'start',\n        'leftStick',\n        'rightStick',\n        'dPadUp',\n        'dPadDown',\n        'dPadLeft',\n        'dPadRight',\n        'extra'\n    ];\n\n    this.reset();\n}\n\nGamepadMicro.prototype.reset = function () {\n    this._ticking = false;\n    this._prevTimestamps = [];\n    this._connectionListening = false;\n    this._updateCallback = function () {};\n    this._prevRawGamepadTypes = [];\n    this.gamepadconnected = _getRawGamepads.length > 0;\n    this.gamepadConnected = !!this.gamepadconnected;\n    this.gamepadSupported = !!_gamepadSupported();\n    this.gamepads = [];\n    this._heldButtonDelay = 200;\n    this._heldTimestampByGamepad = {};\n};\n\nlet _newGamepad = function () {\n    return {\n        leftStick: { x: 0, y: 0 },\n        rightStick: { x: 0, y: 0 },\n        dPad: { x: 0, y: 0 },\n        buttons: {},\n        _pressed: {},\n        timestamp: 0\n    };\n};\n\nGamepadMicro.prototype.onUpdate = function (callback) {\n    this._updateCallback = callback;\n    this._checkForEvents();\n    this._setupPoll();\n};\n\nGamepadMicro.prototype.offUpdate = function () {\n    this._shouldRemoveEvents();\n    this._removePoll();\n};\n\nGamepadMicro.prototype.update = function () {\n    this._updateCallback(this.gamepads);\n};\n\nGamepadMicro.prototype._checkForEvents = function () {\n    if (!this._connectionListening) {\n        window.addEventListener('gamepadconnected', this._onGamepadConnected.bind(this), false);\n        window.addEventListener('gamepaddisconnected', this._onGamepadDisconnected.bind(this), false);\n        this._connectionListening = true;\n    }\n};\n\nGamepadMicro.prototype._shouldRemoveEvents = function () {\n    if (this._connectionListening) {\n        window.removeEventListener('gamepadconnected', this._onGamepadConnected.bind(this));\n        window.removeEventListener('gamepaddisconnected', this._onGamepadDisconnected.bind(this));\n        this._connectionListening = false;\n    }\n};\n\nGamepadMicro.prototype._onGamepadConnected = function (event) {\n    let gamepad = event.gamepad;\n\n    if (gamepad.mapping === 'standard') {\n        this.gamepads[gamepad.index] = _newGamepad();\n        this.gamepadconnected = true;\n\n        this.update();\n    }\n};\n\nGamepadMicro.prototype._onGamepadDisconnected = function (event) {\n    let disconnectedGamepad = event.gamepad;\n    let gamepads = this.gamepads;\n\n    gamepads.forEach(function (gamepad, index) {\n        if (index === disconnectedGamepad.index) {\n            gamepads.splice(index, 1);\n        }\n    });\n\n    if (!gamepads.length) {\n        this.gamepadconnected = false;\n    }\n\n    this.update();\n};\n\nlet _getRawGamepads = function () {\n    let gamepads = (navigator.getGamepads && navigator.getGamepads()) || (navigator.webkitGetGamepads && navigator.webkitGetGamepads());\n    let standardGamepads = [];\n\n    if (gamepads) {\n        for (let i = 0, len = gamepads.length; i < len; i++) {\n            let gp = gamepads[i];\n\n            if (gp && gp.mapping === 'standard') {\n                standardGamepads.push(gp);\n            }\n        }\n    }\n\n    return standardGamepads;\n};\n\nlet _buttonPressed = function (gamepad, index) {\n    if (!gamepad || !gamepad.buttons || index >= gamepad.buttons.length) {\n        return false;\n    }\n\n    let b = gamepad.buttons[index];\n    let pressure = null;\n\n    if (!b) {\n        return false;\n    }\n\n    pressure = b;\n\n    if (typeof b === 'object') {\n        pressure = b.value;\n    }\n\n    return (pressure === 1.0);\n};\n\nGamepadMicro.prototype._checkForGamepadChange = function () {\n    let rawGamepads = _getRawGamepads();\n    let changed = false;\n    let changedRawGamepads = {};\n    let gamepadIndex = 0;\n\n    for (let i = 0; i < rawGamepads.length; i++) {\n        let gamepad = rawGamepads[i];\n        let heldTimestamps = null;\n        let hasBeenHeld = null;\n\n        if (!gamepad.timestamp) {\n            continue;\n        }\n\n        gamepadIndex = gamepad.index;\n\n        // Browsers don't update the gamepad timestamp if a button remains held.\n        // This is a manual check to see if any button has been held. Since the\n        // browser would tell us if it released, we'll assume some button is\n        // still held and announce it's continued heldness.\n        heldTimestamps = this._heldTimestampByGamepad[gamepadIndex] || {};\n        hasBeenHeld = Object.keys(heldTimestamps).length === 0;\n\n        // Don’t do anything if the current timestamp is the same as previous\n        // one, which means that the state of the gamepad hasn’t changed.\n        // This is only supported by Chrome right now, so the first check\n        // makes sure we’re not doing anything if the timestamps are empty\n        // or undefined.\n\n        if (gamepad.timestamp === this._prevTimestamps[gamepadIndex] && hasBeenHeld) {\n            continue;\n        }\n\n        this._prevTimestamps[gamepadIndex] = gamepad.timestamp;\n        changedRawGamepads[gamepadIndex] = gamepad;\n        changed = true;\n    }\n\n    return (changed) ? changedRawGamepads : false;\n};\n\nGamepadMicro.prototype._poll = function () {\n    let rawGamepads = this._checkForGamepadChange();\n\n    if (!rawGamepads) {\n        return;\n    }\n\n    this.gamepadconnected = true;\n    this.gamepadConnected = true;\n    this.gamepadSupported = true;\n\n    let currentGamepads = this.gamepads;\n    let buttonNames = this._buttonNames;\n\n    Object.keys(rawGamepads).map((gamepadIndex) => {\n        let currentRawGamepad = rawGamepads[gamepadIndex];\n\n        if (!currentRawGamepad) {\n            return;\n        }\n\n        // Gamepad(s) has changed\n        if (typeof currentRawGamepad !== this._prevRawGamepadTypes[gamepadIndex]) {\n            this._prevRawGamepadTypes[gamepadIndex] = typeof currentGamepad;\n        }\n\n        let activeButtons = {};\n        let currentGamepad = currentGamepads[gamepadIndex] || _newGamepad();\n        let heldTimestamps = this._heldTimestampByGamepad[gamepadIndex] || {};\n\n        for (let k = 0, len = buttonNames.length; k < len; k++) {\n            let name = buttonNames[k];\n            let heldTimestamp = heldTimestamps[name];\n            let isSameTimestamp = null;\n            let wasDown = !!currentGamepad._pressed[name];\n            let isDown = currentGamepad._pressed[name] = _buttonPressed(currentRawGamepad, k);\n            let now = Date.now();\n\n            if (wasDown && !isDown) {\n                activeButtons[name] = {\n                    released: true,\n                    held: false\n                };\n\n                if (heldTimestamps) {\n                    delete heldTimestamps[name];\n                }\n            } else if (isDown) {\n                if (heldTimestamp) {\n                    isSameTimestamp = heldTimestamp['gamepadTimestamp'] === currentRawGamepad.timestamp;\n\n                    // If the gamepad timestamp hasn't changed and the time is after the held delay\n                    if ((isSameTimestamp && now > heldTimestamp['browserTimestamp'] + this._heldButtonDelay) || (currentRawGamepad.timestamp > heldTimestamp['gamepadTimestamp'] + this._heldButtonDelay)) {\n                        activeButtons[name] = {\n                            held: true\n                        };\n                    }\n                } else {\n                    heldTimestamps[name] = {\n\n                        // Gamepad Timestamps are HighResTimeStamps relative when gamepad was connected\n                        gamepadTimestamp: currentRawGamepad.timestamp,\n                        browserTimestamp: now\n                    } ;\n                }\n            }\n        }\n\n        this._heldTimestampByGamepad[gamepadIndex] = heldTimestamps;\n\n        currentGamepad.timestamp = currentRawGamepad.timestamp;\n        currentGamepad.buttons = activeButtons;\n\n        // update the sticks\n        currentGamepad.leftStick.x = currentRawGamepad.axes[0];\n        currentGamepad.leftStick.y = currentRawGamepad.axes[1];\n        currentGamepad.rightStick.x = currentRawGamepad.axes[2];\n        currentGamepad.rightStick.y = currentRawGamepad.axes[3];\n\n        // dpad isn't a true stick, infer from buttons\n        currentGamepad.dPad.x = (currentGamepad.buttons.dPadLeft ? -1 : 0) + (currentGamepad.buttons.dPadRight ? 1 : 0);\n        currentGamepad.dPad.y = (currentGamepad.buttons.dPadUp ? -1 : 0) + (currentGamepad.buttons.dPadDown ? 1 : 0);\n\n        this.gamepads[gamepadIndex] = currentGamepad;\n    });\n\n    this.update();\n};\n\nGamepadMicro.prototype._setupPoll = function () {\n    if (!this._ticking) {\n        this._ticking = true;\n        this._tick();\n    }\n};\n\nGamepadMicro.prototype._tick = function () {\n    let tickFunc = GamepadMicro.prototype._tick.bind(this);\n\n    this._poll();\n\n    if (this._ticking) {\n        if (window.requestAnimationFrame) {\n            window.requestAnimationFrame(tickFunc);\n        } else if (window.mozRequestAnimationFrame) {\n            window.mozRequestAnimationFrame(tickFunc);\n        } else if (window.webkitRequestAnimationFrame) {\n            window.webkitRequestAnimationFrame(tickFunc);\n        }\n    }\n};\n\nGamepadMicro.prototype._removePoll = function () {\n    this._ticking = false;\n};\n\nlet _gamepadSupported = function () {\n    return navigator.getGamepads ||\n        !!navigator.webkitGetGamepads ||\n        !!navigator.webkitGamepads;\n};\n\nexport default GamepadMicro;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/input/utils/gamepad-micro.js\n **/","import Keyboard from './Keyboard';\nimport Gamepad from './Gamepad';\n\nclass HumanInput {\n    constructor () {\n        this._previousKeyboardKeys = {};\n        this._previousGamepadStick = {};\n        this._previousGamepadButton = {};\n        this.gamepadIndex = 0;\n    }\n\n    keyboardDownOnce (keyCode) {\n        if (!this._previousKeyboardKeys[keyCode] && Keyboard.isDown(keyCode)) {\n            this._previousKeyboardKeys[keyCode] = true;\n\n            return true;\n        } else if (this._previousKeyboardKeys[keyCode] && !Keyboard.isDown(keyCode)) {\n            this._previousKeyboardKeys[keyCode] = false;\n        }\n\n        return false;\n    }\n\n    gamepadStickDownOnce (stick, direction) {\n        if (!this._previousGamepadStick[stick + direction] &&\n                !Gamepad.isStickDown(this.gamepadIndex, stick, direction)) {\n            this._previousGamepadStick[stick + direction] = true;\n        } else if (this._previousGamepadStick[stick + direction] &&\n                !Gamepad.isStickDown(this.gamepadIndex, stick, direction)) {\n            this._previousGamepadStick[stick + direction] = false;\n        }\n    }\n\n    gamepadButtonDownOnce (button) {\n        if (!this._previousGamepadButton[button] && !Gamepad.isDown(this.gamepadIndex, button)) {\n            this._previousGamepadButton[button] = true;\n        } else if (this._previousGamepadButton[button] && !Gamepad.isDown(this.gamepadIndex, button)) {\n            this._previousGamepadButton[button] = false;\n        }\n    }\n}\n\nexport default HumanInput;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/input/HumanInput.js\n **/","import { View, TextView } from '../../../engine/graphics';\nimport LogoView from './LogoView';\n\nclass MenuItemsView extends View {\n    constructor (menu, options = {\n        selectedTextColor: 0x00ff00,\n        textColor: 0xffdddd\n    }) {\n        super();\n\n        this.menu = menu;\n        this.options = options;\n        this.viewMenuItemPairs = new Map();\n        this.selectedItem = null;\n        this.selectedView = null;\n        this.logoView = new LogoView('logo', 'ui');\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        let distance = 100;\n        let startY = 200;\n        let itemCount = 0;\n\n        this.selectedItem = this.menu.selectedItem;\n\n        for (let menuItem of this.menu.menuItems.values()) {\n            let textView = new TextView(menuItem.text, {\n                width: 300\n            });\n\n            textView.init();\n            textView.mesh.position.y = startY - (distance * itemCount);\n            textView.mesh.position.x += 100;\n\n            if (this.selectedItem === menuItem) {\n                textView.color = this.options.selectedTextColor;\n            } else {\n                textView.color = this.options.textColor;\n            }\n\n            this.viewMenuItemPairs.set(menuItem, textView);\n\n            this.mesh.add(textView.mesh);\n            itemCount += 1;\n        }\n\n        super.init();\n    }\n\n    update () {\n        // Selected item changed\n        if (this.selectedItem !== this.menu.selectedItem) {\n            let previousItem = this.selectedItem;\n\n            this.selectedItem = this.menu.selectedItem;\n\n            let currentView = this.viewMenuItemPairs.get(this.selectedItem);\n            let previousView = this.viewMenuItemPairs.get(previousItem);\n\n            currentView.text = this.selectedItem.text;\n\n            previousView.color = this.options.textColor;\n            currentView.color = this.options.selectedTextColor;\n        }\n\n        if (this.menu.selectedItem.editable && this.menu.selectedItem.isEditing) {\n            let currentView = this.viewMenuItemPairs.get(this.selectedItem);\n\n            currentView.text = this.selectedItem.text + '-';\n        } else {\n            let currentView = this.viewMenuItemPairs.get(this.selectedItem);\n\n            currentView.text = this.selectedItem.text;\n        }\n    }\n}\n\nexport default MenuItemsView;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/views/MenuItemsView.js\n **/","import { TextureManager, TextureFrame, View } from '../../../engine/graphics';\nconsole.log(View);\n\nclass LogoView extends View {\n    constructor (textureName, textureAtlasName) {\n        super();\n\n        this.textureName = textureName;\n        this.textureAtlasName = textureAtlasName;\n    }\n\n    init () {\n        let textureAtlas = TextureManager.getAtlas(this.textureAtlasName, true);\n        let logoSize = textureAtlas.getFrameSize(this.textureName);\n\n        this.geometry = new THREE.PlaneGeometry(logoSize.width, logoSize.height);\n\n        let textureFrame = new TextureFrame(textureAtlas, this.geometry, this.textureName);\n        let material = new THREE.MeshBasicMaterial({\n            map: textureFrame.texture,\n            transparent: true\n        });\n\n        this.mesh = new THREE.Mesh(this.geometry, material);\n\n        super.init();\n    }\n};\n\nexport default LogoView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/views/LogoView.js\n **/","import RenderView from '../../../engine/graphics/RenderView';\n\nclass MenuRenderView extends RenderView {\n    constructor (state) {\n        super();\n\n        this.state = state;\n        this.menu = state.menus;\n        this.clearColor = 0x000000;\n    }\n\n    init () {\n        super.init();\n\n        this.camera = new THREE.OrthographicCamera(0, this.width,\n            this.height, 0, 0, 1);\n\n        this._initialized = true;\n    }\n\n    update (delta) {\n        super.update(delta);\n\n        if (this.currentViewContainerName !== this.state.currentMenuName) {\n            this.currentViewContainer = this.state.currentMenuName;\n        }\n    }\n}\n\nexport default MenuRenderView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/views/MenuRenderView.js\n **/","import StateAudio from '../StateAudio';\n\nclass MenuAudio extends StateAudio {\n    constructor (state, effectsSpriteName, backgroundSpriteName) {\n        super(state, effectsSpriteName, backgroundSpriteName);\n\n        this.selectedItem = this.state.currentMenu.selectedItem;\n    }\n\n    update (delta) {\n        // Selected item changed\n        if (this.selectedItem !== this.state.currentMenu.selectedItem) {\n            this.selectedItem = this.state.currentMenu.selectedItem;\n            this.effects.play('select');\n        }\n    }\n}\n\nexport default MenuAudio;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/MenuAudio.js\n **/","import AssetManager from '../engine/AssetManager';\n\nclass StateAudio {\n    constructor (state, effectsSpriteName = null, backgroundSpriteName = null) {\n        this.state = state;\n        this.effectsSpriteName = effectsSpriteName;\n        this.backgroundSpriteName = backgroundSpriteName;\n\n        this.effects = null;\n        this.backgrounds = null;\n\n        this._initialized = false;\n    }\n\n    init () {\n        if (this.effectsSpriteName) {\n            this.effects = AssetManager.getAudioSprite(this.effectsSpriteName).sound;\n        }\n\n        if (this.backgroundSpriteName) {\n            this.backgrounds = AssetManager.getAudioSprite(this.backgroundSpriteName).sound;\n        }\n\n        this._initialized = true;\n    }\n\n    stopEffects () {\n        if (this.effects) {\n            this.effects.stop();\n        }\n    }\n\n    stopBackground () {\n        if (this.backgrounds) {\n            this.backgrounds.stop();\n        }\n    }\n}\n\nexport default StateAudio;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/StateAudio.js\n **/","class Menu {\n    constructor () {\n        this.menuItems = new Map();\n        this.menuItemKeys = [];\n        this.selectedItemIndex = 0;\n    }\n\n    addMenuItem (menuItem) {\n        this.menuItemKeys.push(menuItem.name);\n        this.menuItems.set(menuItem.name, menuItem);\n    }\n\n    get selectedItem () {\n        return this.menuItems.get(this.menuItemKeys[this.selectedItemIndex]);\n    }\n\n    moveUp () {\n        if (this.selectedItemIndex > 0) {\n            this.selectedItemIndex -= 1;\n        } else {\n            this.selectedItemIndex = 0;\n        }\n    }\n\n    moveDown () {\n        if (this.selectedItemIndex < this.menuItemKeys.length - 1) {\n            this.selectedItemIndex += 1;\n        } else {\n            this.selectedItemIndex = this.menuItemKeys.length - 1;\n        }\n    }\n\n    selectCurrentItem () {\n        this.selectedItem.action();\n    }\n}\n\nexport default Menu;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/menu-system/Menu.js\n **/","import Menu from '../../engine/menu-system/Menu';\nimport MenuItem from '../../engine/menu-system/MenuItem';\nimport MenuInputItem from '../../engine/menu-system/MenuInputItem';\nimport BackgroundView from '../../engine/graphics/BackgroundView';\nimport ViewContainer from '../../engine/graphics/ViewContainer';\nimport MenuItemsView from './views/MenuItemsView';\n\nlet OptionsMenu = {\n    create (menuState) {\n        let menu = new Menu();\n        let viewContainer = new ViewContainer();\n\n        menu.addMenuItem(new MenuInputItem('name', 'Name', 'Unknown Soldier', function (value) {\n            menuState.changeOption('name', value);\n        }));\n\n        menu.addMenuItem(new MenuItem('back', '- back', function () {\n            menuState.currentMenu = 'main';\n        }));\n\n        viewContainer.addDynamicView(new MenuItemsView(menu), { x: 300, y: 100, z: 0 });\n\n        let background = new BackgroundView('iwo_jima', 'ui');\n\n        background.lightness = 0.5;\n\n        viewContainer.backgroundView = background;\n\n        return {\n            viewContainer: viewContainer,\n            menu: menu\n        };\n    }\n};\n\nexport default OptionsMenu;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/OptionsMenu.js\n **/","import MenuItem from './MenuItem';\n\nclass MenuInputItem extends MenuItem {\n    constructor (name, label, defaultValue, onAction) {\n        super(name, label + ': ' + defaultValue, onAction);\n\n        this.label = label;\n        this.defaultValue = defaultValue;\n        this.isEditing = false;\n        this._value = defaultValue;\n        this.editable = true;\n    }\n\n    action () {\n        this.isEditing = !this.isEditing;\n\n        if (!this.isEditing && this.onAction) {\n            this.onAction(this._value);\n        }\n    }\n\n    set value (value) {\n        this._value = value;\n        this.text = this.label + ': ' + value;\n    }\n\n    get value () {\n        return this._value;\n    }\n}\n\nexport default MenuInputItem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/menu-system/MenuInputItem.js\n **/","import Menu from '../../engine/menu-system/Menu';\nimport MenuItem from '../../engine/menu-system/MenuItem';\nimport BackgroundView from '../../engine/graphics/BackgroundView';\nimport ViewContainer from '../../engine/graphics/ViewContainer';\nimport MenuItemsView from './views/MenuItemsView';\n\nlet HelpMenu = {\n    create (menuState) {\n        let menu = new Menu();\n        let viewContainer = new ViewContainer();\n\n        menu.addMenuItem(new MenuItem('back', '- back', function () {\n            menuState.currentMenu = 'main';\n        }));\n\n        viewContainer.addDynamicView(new MenuItemsView(menu), { x: 300, y: 100, z: 0 });\n\n        let background = new BackgroundView('iwo_jima', 'ui');\n\n        background.lightness = 0.5;\n\n        viewContainer.backgroundView = background;\n\n        return {\n            viewContainer: viewContainer,\n            menu: menu\n        };\n    }\n};\n\nexport default HelpMenu;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/HelpMenu.js\n **/","import PlayState from './PlayState';\nimport ViewBuilder from './ViewBuilder';\n\nimport Match from '../../core/Match';\nimport PlayerInput from './input/PlayerInput';\nimport UiInput from './input/UiInput';\nimport ComputerInput from './input/ComputerInput';\nimport Player from '../../core/entities/Player';\n\nimport PlayAudio from './PlayAudio';\nimport MapParser from '../../core/maps/MapParser';\nimport AssetManager from '../../engine/AssetManager';\n\nimport Soldier from '../../core/entities/Soldier';\nimport CollisionSystem from '../../core/CollisionSystem';\nimport BulletSystem from '../../core/BulletSystem';\n\n/**\n * Create CPU soldiers.\n *\n * @param {PlayState} playState The play playState.\n * @param {number} count Number of CPU soldiers.\n *\n * @return {void}\n */\nfunction createCpuSoldiers (playState, count) {\n    for (let i = 0; i < count; i++) {\n        let {x, y, z} = playState.map.randomRespawnPosition();\n        let soldier = new Soldier(x, y, z, 48, 48, 1, 'american');\n\n        playState.inputs.add(new ComputerInput(soldier));\n        playState.match.addSoldier(soldier);\n    }\n}\n\n/**\n * Create the player entity and add it to the play state.\n *\n * @param {PlayState} playState The play state.\n * @param {string} name Name of the player.\n *\n * @return {void}\n */\nfunction createPlayer (playState, name) {\n    let {x, y, z} = playState.map.randomRespawnPosition();\n    let player = new Player(x, y, z, 48, 48, 1, 'american');\n    let playerInput = new PlayerInput(player);\n\n    playState.player = player;\n    playState.inputs.add(playerInput);\n    playState.match.addSoldier(player, 'american');\n}\n\n/**\n * Create the views for the play state.\n *\n * @param {PlayState} playState The play state.\n *\n * @return {void}\n */\nfunction createViews (playState) {\n    playState.addView(ViewBuilder.playView(playState));\n    playState.addView(ViewBuilder.uiView(playState));\n}\n\nlet PlayBuilder = {\n    createSingleplayer (engine, options) {\n        let map = MapParser.parse(AssetManager.getMap(options.map));\n        let match = new Match(options.teams);\n        let playState = new PlayState(match, map);\n\n        createCpuSoldiers(playState, options.cpuCount);\n        createPlayer(playState, options.playerName);\n\n        let collisionSystem = new CollisionSystem(playState);\n        let bulletSystem = new BulletSystem(playState, {\n            poolLimit: options.poolLimit || 200\n        });\n\n        playState.bulletSystem = bulletSystem;\n        playState.collisionSystem = collisionSystem;\n        playState.audio = new PlayAudio(playState, 'guns', 'background');\n\n        let uiInput = new UiInput(playState);\n\n        playState.inputs.add(uiInput);\n\n        createViews(playState);\n\n        return playState;\n    }\n};\n\nexport default PlayBuilder;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/PlayBuilder.js\n **/","import State from '../State';\n\n/**\n * State of playing the game.\n *\n * @class\n * @extends State\n */\nclass PlayState extends State {\n\n    constructor (match, map) {\n        super('play');\n\n        this.collisionSystem = null;\n        this.bulletSystem = null;\n        this.network = null;\n        this.player = null;\n        this.map = map;\n        this.match = match;\n\n        // FIXME get this out of here\n        this.showScores = false;\n        this.paused = false;\n        this.onPause = null;\n    }\n\n    init () {\n        super.init();\n    }\n\n    get soldiers () {\n        return this.match.soldiers;\n    }\n\n    pause () {\n        if (this.onPause) {\n            this.onPause();\n        }\n\n        this.paused = true;\n    }\n\n    resume () {\n        this.paused = false;\n    }\n\n    /**\n     * Update the state. Logic and views are updated.\n     *\n     * @param {float} delta - delta time.\n     *\n     * @returns {void}\n     */\n    update (delta) {\n        super.updateInputs(delta);\n\n        if (this.network) {\n            this.network.update();\n        }\n\n        if (this.paused) {\n            return;\n        }\n\n        super.updateAudio(delta);\n\n        // Relies on previous turn\n        if (this.bulletSystem) {\n            this.bulletSystem.update(delta);\n        }\n\n        for (let soldier of this.soldiers) {\n            soldier.update(delta);\n\n            if (soldier.dead) {\n                let position = this.map.randomRespawnPosition();\n\n                soldier.respawn(position);\n            }\n        }\n\n        this.match.update(delta);\n\n        if (this.collisionSystem) {\n            this.collisionSystem.update(delta);\n        }\n    }\n}\n\nexport default PlayState;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/PlayState.js\n **/","/**\n * Base class for all states.\n *\n * @class\n */\nclass State {\n\n    /**\n     * @constructor\n     *\n     * @param {string} name - name of the state.\n     * @param {Engine} engine - game engine instance.\n     */\n    constructor (name, engine) {\n        this.name = name;\n        this.engine = engine;\n        this.inputs = new Set();\n        this.views = new Set();\n        this.audio = null;\n        this._initialized = false;\n    }\n\n    addView (view) {\n        this.views.add(view);\n    }\n\n    update () {\n        throw new TypeError('State requires update() method');\n    }\n\n    init () {\n        if (!this._initialized) {\n            if (this.audio) {\n                this.audio.init();\n            }\n\n            for (let view of this.views.values()) {\n                view.init();\n            }\n\n            this._initialized = true;\n        }\n    }\n\n    updateInputs (delta) {\n        for (let input of this.inputs.values()) {\n            input.update(delta);\n        }\n    }\n\n    render (delta) {\n        for (let view of this.views.values()) {\n            view.update(delta);\n        }\n    }\n\n    updateAudio (delta) {\n        if (this.audio) {\n            this.audio.update(delta);\n        }\n    }\n}\n\nexport default State;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/State.js\n **/","import ViewContainer from '../../engine/graphics/ViewContainer';\n\nimport StatsRenderView from './ui/StatsRenderView';\nimport AmmoView from './ui/AmmoView';\nimport HealthView from './ui/HealthView';\nimport WeaponView from './ui/WeaponView';\nimport ScoreView from './ui/ScoreView';\n\nimport BulletSystemView from './views/BulletSystemView';\nimport WorldMapView from './views/WorldMapView';\nimport SoldierView from './views/SoldierView';\nimport SoldierViewPool from './views/SoldierViewPool';\nimport PlayRenderView from './views/PlayRenderView';\n\nlet ViewBuilder = {\n    uiView (playState) {\n        let uiView = new StatsRenderView(playState);\n        let uiViewContainer = new ViewContainer();\n\n        let scoreView = new ScoreView(playState);\n        let weaponView = new WeaponView(playState);\n        let ammoView = new AmmoView(playState);\n        let healthView = new HealthView(playState);\n\n        uiViewContainer.addDynamicView(scoreView, { x: 100, y: 100, z: 0});\n        uiViewContainer.addDynamicView(weaponView, { x: 250, y: 540, z: 0});\n        uiViewContainer.addDynamicView(ammoView, { x: 10, y: 540, z: 0});\n        uiViewContainer.addDynamicView(healthView, { x: 600, y: 540, z: 0});\n        uiView.addViewContainer('main', uiViewContainer);\n        uiView.currentViewContainer = 'main';\n\n        return uiView;\n    },\n\n    playView (playState) {\n        let playView = new PlayRenderView(playState);\n\n        let playerView = new SoldierView(playState.player);\n        let soldierView = new SoldierViewPool(playState.soldiers);\n        let bulletSystemView = new BulletSystemView(playState.bulletSystem);\n        let worldMapView = new WorldMapView(playState.map);\n\n        let viewContainer = new ViewContainer();\n\n        viewContainer.addDynamicView(playerView);\n        viewContainer.addDynamicView(soldierView);\n        viewContainer.addDynamicView(bulletSystemView);\n        viewContainer.addDynamicView(worldMapView);\n\n        playView.addViewContainer('main', viewContainer);\n        playView.currentViewContainer = 'main';\n\n        // Camera follow\n        playView.cameraFollowView = playerView;\n\n        return playView;\n    }\n};\n\nexport default ViewBuilder;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/ViewBuilder.js\n **/","import RenderView from '../../../engine/graphics/RenderView';\n\n// TODO fix duplicate code of subviews\nclass StatsRenderView extends RenderView {\n    constructor (state) {\n        super();\n\n        this.state = state;\n    }\n\n    init () {\n        super.init();\n\n        this.camera = new THREE.OrthographicCamera(0, this.width,\n            this.height, 0, 0, 1);\n\n        this._initialized = true;\n    }\n\n    update (delta) {\n        super.update(delta);\n    }\n\n}\n\nexport default StatsRenderView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/ui/StatsRenderView.js\n **/","import { View, TextureManager, TextView, TextureFrame } from '../../../engine/graphics';\n\nclass AmmoView extends View {\n    constructor (state) {\n        super();\n\n        this.player = state.player;\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        let textureAtlas = TextureManager.getAtlas('ui', false);\n\n        let material = new THREE.MeshBasicMaterial({\n            map: textureAtlas.texture,\n            transparent: true\n        });\n\n        let ammoSize = textureAtlas.getFrameSize('ammo');\n\n        this.geometry = new THREE.PlaneGeometry(ammoSize.width, ammoSize.height);\n        this.textureFrame = new TextureFrame(textureAtlas, this.geometry, 'ammo');\n\n        let ammoMesh = new THREE.Mesh(this.geometry, material);\n\n        ammoMesh.scale.set(0.5, 0.5, 1);\n\n        this.magazineText = new TextView('0', {\n            color: 0xffffcc\n        });\n\n        this.magazineText.init();\n\n        this.magazineText.mesh.scale.set(2, 2, 1);\n\n        this.magazineText.position = {\n            x: ammoSize.width + 10,\n            y: -this.magazineText.height\n        };\n\n        this.mesh.add(this.magazineText.mesh);\n\n        this.ammoText = new TextView('0', {\n            color: 0xffff99\n        });\n\n        this.ammoText.init();\n\n        this.ammoText.mesh.scale.set(1, 1, 1);\n\n        this.ammoText.position = {\n            x: ammoSize.width + 64,\n            y: -this.ammoText.height\n        };\n\n        ammoMesh.position.x = 20;\n        this.magazineText.position.x = 40;\n        this.ammoText.position.x = 100;\n\n        this.mesh.add(this.ammoText.mesh);\n        this.mesh.add(ammoMesh);\n\n        super.init();\n    }\n\n    set ammo (ammo) {\n        if (ammo === null) {\n            this.ammoText.text = '-';\n        }\n        this.ammoText.text = ammo;\n    }\n\n    set magazine (magazine) {\n        if (magazine === null) {\n            this.magazineText.text = '-';\n        }\n        this.magazineText.text = magazine;\n    }\n\n    update (delta) {\n        if (this.player.currentWeapon) {\n            let weapon = this.player.currentWeapon;\n\n            this.ammo = weapon.ammo;\n            this.magazine = weapon.magazine;\n        } else {\n            this.ammo = null;\n            this.magazine = null;\n        }\n    }\n}\n\nexport default AmmoView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/ui/AmmoView.js\n **/","import View from '../../../engine/graphics/View';\n\nclass HealthView extends View {\n    constructor (state) {\n        super();\n\n        this.player = state.player;\n        this._healthScale = 1;\n    }\n\n    init () {\n        let material = new THREE.MeshBasicMaterial({\n            color: 0xcc0000\n        });\n\n        this.geometry = new THREE.PlaneGeometry(200, 20);\n\n        // Change originX to left side\n        this.geometry.applyMatrix(new THREE.Matrix4().makeTranslation(100, 0, 0));\n\n        this.mesh = new THREE.Mesh(this.geometry, material);\n\n        super.init();\n    }\n\n    set healthScale (value) {\n        if (value !== this._healthScale) {\n            this._healthScale = value;\n\n            if (value <= 0) {\n                this.mesh.visible = false;\n            } else {\n                if (!this.mesh.visible) {\n                    this.mesh.visible = true;\n                }\n\n                let oldX = this.mesh.position.x;\n\n                this.mesh.scale.set(value, 1, 1);\n                this.mesh.position.x = oldX;\n            }\n        }\n    }\n\n    update (delta) {\n        this.healthScale = this.player.health / this.player.maxHealth;\n    }\n}\n\nexport default HealthView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/ui/HealthView.js\n **/","import { TextureManager, TextureFrame, View } from '../../../engine/graphics';\n\nclass WeaponView extends View {\n    constructor (state) {\n        super();\n\n        this.player = state.player;\n        this._weapon = null;\n    }\n\n    init () {\n        let textureAtlas = TextureManager.getAtlas('ui', true);\n\n        this.geometry = new THREE.PlaneGeometry(196, 64);\n        this.textureFrame = new TextureFrame(textureAtlas, this.geometry);\n\n        this.material = new THREE.MeshBasicMaterial({\n            map: this.textureFrame.texture,\n            transparent: true\n        });\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        super.init();\n    }\n\n    set weapon (weapon) {\n        if (this._weapon !== weapon) {\n            if (!this.mesh.visible) {\n                this.mesh.visible = true;\n            }\n\n            this._weapon = weapon;\n            this.textureFrame.frame = weapon;\n        } else if (weapon === null) {\n            if (this.mesh.visible) {\n                this.mesh.visible = false;\n            }\n        }\n    }\n\n    update (delta) {\n        if (this.player.currentWeapon) {\n            let weapon = this.player.currentWeapon;\n\n            this.weapon = weapon.name;\n        } else {\n            this.weapon = null;\n        }\n    }\n}\n\nexport default WeaponView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/ui/WeaponView.js\n **/","import { View, TextView } from '../../../engine/graphics';\n\nlet _converToText = function (teams) {\n    let resultText = '';\n\n    for (let [teamName, teamData] of teams.entries()) {\n        resultText += `${teamName} - k: ${teamData.kills} - d: ${teamData.deaths} \\n`;\n\n        let soldierText = [];\n\n        for (let soldier of teamData.soldiers) {\n            let text = `${soldier.name} - k: ${soldier.totalKills} - d: ${soldier.totalDeaths}`;\n\n            soldierText.push(text);\n        }\n\n        resultText += soldierText.join('\\n');\n        resultText += '\\n----------------------\\n';\n    }\n\n    return resultText;\n};\n\nclass ScoreView extends View {\n    constructor (state) {\n        super();\n\n        this.state = state;\n        this.match = state.match;\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        let backgroundMaterial = new THREE.MeshLambertMaterial({\n            color: 0x00000,\n            transparent: true,\n            opacity: 0.5\n        });\n\n        let backgroundGeometry = new THREE.PlaneGeometry(600, 800);\n\n        this.mesh.add(new THREE.Mesh(backgroundGeometry, backgroundMaterial));\n\n        this.scoreTextView = new TextView(this._scoreText, {\n            color: 0xfeff80,\n            width: 600,\n            align: 'left'\n        });\n\n        this.scoreTextView.init();\n\n        this.mesh.visible = false;\n        this.mesh.add(this.scoreTextView.mesh);\n\n        super.init();\n    }\n\n    update () {\n        if (this.state.showScores) {\n            if (!this.mesh.visible) {\n                this.mesh.visible = true;\n            }\n\n            let newScores = _converToText(this.match.sortedScores());\n\n            // Scores have changed\n            this.scoreTextView.text = newScores;\n        } else {\n            if (this.mesh.visible) {\n                this.mesh.visible = false;\n            }\n        }\n    }\n}\n\nexport default ScoreView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/ui/ScoreView.js\n **/","import ObjectPool from '../../../engine/ObjectPool';\nimport View from '../../../engine/graphics/View';\nimport BulletView from './BulletView';\n\nclass BulletSystemView extends View {\n    constructor (bulletSystem, options = {}) {\n        super();\n        this.bulletSystem = bulletSystem;\n        this.bulletViewPool = new ObjectPool(() => {\n            return new BulletView(null);\n        }, this.bulletSystem.poolSize, 10, options.poolLimit || 200);\n\n        this.bulletViewPairs = new WeakMap();\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        super.init();\n    }\n\n    update (delta) {\n        // Keep viewPool in sync with bullet pool\n        if (this.bulletSystem.poolSize > this.bulletViewPool.size) {\n            this.bulletViewPool.allocate(this.bulletSystem.poolSize - this.bulletViewPool.size);\n        }\n\n        // Clear previously killed bullets\n        for (let deadBullet of this.bulletSystem.deadBullets) {\n            let bulletView = this.bulletViewPairs.get(deadBullet);\n\n            if (bulletView) {\n                bulletView.update(delta);\n            }\n\n            this.bulletSystem.deadBullets.delete(deadBullet);\n        }\n\n        for (let bullet of this.bulletSystem.activeBullets) {\n            let bulletView = this.bulletViewPairs.get(bullet);\n\n            if (!bulletView) {\n                bulletView = this.bulletViewPool.get();\n\n                bulletView.bullet = bullet;\n                bulletView.init();\n\n                this.mesh.add(bulletView.mesh);\n\n                this.bulletViewPairs.set(bullet, bulletView);\n            }\n\n            bulletView.update(delta);\n        }\n    }\n}\n\nexport default BulletSystemView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/BulletSystemView.js\n **/","// https://github.com/kchapelier/migl-pool/blob/master/src/pool.js\nclass ObjectPool {\n    /**\n     * @constructor\n     * @param {function} factoryFunction Function that creates the object to pool.\n     * @param {number} firstAllocationNumber Initial amount of objects to allocate.\n     * @param {number} allocationNumber Number to increase the pool by when it is full.\n     * @param {number} allocationLimit Size limit of the pool.\n     */\n    constructor (factoryFunction, firstAllocationNumber, allocationNumber, allocationLimit) {\n        this.factoryFunction = factoryFunction;\n        this.totalInstances = 0;\n        this.allocationLimit = allocationLimit;\n        this.allocationNumber = allocationNumber;\n        this.availableInstances = [];\n        this.allocate(firstAllocationNumber);\n    }\n\n    get size () {\n        return this.totalInstances;\n    }\n\n    /**\n     * Instantiate a given number of elements and add them to the collection of available instances\n     * @param {number} number Number of elements to allocate\n     * @private\n     * @returns {Pool} Own instance for fluent interface\n     */\n    allocate (number) {\n        if (this.totalInstances + number < this.allocationLimit) {\n            this.totalInstances += number;\n\n            for (let i = 0; i < number; i++) {\n                this.availableInstances.push(this.factoryFunction());\n            }\n        } else {\n            throw new Error('ObjectPool allocation limit reached');\n        }\n\n        return this;\n    }\n\n    /**\n     * Retrieve an element for the collection of available instances, (re)initialize and return it.\n     * @returns {function} initializeFunction Function used to initialize a new instance.\n     */\n    get () {\n        // check if we still have enough available instances, instantiate new ones\n        if (this.availableInstances.length < 1) {\n            this.allocate(this.allocationNumber);\n        }\n\n        let object = this.availableInstances.pop();\n\n        return object;\n    }\n\n    /**\n     * Add a given element to the pool.\n     * @param {Object} object Element to add to the pool\n     * @returns {Pool} Own instance for fluent interface\n     */\n    free (object) {\n        if (this.availableInstances.indexOf(object) === -1) {\n            this.availableInstances.push(object);\n        }\n\n        return this;\n    }\n\n    /**\n     * Clear all references.\n     * @returns {Pool} Own instance for fluent interface\n     */\n    clear () {\n        while (this.availableInstances.length) {\n            this.availableInstances.pop();\n        }\n\n        this.totalInstances = 0;\n\n        return this;\n    }\n}\n\nexport default ObjectPool;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/ObjectPool.js\n **/","import { TextureManager, TextureFrame, View } from '../../../engine/graphics';\n\nclass BulletView extends View {\n    constructor (bullet) {\n        super();\n\n        this.bullet = bullet;\n    }\n\n    init () {\n        let bullet = this.bullet;\n\n        let textureAtlas = TextureManager.getAtlas('world', false);\n\n        this.geometry = new THREE.PlaneGeometry(2, 8);\n        this.textureFrame = new TextureFrame(textureAtlas, this.geometry, 'bullet1');\n        this.material = new THREE.MeshBasicMaterial({\n            map: this.textureFrame.texture,\n            transparent: true\n        });\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n        this.mesh.position.set(bullet.position.x, bullet.position.y, bullet.position.z);\n        this.mesh.rotation.z = bullet.angle + (90 * (Math.PI / 180));\n\n        super.init();\n    }\n\n    update (interpolationPercentage) {\n        let previous = this.bullet.previousPosition;\n        let current = this.bullet.position;\n\n        this.mesh.position.x = previous.x + (current.x - previous.x) * interpolationPercentage;\n        this.mesh.position.y = previous.y + (current.y - previous.y) * interpolationPercentage;\n        this.mesh.position.z = previous.z + (current.z - previous.z) * interpolationPercentage;\n        this.mesh.rotation.z = this.bullet.angle + (90 * (Math.PI / 180));\n\n        if (this.bullet.dead) {\n            this.mesh.visible = false;\n        } else {\n            this.mesh.visible = true;\n        }\n    }\n}\n\nexport default BulletView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/BulletView.js\n **/","import WaterBlocksView from './world/WaterBlocksView';\nimport StaticBlocksView from './world/StaticBlocksView';\nimport LightView from './lights/LightView';\nimport View from '../../../engine/graphics/View';\n\nclass WorldMapView extends View {\n    constructor (map) {\n        super();\n\n        this.map = map;\n        this.wallsView = new StaticBlocksView(map, 'tiles');\n        this.waterView = new WaterBlocksView(map, 'tiles');\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        for (let light of this.map.lights) {\n            let lightView = new LightView(light);\n\n            lightView.init();\n\n            this.mesh.add(lightView.mesh);\n        }\n\n        this.wallsView.init();\n        this.waterView.init();\n\n        this.mesh.add(this.wallsView.mesh);\n        this.mesh.add(this.waterView.mesh);\n\n        super.init();\n    }\n\n    update () {\n        this.waterView.update();\n    }\n}\n\nexport default WorldMapView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/WorldMapView.js\n **/","import { Animation, TextureManager, View } from '../../../../engine/graphics';\n\nconst WATER_FRAMES = [\n    'animation_water_0001',\n    'animation_water_0002',\n    'animation_water_0003',\n    'animation_water_0004',\n    'animation_water_0005',\n    'animation_water_0006',\n    'animation_water_0007',\n    'animation_water_0008',\n    'animation_water_0009'\n];\n\nlet _waterGeometry = function (block, textureAtlas) {\n    let geometries = [];\n\n    if (block.walls.top) {\n        let top = textureAtlas.getBounds(block.walls.top);\n\n        let topGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\n        topGeometry.faceVertexUvs[0][0] = [top[0], top[1], top[3]];\n        topGeometry.faceVertexUvs[0][1] = [top[1], top[2], top[3]];\n        topGeometry.translate(0, 0, (block.height / 2));\n\n        geometries.push(topGeometry);\n    }\n\n    let blockGeometry = new THREE.Geometry();\n\n    for (let geometry of geometries) {\n        blockGeometry.merge(geometry);\n    };\n\n    return blockGeometry;\n};\n\nlet _createMergedBlockGeometry = function (blocks, textureAtlas) {\n    let mergedGeometry = new THREE.Geometry();\n\n    for (let block of blocks) {\n        let geometry = _waterGeometry(block, textureAtlas);\n\n        geometry.translate(block.position.x, block.position.y, block.position.z);\n\n        mergedGeometry.merge(geometry);\n    }\n\n    mergedGeometry.mergeVertices();\n\n    return mergedGeometry;\n};\n\nclass WaterBlocksView extends View {\n    constructor (map, textureAtlasName, waterFrames = WATER_FRAMES) {\n        super();\n\n        this.map = map;\n        this._textureAtlasName = textureAtlasName;\n        this._waterFrames = waterFrames;\n        this.blocks = map.blocks(['water']);\n\n        this.blockWidth = map.blockWidth;\n        this.blockHeight = map.blockHeight;\n        this.blockDepth = map.blockDepth;\n    }\n\n    init () {\n        // Do not clone, since all water animates in sync\n        this.textureAtlas = TextureManager.getAtlas(this._textureAtlasName, true);\n\n        this.geometry = _createMergedBlockGeometry(this.blocks, this.textureAtlas);\n\n        this.animation = new Animation(this.textureAtlas, this.geometry, 9, true, this._waterFrames, '', true);\n        this.animation.textureFrame.width = 100;\n        this.animation.textureFrame.height = 100;\n\n        this.material = new THREE.MeshLambertMaterial({\n            map: this.textureAtlas.texture,\n            transparent: false\n        });\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        // Set the center of the blocks to bottom left (instead of center)\n        this.mesh.applyMatrix(new THREE.Matrix4().makeTranslation(this.blockWidth / 2, this.blockHeight / 2, this.blockDepth / 2));\n\n        super.init();\n    }\n\n    update (interpolationPercentage) {\n        this.animation.update();\n    }\n}\n\nexport default WaterBlocksView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/world/WaterBlocksView.js\n **/","import { TextureManager, View } from '../../../../engine/graphics';\n\nlet _wallBlockGeometry = function (block, textureAtlas) {\n    let geometries = [];\n\n    if (block.walls.south) {\n        let south = textureAtlas.getBounds(block.walls.south);\n\n        let southGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\n        southGeometry.faceVertexUvs[0][0] = [south[0], south[1], south[3]];\n        southGeometry.faceVertexUvs[0][1] = [south[1], south[2], south[3]];\n        southGeometry.rotateY(Math.PI / 2);\n        southGeometry.translate(block.width / 2, 0, 0);\n\n        geometries.push(southGeometry);\n    }\n\n    if (block.walls.north) {\n        let north = textureAtlas.getBounds(block.walls.north);\n\n        let northGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\n        northGeometry.faceVertexUvs[0][0] = [north[0], north[1], north[3]];\n        northGeometry.faceVertexUvs[0][1] = [north[1], north[2], north[3]];\n        northGeometry.rotateY(-(Math.PI / 2));\n        northGeometry.translate(-(block.width / 2), 0, 0);\n\n        geometries.push(northGeometry);\n    }\n\n    if (block.walls.west) {\n        let west = textureAtlas.getBounds(block.walls.west);\n\n        let westGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\n        westGeometry.faceVertexUvs[0][0] = [west[0], west[1], west[3]];\n        westGeometry.faceVertexUvs[0][1] = [west[1], west[2], west[3]];\n        westGeometry.rotateX((Math.PI / 2));\n        westGeometry.translate(0, -(block.height / 2), 0);\n\n        geometries.push(westGeometry);\n    }\n\n    if (block.walls.east) {\n        let east = textureAtlas.getBounds(block.walls.east);\n\n        let eastGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\n        eastGeometry.faceVertexUvs[0][0] = [east[0], east[1], east[3]];\n        eastGeometry.faceVertexUvs[0][1] = [east[1], east[2], east[3]];\n        eastGeometry.rotateX(-(Math.PI / 2));\n        eastGeometry.rotateY((Math.PI / 2));\n        eastGeometry.translate(0, (block.height / 2), 0);\n\n        geometries.push(eastGeometry);\n    }\n\n    if (block.walls.top) {\n        let top = textureAtlas.getBounds(block.walls.top);\n\n        let topGeometry = new THREE.PlaneGeometry(block.width, block.height);\n\n        topGeometry.faceVertexUvs[0][0] = [top[0], top[1], top[3]];\n        topGeometry.faceVertexUvs[0][1] = [top[1], top[2], top[3]];\n        topGeometry.translate(0, 0, (block.height / 2));\n\n        geometries.push(topGeometry);\n    }\n\n    let blockGeometry = new THREE.Geometry();\n\n    for (let geometry of geometries) {\n        blockGeometry.merge(geometry);\n    };\n\n    return blockGeometry;\n};\n\nlet _createMergedBlockGeometry = function (blocks, textureAtlas) {\n    let mergedGeometry = new THREE.Geometry();\n\n    for (let block of blocks) {\n        let geometry = _wallBlockGeometry(block, textureAtlas);\n\n        geometry.translate(block.position.x, block.position.y, block.position.z);\n\n        mergedGeometry.merge(geometry);\n    }\n\n    mergedGeometry.mergeVertices();\n\n    return mergedGeometry;\n};\n\nclass StaticBlocksView extends View {\n    constructor (map, textureAtlasName) {\n        super();\n\n        this.map = map;\n        this.textureAtlasName = textureAtlasName;\n        this.blocks = map.blocks(['wall']);\n\n        this.blockWidth = map.blockWidth;\n        this.blockHeight = map.blockHeight;\n        this.blockDepth = map.blockDepth;\n    }\n\n    init () {\n        this.textureAtlas = TextureManager.getAtlas(this.textureAtlasName, false);\n        this.geometry = _createMergedBlockGeometry(this.blocks, this.textureAtlas);\n\n        this.material = new THREE.MeshLambertMaterial({\n            map: this.textureAtlas.texture,\n            transparent: true,\n            side: THREE.DoubleSide\n        });\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        // Set the center of the blocks to bottom left (instead of center)\n        this.mesh.applyMatrix(new THREE.Matrix4().makeTranslation(this.blockWidth / 2, this.blockHeight / 2, this.blockDepth / 2));\n\n        super.init();\n    }\n}\n\nexport default StaticBlocksView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/world/StaticBlocksView.js\n **/","import { TextureManager, TextureFrame, View } from '../../../../engine/graphics';\n\nclass LightView extends View {\n    constructor (light) {\n        super();\n        this.light = light;\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n\n        let textureAtlas = TextureManager.getAtlas('world', true);\n        let lightGeometry = new THREE.PlaneGeometry(32, 32);\n\n        this.textureFrame = new TextureFrame(textureAtlas, lightGeometry, 'light1');\n\n        let lightMaterial = new THREE.MeshLambertMaterial({\n            map: this.textureFrame.texture,\n            transparent: true\n        });\n\n        let lightMesh = new THREE.Mesh(lightGeometry, lightMaterial);\n\n        lightMesh.position.set(this.light.sourcePosition.x, this.light.sourcePosition.y, this.light.sourcePosition.z);\n        lightMesh.rotateZ(this.light.angle + (90 * (Math.PI / 180)));\n\n        this.mesh.add(lightMesh);\n\n        let spotLight = new THREE.SpotLight(0xff00000, 1);\n\n        let target = new THREE.Object3D();\n\n        target.position.set(this.light.x, this.light.y, -this.light.z);\n        target.rotateZ(this.light.angle + (90 * (Math.PI / 180)));\n\n        this.mesh.add(target);\n\n        spotLight.target = target;\n        spotLight.angle = 45 * (Math.PI / 180);\n        spotLight.position.set(this.light.sourcePosition.x, this.light.sourcePosition.y, this.light.sourcePosition.z);\n        spotLight.rotateZ(this.light.angle + (90 * (Math.PI / 180)));\n\n        this.mesh.add(spotLight);\n\n        // Set the center of the blocks to bottom left (instead of center)\n        this.mesh.translateX(100 / 2);\n        this.mesh.translateY(100 / 2);\n        this.mesh.translateZ(100);\n\n        super.init();\n    }\n}\n\nexport default LightView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/lights/LightView.js\n **/","import { TextureManager, Animation, View } from '../../../engine/graphics';\n\nconst WALK_FRAMES = [\n    'walk_0001',\n    'walk_0002',\n    'walk_0003',\n    'walk_0004',\n    'walk_0005',\n    'walk_0006',\n    'walk_0007',\n    'walk_0008'\n];\n\nconst RUN_FRAMES = [\n    'run_0001',\n    'run_0002',\n    'run_0003',\n    'run_0004',\n    'run_0005',\n    'run_0006',\n    'run_0007',\n    'run_0008'\n];\n\nconst IDLE_FRAMES = ['idle_0001'];\n\nconst TEAM_COLORS = {\n    american: 0x006D02,\n    german: 0xcccc00\n};\n\nclass SoldierView extends View {\n    constructor (soldier) {\n        super();\n\n        this.soldier = soldier;\n        this._team = soldier ? soldier.team : 'american';\n    }\n\n    set team (team) {\n        if (team !== this._team) {\n            this._team = team;\n            this.material.color.setHex(TEAM_COLORS[team]);\n        }\n    }\n\n    init () {\n        let soldier = this.soldier;\n\n        this.geometry = new THREE.PlaneGeometry(soldier.height * 2, soldier.width * 2);\n\n        this.geometry.rotateZ(Math.PI);\n\n        let textureAtlas = TextureManager.getAtlas('soldier', true);\n\n        this.animations = {\n            walk: new Animation(textureAtlas, this.geometry, 9, true, WALK_FRAMES, 'soldier_weapon_'),\n            run: new Animation(textureAtlas, this.geometry, 5, true, RUN_FRAMES, 'soldier_weapon_'),\n            idle: new Animation(textureAtlas, this.geometry, 8, true, IDLE_FRAMES, 'soldier_weapon_')\n        };\n\n        this.currentAnimation = this.animations.idle;\n\n        this.material = new THREE.MeshLambertMaterial({\n            map: textureAtlas.texture,\n            transparent: true,\n            color: TEAM_COLORS[this._team]\n        });\n\n        this.material.color.offsetHSL(0.1, 0.8, 0.4);\n\n        this.mesh = new THREE.Mesh(this.geometry, this.material);\n\n        this.mesh.position.set(soldier.position.x, soldier.position.y, soldier.position.z);\n        this.mesh.rotation.z = soldier.angle;\n\n        super.init();\n    }\n\n    _updateAnimation () {\n        let animation = this.currentAnimation;\n\n        if (this.soldier.isMoving) {\n            if (this.soldier.isRunning) {\n                animation = this.animations.run;\n            } else {\n                animation = this.animations.walk;\n            }\n        } else {\n            animation = this.animations.idle;\n        }\n\n        // Animation changed\n        if (animation !== this.currentAnimation) {\n            this.currentAnimation = animation;\n            this.currentAnimation.reset();\n        }\n\n        this.currentAnimation.update();\n    }\n\n    update (interpolationPercentage) {\n        let zOffset = this.soldier.depth;\n\n        if (this.soldier.dead) {\n            this.mesh.visible = false;\n            zOffset = 0;\n        } else if (!this.mesh.visible) {\n            this.mesh.visible = true;\n        }\n\n        let previous = this.soldier.previousPosition;\n        let current = this.soldier.position;\n\n        this.mesh.position.x = previous.x + (current.x - previous.x) * interpolationPercentage;\n        this.mesh.position.y = previous.y + (current.y - previous.y) * interpolationPercentage;\n        this.mesh.position.z = previous.z + (current.z - previous.z) * interpolationPercentage;\n\n        this.mesh.position.z += zOffset;\n\n        this.mesh.rotation.z = this.soldier.angle + (90 * (Math.PI / 180));\n\n        this._updateAnimation();\n    }\n}\n\nexport default SoldierView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/SoldierView.js\n **/","import ObjectPool from '../../../engine/ObjectPool';\nimport View from '../../../engine/graphics/View';\nimport SoldierView from './SoldierView';\n\nclass SoldierViewPool extends View {\n    constructor (soldiers, options = {}) {\n        super();\n\n        this.soldiers = soldiers;\n\n        this.viewPool = new ObjectPool(() => {\n            return new SoldierView(null);\n        }, this.soldiers.size, 10, options.poolLimit || 200);\n\n        this.viewPairs = new WeakMap();\n    }\n\n    init () {\n        this.mesh = new THREE.Object3D();\n        this._initialized = true;\n    }\n\n    update (interpolationPercentage) {\n        // Keep viewPool in sync with soldier pool\n        if (this.viewPool.poolSize > this.soldiers.length + 1) {\n            this.viewPool.allocate(this.soldiers.length + 1 - this.viewPool.size);\n        }\n\n        for (let soldier of this.soldiers) {\n            let view = this.viewPairs.get(soldier);\n\n            if (!view && !soldier.dead) {\n                view = this.viewPool.get();\n\n                view.soldier = soldier;\n                view.init();\n\n                // Team is set after, because it affects the material\n                view.team = soldier.team;\n\n                this.mesh.add(view.mesh);\n\n                this.viewPairs.set(soldier, view);\n            } else if (view) {\n                view.update(interpolationPercentage);\n\n                if (soldier.dead && this.viewPairs.has(soldier)) {\n                    this.viewPool.free(view);\n                    this.viewPairs.delete(soldier);\n                }\n            }\n        }\n    }\n}\n\nexport default SoldierViewPool;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/SoldierViewPool.js\n **/","import RenderView from '../../../engine/graphics/RenderView';\n\nclass PlayRenderView extends RenderView {\n    constructor (state) {\n        super();\n\n        this.state = state;\n        this.map = this.state.map;\n\n        this.cameraFollowView = null;\n        this.clearColor = 0x000000;\n    }\n\n    init () {\n        super.init();\n\n        this.camera = new THREE.PerspectiveCamera(75, this.map.width / this.map.height, 100, 1000);\n\n        this.camera.position.x = (this.map.width / 2) * this.map.blockWidth;\n        this.camera.position.y = (this.map.height / 2) * this.map.blockHeight;\n        this.camera.position.z = this.map.blockDepth * 6;\n\n        let ambientLight = new THREE.AmbientLight(0x030303);\n\n        this.scene.add(ambientLight);\n\n        this.cameraFollowLight = new THREE.SpotLight(0xfffffff, 2, 800);\n        this.cameraFollowLight.angle = 135 * (Math.PI / 180);\n        this.cameraFollowLight.exponent = 10;\n        this.cameraFollowLight.target = this.cameraFollowView.mesh;\n\n        this.scene.add(this.cameraFollowLight);\n\n        this._initialized = true;\n    }\n\n    update (delta) {\n        if (this.state.paused) {\n            return;\n        }\n\n        super.update(delta);\n\n        if (this.cameraFollowView) {\n            this.camera.position.setX(this.cameraFollowView.position.x);\n            this.camera.position.setY(this.cameraFollowView.position.y);\n\n            this.cameraFollowLight.position.setX(this.cameraFollowView.position.x);\n            this.cameraFollowLight.position.setY(this.cameraFollowView.position.y);\n            this.cameraFollowLight.position.setZ(this.cameraFollowView.position.z + 400);\n        }\n    }\n}\n\nmodule.exports = PlayRenderView;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/views/PlayRenderView.js\n **/","/**\n * Get a given statistic of a all soldiers per team.\n *\n * @param {string} stat Stat to get.\n *\n * @return {Map} Stats per team\n */\nfunction soldierStatsByTeam (stat) {\n    let resultsByTeam = new Map();\n\n    for (let [teamName, soldiers] of this.teams.entries()) {\n        for (let soldier of soldiers) {\n            let teamResult = resultsByTeam.get(teamName);\n\n            if (teamResult) {\n                resultsByTeam.set(teamName, teamResult + soldier[stat]);\n            } else {\n                resultsByTeam.set(teamName, soldier[stat]);\n            }\n        }\n    }\n};\n\nclass Match {\n    constructor (teams) {\n        this.matchTime = 0;\n        this.matchDuration = 300000;\n        this.soldiers = new Set();\n        this.teamNames = [];\n        this.teams = new Map();\n\n        for (let teamName of teams) {\n            this.teamNames.push(teamName);\n            this.teams.set(teamName, new Set());\n        }\n    }\n\n    teamWithLeastPlayers () {\n        let leastTeamName = null;\n        let minCount = Number.MAX_VALUE;\n\n        for (let teamName of this.teamNames) {\n            let count = this.teams.get(teamName).size;\n\n            if (count < minCount) {\n                leastTeamName = teamName;\n                minCount = count;\n            }\n        }\n\n        return leastTeamName;\n    }\n\n    addSoldier (soldier, teamName) {\n        if (!teamName) {\n            teamName = this.teamWithLeastPlayers();\n        }\n\n        // FIXME get this out of here?\n        soldier.team = teamName;\n\n        let team = this.teams.get(teamName);\n\n        if (team) {\n            team.add(soldier);\n            this.soldiers.add(soldier);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    sortedScores () {\n        let teams = new Map();\n\n        for (let soldier of new Set([...this.soldiers])) {\n            let team = teams.get(soldier.team);\n\n            if (team) {\n                team.kills += soldier.totalKills;\n                team.deaths += soldier.totalDeaths;\n                team.soldiers.push(soldier);\n            } else {\n                teams.set(soldier.team, {\n                    kills: soldier.totalKills,\n                    deaths: soldier.totalDeaths,\n                    soldiers: [soldier]\n                });\n            }\n        }\n\n        for (let team of teams.values()) {\n            team.soldiers.sort((a, b) => b.kills - a.kills);\n        }\n\n        return new Map([...teams.entries()].sort((teamA, teamB) => {\n            return teamB[1].kills - teamA[1].kills;\n        }));\n    }\n\n    removeSoldier (soldier) {\n        for (let team of this.teams) {\n            if (team.has(solider)) {\n                team.delete(soldier);\n\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    killsByTeam () {\n        return soldierStatsByTeam('kills');\n    }\n\n    deathsByTeam () {\n        return soldierStatsByTeam('deaths');\n    }\n\n    start () {\n\n    }\n\n    end () {\n\n    }\n\n    update (delta) {\n        this.matchTime += delta;\n\n        if (this.matchTime >= this.matchDuration) {\n            this.end();\n        }\n    }\n}\n\nexport default Match;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/Match.js\n **/","import Keyboard from '../../../engine/input/Keyboard';\nimport Gamepad from '../../../engine/input/Gamepad';\nimport HumanInput from '../../../engine/input/HumanInput';\n\nclass PlayerInput extends HumanInput {\n    constructor (player) {\n        super();\n\n        this.player = player;\n    }\n\n    update (delta) {\n        if (Keyboard.isDown(Keyboard.UP) || Gamepad.isStickDown(this.gamepadIndex, 'left', 'up')) {\n            this.player.moveUp();\n        } else if (Keyboard.isDown(Keyboard.DOWN) || Gamepad.isStickDown(this.gamepadIndex, 'left', 'down')) {\n            this.player.moveDown();\n        } else {\n            this.player.stopMoving();\n        }\n\n        if (Keyboard.isDown(Keyboard.RIGHT) || Gamepad.isStickDown(this.gamepadIndex, 'right', 'right')) {\n            this.player.turnRight();\n        } else if (Keyboard.isDown(Keyboard.LEFT) || Gamepad.isStickDown(this.gamepadIndex, 'right', 'left')) {\n            this.player.turnLeft();\n        } else {\n            this.player.stopTurning();\n        }\n\n        if (!this.player.isRunning && (Keyboard.isDown(Keyboard.CTRL) ||\n                Gamepad.isDown(this.gamepadIndex, 'rightTrigger'))) {\n            this.player.fireBullet();\n        }\n\n        if (Keyboard.isDown(Keyboard.SHIFT) || Gamepad.isDown(this.gamepadIndex, 'actionSouth')) {\n            this.player.isRunning = true;\n        } else {\n            this.player.isRunning = false;\n        }\n\n        if (this.keyboardDownOnce(Keyboard.R) || this.gamepadButtonDownOnce('actionWest')) {\n            this.player.reload();\n        }\n\n        if (this.keyboardDownOnce(Keyboard.X) || this.gamepadButtonDownOnce('actionNorth')) {\n            this.player.scrollWeapons('down');\n        }\n\n        if (this.keyboardDownOnce(Keyboard.Z) || this.gamepadButtonDownOnce('actionEast')) {\n            this.player.scrollWeapons('up');\n        }\n    }\n}\n\nexport default PlayerInput;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/input/PlayerInput.js\n **/","import { Keyboard, HumanInput } from '../../../engine/input';\n\nclass UiInput extends HumanInput {\n    constructor (state) {\n        super();\n\n        this.state = state;\n    }\n\n    update (delta) {\n        if (Keyboard.isDown(Keyboard.E) || this.gamepadButtonDownOnce('leftBumper')) {\n            this.state.showScores = true;\n        } else {\n            this.state.showScores = false;\n        }\n\n        if (this.keyboardDownOnce(Keyboard.ESC)) {\n            if (this.state.paused) {\n                this.state.resume();\n            } else {\n                this.state.pause();\n            }\n        }\n    }\n}\n\nexport default UiInput;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/input/UiInput.js\n **/","import Gamepad from './Gamepad';\nimport HumanInput from './HumanInput';\nimport Keyboard from './Keyboard';\n\nexport {\n    Gamepad,\n    HumanInput,\n    Keyboard\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/input/index.js\n **/","class ComputerInput {\n    constructor (soldier) {\n        this.soldier = soldier;\n    }\n\n    update () {\n        if (Math.random() < 0.05) {\n            this.soldier.fireBullet();\n        }\n\n        if (Math.random() > 0.8) {\n            this.soldier.moveUp();\n        }\n\n        if (Math.random() > 0.7) {\n            if (Math.random() > 0.5) {\n                this.soldier.turnRight();\n            } else {\n                this.soldier.turnLeft();\n            }\n        } else {\n            this.soldier.stopTurning();\n        }\n\n        if (this.soldier.currentWeapon) {\n            if (this.soldier.currentWeapon.magazine === 0) {\n                this.soldier.reload();\n            }\n        }\n    }\n}\n\nexport default ComputerInput;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/input/ComputerInput.js\n **/","import Soldier from './Soldier';\n\nclass Player extends Soldier {\n    constructor (x, y, z, width, height, depth, team) {\n        super(x, y, z, width, height, depth, team);\n\n        // FIXME make configurable\n        this.name = 'player';\n\n        this.options.isPlayer = true;\n        this.options.audio = true;\n    }\n\n    update (delta) {\n        super.update(delta);\n    }\n}\n\nexport default Player;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/entities/Player.js\n **/","import Character from './Character';\nimport WeaponFactory from '../weapons/WeaponFactory';\n\nclass Soldier extends Character {\n    constructor (x, y, z, width, height, depth, team) {\n        super(x, y, z, width, height, depth);\n\n        // FIXME make configurable\n        this.name = 'cpu';\n\n        this.weapons = [];\n        this.currentWeaponIndex = 0;\n        this.currentWeapon = null;\n\n        this.team = team;\n\n        // TODO remove this hardcoded stuff\n        this.addWeapon(WeaponFactory.mp44());\n        this.addWeapon(WeaponFactory.thompson());\n        this.currentWeapon = this.weapons[0];\n\n        this.maxHealth = 100;\n        this.walkingSpeed = 0.1;\n        this.runningSpeed = 0.2;\n\n        // Contains the character killed, and the count\n        this.kills = new Map();\n\n        // Contains the characters killed by, and the count\n        this.deaths = new Map();\n\n        this.reset();\n\n        this.options.isSoldier = true;\n    }\n\n    addWeapon (weapon) {\n        // TODO increase ammo if weapon is the same\n        this.weapons.push(weapon);\n    }\n\n    scrollWeapons (direction) {\n        if (direction === 'up') {\n            if (this.currentWeaponIndex === this.weapons.length - 1) {\n                this.currentWeaponIndex = 0;\n            } else {\n                this.currentWeaponIndex += 1;\n            }\n        } else if (direction === 'down') {\n            if (this.currentWeaponIndex === 0) {\n                this.currentWeaponIndex = this.weapons.length - 1;\n            } else {\n                this.currentWeaponIndex -= 1;\n            }\n        } else {\n            throw new Error('direction is not \"up\" or \"down\"');\n        }\n\n        this.currentWeapon = this.weapons[this.currentWeaponIndex];\n    }\n\n    reload () {\n        if (!this.dead && this.currentWeapon) {\n            this.currentWeapon.reload();\n        }\n    }\n\n    hitByBullet (bullet) {\n        super.hitByBullet(bullet);\n\n        // TODO prevent team killing / make configurable\n        if (this.health === 0) {\n            let deathCount = this.deaths.get(bullet.firedBy);\n\n            if (deathCount) {\n                deathCount += 1;\n            } else {\n                deathCount = 1;\n            }\n\n            this.deaths.set(bullet.firedBy, deathCount);\n\n            let killedByCount = bullet.firedBy.kills.get(this);\n\n            if (killedByCount) {\n                killedByCount += 1;\n            } else {\n                killedByCount = 1;\n            }\n\n            bullet.firedBy.kills.set(this, killedByCount);\n        }\n    }\n\n    kill () {\n        super.kill();\n        let suicides = this.deaths.get(this);\n\n        if (suicides) {\n            this.deaths.set(this, suicides + 1);\n        } else {\n            this.deaths.set(this, 1);\n        }\n    }\n\n    get totalKills () {\n        let total = 0;\n\n        for (let kill of this.kills.values()) {\n            total += kill;\n        }\n\n        return total;\n    }\n\n    get totalDeaths () {\n        let total = 0;\n\n        for (let death of this.deaths.values()) {\n            total += death;\n        }\n\n        return total;\n    }\n\n    fireBullet () {\n        if (!this.dead && this.currentWeapon) {\n            let fired = this.currentWeapon.fire();\n\n            if (fired) {\n                this.actions.firedBullet = true;\n            }\n        }\n    }\n\n    reset () {\n        super.reset();\n\n        this.actions.firedBullet = false;\n    }\n\n    update (delta) {\n        super.update(delta);\n\n        if (this.actions.firedBullet) {\n            this.actions.firedBullet = false;\n        }\n\n        if (this.currentWeapon) {\n            this.currentWeapon.update(delta);\n        }\n    }\n}\n\nexport default Soldier;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/entities/Soldier.js\n **/","import Entity from './Entity';\n\nconst GRAVITY = -0.2;\n\n/**\n * Entitiess that walk, run, jump, die and get hit by bullets.\n *\n * @class\n */\nclass Character extends Entity {\n    constructor (x, y, z, width, height, depth, team) {\n        super(x, y, z, width, height, depth);\n\n        this.maxHealth = 100;\n        this.walkingSpeed = 0.1;\n        this.runningSpeed = 0.2;\n\n        this.reset();\n\n        this.options.physics = true;\n        this.options.bullets = true;\n        this.options.isCharacter = true;\n    }\n\n    set isRunning (running) {\n        if (running) {\n            this._isRunning = true;\n            this.speed = this.runningSpeed;\n        } else {\n            this._isRunning = false;\n            this.speed = this.walkingSpeed;\n        }\n    }\n\n    get isRunning () {\n        return this._isRunning;\n    }\n\n    fall () {\n        this.velocity.z = GRAVITY;\n    }\n\n    hitByBullet (bullet) {\n        this.health -= bullet.damage;\n\n        if (this.health === 0) {\n            this.kill();\n        }\n    }\n\n    stopFalling () {\n        this.velocity.z = 0;\n    }\n\n    reset () {\n        super.reset();\n\n        this._isRunning = false;\n        this.speed = this.walkingSpeed;\n        this.health = 100;\n\n        this.health = this.maxHealth;\n    }\n\n    update (delta) {\n        super.update(delta);\n\n        if (this.position.z <= 0) {\n            this.kill();\n        }\n    }\n}\n\nexport default Character;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/entities/Character.js\n **/","import Polygon from '../../engine/collision/Polygon';\nimport Vector from '../../engine/collision/Vector';\n\nconst DEFAULT_SPEED = 0.2;\nconst DEFAULT_ROTATION_SPEED = 0.3;\n\nclass Entity {\n    constructor (x, y, z = 0, width = 0, height = 0, depth = 0) {\n        this.position = {\n            x: x,\n            y: y,\n            z: z\n        };\n\n        this.previousPosition = {\n            x: x,\n            y: y,\n            z: z\n        };\n\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n\n        this.speed = DEFAULT_SPEED;\n        this.rotationSpeed = DEFAULT_ROTATION_SPEED;\n\n        this.reset();\n\n        this._body = new Polygon(new Vector(this.x, this.y), [\n            new Vector(-this.halfWidth, -this.halfHeight),\n            new Vector(-this.halfWidth, this.halfHeight),\n            new Vector(this.halfWidth, this.halfHeight),\n            new Vector(this.halfWidth, 0)\n        ]);\n\n        this.options = {\n            physics: false,\n            bullets: false,\n            audio: false,\n            isBullet: false,\n            isPlayer: false,\n            isCharacter: false\n        };\n    }\n\n    get rotatedBody () {\n        let body = this._body;\n\n        body.setAngle(this.angle);\n\n        return body;\n    }\n\n    onWallCollision () {\n        return null;\n    }\n\n    get body () {\n        this._body.position.x = this.position.x;\n        this._body.position.y = this.position.y;\n\n        return this._body;\n    }\n\n    get x () {\n        return this.position.x;\n    }\n\n    get y () {\n        return this.position.y;\n    }\n\n    get z () {\n        return this.position.z;\n    }\n\n    get halfWidth () {\n        return this.width / 2;\n    }\n\n    get halfHeight () {\n        return this.height / 2;\n    }\n\n    kill () {\n        this.dead = true;\n    }\n\n    get point () {\n        return new Vector(this.x, this.y);\n    }\n\n    reset () {\n        this.velocity = {\n            x: 0,\n            y: 0,\n            z: 0\n        };\n\n        this.dead = false;\n        this.reverse = false;\n        this.angle = Math.PI * 2;\n        this.angularVelocity = 0;\n\n        // If entity is moving backwards\n        this.reverse = false;\n\n        this.collidable = true;\n        this.shouldUpdate = true;\n\n        this.isMoving = false;\n\n        // Actions can trigger things that should happen in the next update.\n        this.actions = {};\n    }\n\n    respawn (position) {\n        this.reset();\n\n        this.position = {\n            x: position.x,\n            y: position.y,\n            z: position.z\n        };\n\n        this.previousPosition = {\n            x: position.x,\n            y: position.y,\n            z: position.z\n        };\n    }\n\n    moveUp () {\n        this.reverse = false;\n        this.isMoving = true;\n        this.velocity.x = -this.speed * Math.cos(this.angle);\n        this.velocity.y = -this.speed * Math.sin(this.angle);\n    }\n\n    moveDown () {\n        this.reverse = true;\n        this.isMoving = true;\n        this.velocity.x = this.speed * Math.cos(this.angle);\n        this.velocity.y = this.speed * Math.sin(this.angle);\n    }\n\n    turnLeft () {\n        this.angularVelocity = this.rotationSpeed * (Math.PI / 180);\n    }\n\n    turnRight () {\n        this.angularVelocity = -this.rotationSpeed * (Math.PI / 180);\n    }\n\n    stopMoving () {\n        this.isMoving = false;\n        this.velocity.x = 0;\n        this.velocity.y = 0;\n    }\n\n    stopTurning () {\n        this.angularVelocity = 0;\n    }\n\n    update (delta) {\n        if (!this.dead) {\n            this.angle += this.angularVelocity * delta;\n\n            if (this.angle < 0) {\n                this.angle = (Math.PI * 2) - this.angle;\n            }\n\n            this.previousPosition.x = this.position.x;\n            this.previousPosition.y = this.position.y;\n            this.previousPosition.z = this.position.z;\n\n            this.position.x += this.velocity.x * delta;\n            this.position.y += this.velocity.y * delta;\n            this.position.z += this.velocity.z * delta;\n        }\n    }\n};\n\nexport default Entity;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/entities/Entity.js\n **/","import Vector from './Vector';\n\nlet _boxToPolygon = function (position, width, height) {\n    return new Polygon(new Vector(position.x, position.y), [\n        new Vector(), new Vector(width, 0),\n        new Vector(width, height), new Vector(0, height)\n    ]);\n};\n\n// ## Polygon\n//\n// Represents a *convex* polygon with any number of vertices (specified in counter-clockwise order)\n//\n// Note: Do _not_ manually change the `vertices`, `angle`, or `offset` properties. Use the\n// provided setters. Otherwise the calculated properties will not be updated correctly.\n//\n// `pos` can be changed directly.\n\n// Create a new polygon, passing in a position vector, and an array of vertices (represented\n// by vectors relative to the position vector). If no position is passed in, the position\n// of the polygon will be `(0,0)`.\n/**\n * @param {Vector=} pos A vector representing the origin of the polygon. (all other\n *   vertices are relative to this one)\n * @param {Array.<Vector>=} vertices An array of vectors representing the vertices in the polygon,\n *   in counter-clockwise order.\n * @constructor\n */\nclass Polygon {\n    constructor (position = new Vector(), vertices = []) {\n        this.position = position;\n        this.angle = 0;\n        this.offset = new Vector();\n\n        this.setVertices(vertices);\n    }\n\n    /**\n     * Set the vertices of the polygon.\n     * Note: The vertices are counter-clockwise *with respect to the coordinate system*.\n     * If you directly draw the vertices on a screen that has the origin at the top-left corner\n     * it will _appear_ visually that the vertices are being specified clockwise. This is just\n     * because of the inversion of the Y-axis when being displayed.\n     *\n     * @param {Array.<Vector>=} vertices An array of vectors representing the vertices in the polygon,\n     *   in counter-clockwise order.\n     * @return {Polygon} This for chaining.\n     */\n    setVertices (vertices) {\n        // Only re-allocate if this is a new polygon or the number of vertices has changed.\n        let lengthChanged = !this.vertices || this.vertices.length !== vertices.length;\n\n        if (lengthChanged) {\n            let computedVertices = this.computedVertices = [];\n            let edges = this.edges = [];\n            let normals = this.normals = [];\n\n            // Allocate the vector arrays for the calculated properties\n            for (let i = 0; i < vertices.length; i++) {\n                computedVertices.push(new Vector());\n                edges.push(new Vector());\n                normals.push(new Vector());\n            }\n        }\n        this.vertices = vertices;\n        this._compute();\n\n        return this;\n    }\n\n    /**\n     * Set the current rotation angle of the polygon.\n     *\n     * @param {number} angle The current rotation angle (in radians).\n     * @return {Polygon} This for chaining.\n     */\n    setAngle (angle) {\n        this.angle = angle;\n        this._compute();\n\n        return this;\n    }\n\n    /**\n     * Set the current offset to apply to the `vertices` before applying the `angle` rotation.\n     *\n     * @param {Vector} offset The new offset vector.\n     * @return {Polygon} This for chaining.\n     */\n    setOffset (offset) {\n        this.offset = offset;\n        this._compute();\n\n        return this;\n    }\n\n    /**\n     * Rotates this polygon counter-clockwise around the origin of *its local coordinate system* (i.e. `pos`).\n     * Note: This changes the **original** vertices (so any `angle` will be applied on top of this rotation).\n     * @param {number} angle The angle to rotate (in radians)\n     * @return {Polygon} This for chaining.\n     */\n    rotate (angle) {\n        let vertices = this.vertices;\n        let len = vertices.length;\n\n        for (let i = 0; i < len; i++) {\n            vertices[i].rotate(angle);\n        }\n\n        this._compute();\n\n        return this;\n    }\n\n    /**\n     * Translates the vertices of this polygon by a specified amount relative to the origin of *its own coordinate\n     * system* (i.e. `pos`).\n     *\n     * This is most useful to change the \"center vertex\" of a polygon. If you just want to move the whole polygon, change\n     * the coordinates of `pos`.\n     *\n     * Note: This changes the **original** vertices (so any `offset` will be applied on top of this translation)\n     *\n     * @param {number} x The horizontal amount to translate.\n     * @param {number} y The vertical amount to translate.\n     * @return {Polygon} This for chaining.\n     */\n    translate (x, y) {\n        let vertices = this.vertices;\n        let len = vertices.length;\n\n        for (let i = 0; i < len; i++) {\n            vertices[i].x += x;\n            vertices[i].y += y;\n        }\n\n        this._compute();\n\n        return this;\n    }\n\n    /**\n     * Computes the calculated collision polygon. Applies the `angle` and `offset` to the original vertices then recalculates the\n     * edges and normals of the collision polygon.\n     * @return {Polygon} This for chaining.\n     */\n    _compute () {\n        // Calculated vertices - this is what is used for underlying collisions and takes into account\n        // the angle/offset set on the polygon.\n        let computedVertices = this.computedVertices;\n\n        // The edges here are the direction of the `n`th edge of the polygon, relative to\n        // the `n`th vertex. If you want to draw a given edge from the edge value, you must\n        // first translate to the position of the starting vertex.\n        let edges = this.edges;\n\n        // The normals here are the direction of the normal for the `n`th edge of the polygon, relative\n        // to the position of the `n`th vertex. If you want to draw an edge normal, you must first\n        // translate to the position of the starting vertex.\n        let normals = this.normals;\n\n        // Copy the original vertices array and apply the offset/angle\n        let vertices = this.vertices;\n        let offset = this.offset;\n        let angle = this.angle;\n        let len = vertices.length;\n\n        for (let i = 0; i < len; i++) {\n            let computedVertex = computedVertices[i].copy(vertices[i]);\n\n            computedVertex.x += offset.x;\n            computedVertex.y += offset.y;\n\n            if (angle !== 0) {\n                computedVertex.rotate(angle);\n            }\n        }\n\n        // Calculate the edges/normals\n        for (let i = 0; i < len; i++) {\n            let p1 = computedVertices[i];\n            let p2 = i < len - 1 ? computedVertices[i + 1] : computedVertices[0];\n            let e = edges[i].copy(p2).sub(p1);\n\n            normals[i].copy(e).perp().normalize();\n        }\n\n        return this;\n    }\n\n    /**\n     * Compute the axis-aligned bounding box. Any current state\n     * (translations/rotations) will be applied before constructing the AABB.\n     *\n     *  Note: Returns a _new_ `Polygon` each time you call this.\n     *\n     * @return {Polygon} The AABB\n     */\n    getAABB () {\n        let vertices = this.computedVertices;\n        let len = vertices.length;\n        let xMin = vertices[0].x;\n        let yMin = vertices[0].y;\n        let xMax = vertices[0].x;\n        let yMax = vertices[0].y;\n\n        for (let i = 1; i < len; i++) {\n            let vertex = vertices[i];\n\n            if (vertex.x < xMin) {\n                xMin = vertex.x;\n            } else if (vertex.x > xMax) {\n                xMax = vertex.x;\n            }\n\n            if (vertex.y < yMin) {\n                yMin = vertex.y;\n            } else if (vertex.y > yMax) {\n                yMax = vertex.y;\n            }\n        }\n\n        return _boxToPolygon(this.position.clone().add(new Vector(xMin, yMin)), xMax - xMin, yMax - yMin);\n    }\n}\n\nexport default Polygon;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/collision/Polygon.js\n **/","class Vector {\n    constructor (x = 0, y = 0) {\n        this.x = x;\n        this.y = y;\n    }\n\n    /**\n     * Copy the values of another Vector into this one.\n     *\n     * @param {Vector} other The other Vector.\n     * @return {Vector} This for chaining.\n     */\n    copy (other) {\n        this.x = other.x;\n        this.y = other.y;\n\n        return this;\n    }\n\n    /**\n     * Create a new vector with the same coordinates as this on.\n     *\n     * @return {Vector} The new cloned vector\n     */\n    clone () {\n        return new this.constructor(this.x, this.y);\n    }\n\n    /**\n     * Change this vector to be perpendicular to what it was before. (Effectively\n     * roatates it 90 degrees in a clockwise direction)\n     * @return {Vector} This for chaining.\n     */\n    perp () {\n        let x = this.x;\n\n        this.x = this.y;\n        this.y = -x;\n\n        return this;\n    };\n\n    /**\n     * Rotate this vector (counter-clockwise) by the specified angle (in radians).\n     * @param {number} angle The angle to rotate (in radians)\n     * @return {Vector} This for chaining.\n     */\n    rotate (angle) {\n        let x = this.x;\n        let y = this.y;\n\n        this.x = x * Math.cos(angle) - y * Math.sin(angle);\n        this.x = x * Math.sin(angle) + y * Math.cos(angle);\n\n        return this;\n    };\n\n    /**\n     * Reverse this vector.\n     *\n     * @return {Vector} This for chaining.\n     */\n    negate () {\n        this.x = -this.x;\n        this.y = -this.y;\n\n        return this;\n    };\n\n    /**\n     * Normalize this vector.  (make it have length of `1`)\n     *\n     * @return {Vector} This for chaining.\n     */\n    normalize () {\n        let d = this.len();\n\n        if (d > 0) {\n            this.x = this.x / d;\n            this.y = this.y / d;\n        }\n\n        return this;\n    }\n\n    /**\n     * Add another vector to this one.\n     * @param {Vector} other The other Vector.\n     * @return {Vector} This for chaining.\n     */\n    add (other) {\n        this.x += other.x;\n        this.y += other.y;\n\n        return this;\n    };\n\n    /**\n     * Subtract another vector from this one.\n     * @param {Vector} other The other Vector.\n     * @return {Vector} This for chaiing.\n     */\n    sub (other) {\n        this.x -= other.x;\n        this.y -= other.y;\n\n        return this;\n    };\n\n    /**\n     * Scale this vector. An independant scaling factor can be provided\n     * for each axis, or a single scaling factor that will scale both `x` and `y`.\n     *\n     * @param {number} x The scaling factor in the x direction.\n     * @param {?number=} y The scaling factor in the y direction.  If this\n     *   is not specified, the x scaling factor will be used.\n     * @return {Vector} This for chaining.\n     */\n    scale (x, y) {\n        this.x *= x;\n        this.y *= y || x;\n\n        return this;\n    };\n\n    /**\n     * Project this vector on to another vector.\n     *\n     * @param {Vector} other The vector to project onto.\n     * @return {Vector} This for chaining.\n     */\n    project (other) {\n        let amt = this.dot(other) / other.len2();\n\n        this.x = amt * other.x;\n        this.y = amt * other.y;\n\n        return this;\n    };\n\n    /**\n     * Project this vector onto a vector of unit length. This is slightly more efficient\n     * than `project` when dealing with unit vectors.\n     *\n     * @param {Vector} other The unit vector to project onto.\n     * @return {Vector} This for chaining.\n     */\n    projectN (other) {\n        let amt = this.dot(other);\n\n        this.x = amt * other.x;\n        this.y = amt * other.y;\n\n        return this;\n    };\n\n    /**\n     * Reflect this vector on an arbitrary axis.\n     *\n     * @param {Vector} axis The vector representing the axis.\n     * @return {Vector} This for chaining.\n     */\n    reflect (axis) {\n        let x = this.x;\n        let y = this.y;\n\n        this.project(axis).scale(2);\n        this.x -= x;\n        this.y -= y;\n\n        return this;\n    };\n\n    /**\n     * Reflect this vector on an arbitrary axis (represented by a unit vector). This is\n     * slightly more efficient than `reflect` when dealing with an axis that is a unit vector.\n     *\n     * @param {Vector} axis The unit vector representing the axis.\n     * @return {Vector} This for chaining.\n     */\n    reflectN (axis) {\n        let x = this.x;\n        let y = this.y;\n\n        this.projectN(axis).scale(2);\n        this.x -= x;\n        this.y -= y;\n\n        return this;\n    };\n\n    /**\n     * Get the dot product of this vector and another.\n     *\n     * @param {Vector}  other The vector to dot this one against.\n     * @return {number} The dot product.\n     */\n    dot (other) {\n        return this.x * other.x + this.y * other.y;\n    };\n\n    /**\n     * Get the squared length of this vector.\n     * @return {number} The length^2 of this vector.\n     */\n    len2 () {\n        return this.dot(this);\n    };\n\n    /**\n     * Get the length of this vector.\n     * @return {number} The length of this vector.\n     */\n    len () {\n        return Math.sqrt(this.len2());\n    };\n}\n\nexport default Vector;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/collision/Vector.js\n **/","import Gun from './Gun';\n\nexport default {\n    mp44: function () {\n        let mp44 = new Gun('mp44', {\n            maxAmmo: 120,\n            maxMagazine: 30\n        });\n\n        return mp44;\n    },\n    thompson: function () {\n        let thompson = new Gun('thompson', {\n            maxAmmo: 90,\n            maxMagazine: 25,\n            fireRate: 90\n        });\n\n        return thompson;\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/weapons/WeaponFactory.js\n **/","export default class Gun {\n    constructor (name, options = {}) {\n        this.name = name;\n        this.maxMagazine = options.maxMagazine || 10;\n        this.magazine = options.magazine || this.maxMagazine;\n\n        this.maxAmmo = options.maxAmmo || 10;\n        this.ammo = (options.ammo || this.maxAmmo) - this.magazine;\n\n        this.fireRate = options.fireRate || 150;\n        this.damage = options.damage || 10;\n        this.reloadTime = options.reloadTime || 500;\n\n        this._reloadingTime = 0;\n        this._firedTime = 0;\n        this._canFire = true;\n\n        this.isReloading = false;\n        this.fired = false;\n    }\n\n    fire () {\n        if (!this.isReloading && this._canFire && this.magazine > 0) {\n            this.fired = true;\n            this._canFire = false;\n            this.magazine -= 1;\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    reload () {\n        if (!this.isReloading) {\n            this.isReloading = true;\n\n            let refill = this.maxMagazine - this.magazine;\n\n            let newAmmo = this.ammo - refill;\n\n            if (newAmmo < 0) {\n                refill = this.ammo;\n\n                this.ammo = 0;\n            } else {\n                this.ammo -= refill;\n            }\n\n            this.magazine += refill;\n        }\n    }\n\n    get magazines () {\n        return Math.floor(this.ammo / this.maxMagazine);\n    }\n\n    update (delta) {\n        if (this._fired) {\n            this._fired = false;\n        }\n\n        if (this.isReloading) {\n            this._reloadingTime += delta;\n\n            if (this._reloadingTime > this.reloadTime) {\n                this._reloadingTime = 0;\n                this.isReloading = false;\n            }\n        } else if (!this._canFire) {\n            this._firedTime += delta;\n\n            if (this._firedTime > this.fireRate) {\n                this._firedTime = 0;\n                this._canFire = true;\n            }\n        }\n    }\n}\n\nexport default Gun;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/weapons/Gun.js\n **/","import StateAudio from '../StateAudio';\n\nclass PlayAudio extends StateAudio {\n    constructor (state, effectsSpriteName, backgroundSpriteName) {\n        super(state, effectsSpriteName, backgroundSpriteName);\n        this.entities = state.soldiers;\n        this.player = state.player;\n    }\n\n    update (delta) {\n        for (let entity of this.entities) {\n            if (entity === this.player && entity.actions.firedBullet) {\n                this.effects.play(entity.currentWeapon.name);\n            }\n        }\n    }\n}\n\nexport default PlayAudio;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/play/PlayAudio.js\n **/","import Block from './Block';\nimport Light from './Light';\nimport WorldMap from './WorldMap';\n\nlet _parseBlock = function (rawBlock, blockWidth, blockHeight, blockDepth) {\n    let position = {\n        x: rawBlock.position.x * blockWidth,\n        y: rawBlock.position.y * blockHeight,\n        z: rawBlock.position.z * blockDepth\n    };\n\n    let blockOptions = {\n        walls: rawBlock.walls,\n        type: rawBlock.type,\n        collidable: rawBlock.collidable\n    };\n\n    let block = new Block(position, blockWidth, blockHeight, blockDepth, blockOptions);\n\n    block.collidable = rawBlock.collidable || false;\n\n    return block;\n};\n\nlet _createEmptyLayers = function (mapWidth, mapHeight, mapDepth) {\n    let layers = [];\n\n    for (let z = 0; z < mapDepth; z++) {\n        let layer = [];\n\n        for (let y = 0; y < mapHeight; y++) {\n            let row = [];\n\n            for (let x = 0; x < mapDepth; x++) {\n                row.push(null);\n            }\n\n            layer.push(row);\n        }\n\n        layers.push(layer);\n    }\n\n    return layers;\n};\n\nlet parseLight = function (rawLight, blockWidth, blockHeight, blockDepth) {\n    let rawPosition = rawLight.position;\n    let sourcePosition = {\n        x: rawPosition.x * blockWidth,\n        y: rawPosition.y * blockHeight,\n        z: rawPosition.z * blockDepth\n    };\n\n    let position = {\n        x: rawPosition.x * blockWidth,\n        y: rawPosition.y * blockHeight,\n        z: rawPosition.z * blockDepth\n    };\n\n    let angle = Math.PI * 2;\n\n    if (rawLight.align === 'west') {\n        sourcePosition.x -= blockWidth / 2;\n    } else if (rawLight.align === 'east') {\n        sourcePosition.x += blockWidth / 2;\n        angle = 180 * (Math.PI / 180);\n    } else if (rawLight.align === 'north') {\n        sourcePosition.y += blockHeight / 2;\n        angle = 90 * (Math.PI / 180);\n    } else if (rawLight.align === 'south') {\n        sourcePosition.y -= blockHeight / 2;\n        angle = 270 * (Math.PI / 180);\n    }\n\n    let light = new Light(position.x, position.y, position.z, rawLight.color);\n\n    light.angle = angle;\n    light.sourcePosition = sourcePosition;\n\n    return light;\n};\n\nlet _parseRawMap = function (rawMap) {\n    // TODO validate map\n    let rawBlocks = rawMap.blocks;\n\n    let blockWidth = rawMap.blockWidth;\n    let blockHeight = rawMap.blockHeight;\n    let blockDepth = rawMap.blockDepth;\n\n    let mapWidth = rawMap.width;\n    let mapHeight = rawMap.height;\n    let mapDepth = rawMap.depth;\n\n    let layers = _createEmptyLayers(mapWidth, mapHeight, mapDepth);\n\n    for (let rawBlock of rawBlocks) {\n        let block = _parseBlock(rawBlock, blockWidth, blockHeight, blockDepth);\n\n        let position = rawBlock.position;\n\n        // TODO check for out of bounds\n        layers[position.z][position.y][position.x] = block;\n    }\n\n    let worldMap = new WorldMap(layers, mapWidth, mapHeight, mapDepth, blockWidth, blockHeight, blockDepth);\n\n    if (rawMap.lights) {\n        for (let rawLight of rawMap.lights) {\n            worldMap.lights.push(parseLight(rawLight, blockWidth, blockHeight, blockDepth));\n        }\n    }\n\n    worldMap.name = rawMap.name;\n    worldMap.respawns = [];\n\n    console.log(rawMap);\n    for (let respawn of rawMap.respawns) {\n        worldMap.respawns.push(respawn);\n    }\n\n    return worldMap;\n};\n\nlet MapParser = {\n    parse: function (rawMap) {\n        return _parseRawMap(rawMap);\n    }\n};\n\nexport default MapParser;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/maps/MapParser.js\n **/","import Polygon from '../../engine/collision/Polygon';\nimport Vector from '../../engine/collision/Vector';\n\nclass Block {\n    constructor (position, width, height, depth, options = {}) {\n        this._position = position;\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.options = options;\n        this.type = options.type || 'wall';\n        this._walls = options.walls || {};\n        this.collidable = options.collidable || true;\n\n        this._computeBodies();\n    }\n\n    set walls (walls) {\n        this._walls = walls;\n        this._computeBodies();\n    }\n\n    get walls () {\n        return this._walls;\n    }\n\n    set position (position) {\n        this._position = position;\n        this._computeBodies();\n    }\n\n    get position () {\n        return this._position;\n    }\n\n    _computeBodies () {\n         // If fully closed block (nothing should be inside it)\n        if (this._walls.top && this._walls.west && this._walls.east && this._walls.south && this._walls.north) {\n            this.bodies = [\n                new Polygon(new Vector(this.x, this.y), [\n                    new Vector(0, 0),\n                    new Vector(this.width, 0),\n                    new Vector(this.width, this.height),\n                    new Vector(0, this.height)\n                ])\n            ];\n        }\n\n        let bodies = [];\n\n        if (this._walls.west) {\n            bodies.push(new Polygon(new Vector(this.x, this.y), [\n                new Vector(0, 0),\n                new Vector(this.width, 0),\n                new Vector(this.width, 2),\n                new Vector(0, 2)\n            ]));\n        }\n\n        if (this._walls.east) {\n            bodies.push(new Polygon(new Vector(this.x, this.y + this.height), [\n                new Vector(0, 0),\n                new Vector(this.width, 0),\n                new Vector(this.width, -2),\n                new Vector(0, -2)\n            ]));\n        }\n\n        if (this._walls.south) {\n            bodies.push(new Polygon(new Vector(this.x + this.width, this.y), [\n                new Vector(0, 0),\n                new Vector(0, this.height),\n                new Vector(-2, this.height),\n                new Vector(-2, 0)\n            ]));\n        }\n\n        if (this._walls.north) {\n            bodies.push(new Polygon(new Vector(this.x, this.y), [\n                new Vector(0, 0),\n                new Vector(0, this.height),\n                new Vector(2, this.height),\n                new Vector(2, 0)\n            ]));\n        }\n\n        this.bodies = bodies;\n    }\n\n    get x () {\n        return this._position.x;\n    }\n\n    get y () {\n        return this._position.y;\n    }\n\n    get z () {\n        return this._position.z;\n    }\n}\n\nexport default Block;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/maps/Block.js\n **/","class Light {\n    constructor (x, y, z, color) {\n        this.position = {\n            x: x,\n            y: y,\n            z: z\n        };\n        this.color = color;\n        this.sourcePosition = {\n            x: x,\n            y: y,\n            z: z\n        };\n\n        this.angle = Math.PI * 2;\n    }\n\n    get x () {\n        return this.position.x;\n    }\n\n    get y () {\n        return this.position.y;\n    }\n\n    get z () {\n        return this.position.z;\n    }\n}\n\nexport default Light;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/maps/Light.js\n **/","class WorldMap {\n    constructor (layers, width, height, depth, blockWidth, blockHeight, blockDepth) {\n        this.width = width;\n        this.height = height;\n        this.depth = depth;\n        this.blockWidth = blockWidth;\n        this.blockHeight = blockHeight;\n        this.blockDepth = blockDepth;\n\n        this.lights = [];\n        this.layers = layers;\n        this.name = null;\n    }\n\n    blocks (types) {\n        return this.blocksBetweenIndexes({\n            x: 0, y: 0, z: 0\n        }, {\n            x: this.width - 1,\n            y: this.height - 1,\n            z: this.depth - 1\n        }, types);\n    }\n\n    get totalWidth () {\n        return this.width * this.blockWidth;\n    }\n\n    get totalHeight () {\n        return this.height * this.blockHeight;\n    }\n\n    get totalDepth () {\n        return this.depth * this.blockDepth;\n    }\n\n    indexToPosition (index) {\n        return {\n            x: index.x * this.blockWidth,\n            y: index.y * this.blockHeight,\n            z: index.z * this.blockDepth\n        };\n    }\n\n    positionToIndex (position) {\n        let x = position.x;\n        let y = position.y;\n        let z = position.z;\n\n        let index = {};\n\n        index.x = Math.floor(x / this.blockWidth);\n        index.y = Math.floor(y / this.blockHeight);\n        index.z = Math.floor(z / this.blockDepth);\n\n        return index;\n    }\n\n    randomRespawnPosition () {\n        let respawn = this.respawns[Math.round(Math.random() * (this.respawns.length - 1))];\n        let position = this.indexToPosition(respawn.position);\n\n        return position;\n    }\n\n    blockAtIndex (index) {\n        if (index.z < 0 || index.z >= this.depth) {\n            return null;\n        }\n\n        if (index.y < 0 || index.y >= this.height) {\n            return null;\n        }\n\n        if (index.x < 0 || index.x >= this.width) {\n            return null;\n        }\n\n        return this.layers[index.z][index.y][index.x];\n    }\n\n    blockAtPosition (position) {\n        let indexes = this.positionToIndex(position);\n\n        return this.blockAtIndex(indexes);\n    }\n\n    blocksAtPositions (positions, types = []) {\n        let blocks = [];\n\n        for (let position of positions) {\n            let block = this.blockAtPosition(position);\n\n            if (block && types.indexOf(block.type) !== -1) {\n                blocks.push(block);\n            }\n        }\n\n        return blocks;\n    }\n\n    /**\n     * Get all blocks within two index positions in the map.\n     *\n     * @param {object} start - contains x, y, z index positions for start.\n     * @param {object} end - contains x, y, z index positions for end.\n     *\n     * @returns {array} All blocks within the box\n     */\n    blocksBetweenIndexes (start = { x: 0, y: 0, z: 0 }, end = { x: 0, y: 0, z: 0 }, types = []) {\n        let blocks = [];\n\n        let min = start;\n        let max = end;\n\n        for (let z = 0; z < this.layers.length; z++) {\n            if ((z >= min.z && z <= max.z)) {\n                for (let y = 0; y < this.layers[z].length; y++) {\n                    if ((y >= min.y && y <= max.y)) {\n                        for (let x = 0; x < this.layers[z][y].length; x++) {\n                            if ((x >= min.x && x <= max.x)) {\n                                let index = { x, y, z };\n\n                                let block = this.blockAtIndex(index);\n\n                                if (block && types.indexOf(block.type) !== -1) {\n                                    blocks.push(block);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return blocks;\n    }\n\n    blocksBetweenPositions (start = { x: 0, y: 0, z: 0 }, end = { x: 0, y: 0, z: 0 }, types) {\n        return this.blocksBetweenIndexes(this.positionToIndex(start), this.positionToIndex(end), types);\n    }\n\n    toString () {\n        let finalString = '';\n\n        for (let layer of this.layers) {\n            let layerStrings = [];\n\n            for (let layerRow of layer) {\n                let blocks = layerRow.map(v => v ? v.id : 0);\n\n                layerStrings.push(blocks.join(', '));\n            }\n\n            finalString = finalString.concat(layerStrings.join('\\n'));\n            finalString = finalString.concat('\\n---------------\\n');\n        }\n\n        return finalString;\n    }\n}\n\nexport default WorldMap;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/maps/WorldMap.js\n **/","import CollisionUtils from './CollisionUtils';\n\nclass CollisionSystem {\n    constructor (state) {\n        this.state = state;\n        this.entities = state.soldiers;\n        this.map = this.state.map;\n    }\n\n    update (delta) {\n        for (let entity of this.entities) {\n            CollisionUtils.wallCollision(this.map, entity, (response) => {\n                entity.position.x -= response.overlapV.x;\n                entity.position.y -= response.overlapV.y;\n            });\n\n            CollisionUtils.floorCollision(this.map, entity, delta, (block) => {\n                if (block.type === 'water') {\n                    entity.fall();\n                    entity.kill();\n                } else {\n                    entity.position.z = block.position.z + block.depth;\n                    entity.stopFalling();\n                }\n            });\n        }\n    }\n}\n\nexport default CollisionSystem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/CollisionSystem.js\n **/","import SAT from '../engine/collision/SAT';\nimport Response from '../engine/collision/Response';\n\nlet rayPositions = function (entity, rayDistance) {\n    let x = entity.position.x;\n    let y = entity.position.y;\n    let angle = entity.angle;\n\n    let reverse = entity.reverse ? -1 : 1;\n\n    let start = {};\n    let end = {};\n\n    if (Math.abs(entity.velocity.x) > 0) {\n        x -= rayDistance * Math.cos(angle) * reverse;\n    } else {\n        x -= rayDistance * reverse;\n    }\n\n    if (entity.velocity.x < 0) {\n        start.x = x;\n        end.x = entity.position.x;\n    } else {\n        start.x = entity.position.x;\n        end.x = x;\n    }\n\n    if (Math.abs(entity.velocity.y) > 0) {\n        y -= rayDistance * Math.sin(angle) * reverse;\n    } else {\n        y -= rayDistance * reverse;\n    }\n\n    if (entity.velocity.y < 0) {\n        start.y = y;\n        end.y = entity.position.y;\n    } else {\n        start.y = entity.position.y;\n        end.y = y;\n    }\n\n    start.z = entity.position.z;\n    end.z = entity.position.z;\n\n    return { min: start, max: end };\n};\n\nlet CollisionUtils = {\n    wallCollision (map, entity, onCollision) {\n        let rayDistance = (map.blockWidth + map.blockHeight) / 2;\n        let ray = rayPositions(entity, rayDistance);\n\n        if (!(ray.min.x === ray.max.x && ray.min.y === ray.max.y)) {\n            let blocks = map.blocksBetweenPositions(ray.min, ray.max, ['wall']);\n\n            for (let block of blocks) {\n                if (block.collidable) {\n                    let polygons = block.bodies;\n\n                    for (let polygon of polygons) {\n                        let response = new Response();\n\n                        if (SAT.testPolygonPolygon(entity.body, polygon, response)) {\n                            onCollision(response);\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    floorCollision (map, entity, delta, onCollision = () => {}) {\n        let nextEntityPosition = {\n            x: entity.position.x + (entity.velocity.x * delta),\n            y: entity.position.y + (entity.velocity.y * delta),\n            z: entity.position.z + (entity.velocity.z * delta)\n        };\n\n        let floorBlockIndex = map.positionToIndex(entity.position);\n\n        floorBlockIndex.z -= 1;\n\n        let block = map.blockAtIndex(floorBlockIndex);\n\n        if (block && block.collidable && block.walls.top) {\n            if (nextEntityPosition.z <= block.position.z + block.depth) {\n                onCollision(block);\n            }\n        } else {\n            entity.fall();\n        }\n    }\n};\n\nexport default CollisionUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/CollisionUtils.js\n **/","// Version 0.5.0 - Copyright 2012 - 2015 -  Jim Riecken <jimr@jimr.ca>\n//\n// Released under the MIT License - https://github.com/jriecken/sat-js\n//\n// A simple library for determining intersections of circles and\n// polygons using the Separating Axis Theorem.\n/** @preserve SAT.js - Version 0.5.0 - Copyright 2012 - 2015 - Jim Riecken <jimr@jimr.ca> - released under the MIT License. https://github.com/jriecken/sat-js */\n\nimport Vector from './Vector';\nimport Box from './Box';\nimport Response from './Response';\n\n// ## Object Pools\n\n// A pool of `Vector` objects that are used in calculations to avoid\n// allocating memory.\n/**\n * @type {Array.<Vector>}\n */\nlet T_VECTORS = [];\n\nfor (let i = 0; i < 10; i++) { T_VECTORS.push(new Vector()); }\n\n// A pool of arrays of numbers used in calculations to avoid allocating\n// memory.\n/**\n * @type {Array.<Array.<number>>}\n */\nlet T_ARRAYS = [];\n\nfor (let i = 0; i < 5; i++) { T_ARRAYS.push([]); }\n\n// Temporary response used for polygon hit detection.\n/**\n * @type {Response}\n */\nlet T_RESPONSE = new Response();\n\n// Unit square polygon used for polygon hit detection.\n/**\n * @type {Polygon}\n */\nlet UNIT_SQUARE = new Box(new Vector(), 1, 1).toPolygon();\n\n// ## Helper Functions\n\n/**\n * Flattens the specified array of vertices onto a unit vector axis,\n * resulting in a one dimensional range of the minimum and\n * maximum value on that axis.\n * @param {Array.<Vector>} vertices The vertices to flatten.\n * @param {Vector} normal The unit vector axis to flatten on.\n * @param {Array.<number>} result An array.  After calling this function,\n *   result[0] will be the minimum value,\n *   result[1] will be the maximum value.\n *\n * @returns {void}\n */\nlet _flattenVerticesOn = function (vertices, normal, result) {\n    let min = Number.MAX_VALUE;\n    let max = -Number.MAX_VALUE;\n    let len = vertices.length;\n\n    for (let i = 0; i < len; i++) {\n        // The magnitude of the projection of the point onto the normal\n        let dot = vertices[i].dot(normal);\n\n        if (dot < min) {\n            min = dot;\n        }\n        if (dot > max) {\n            max = dot;\n        }\n    }\n\n    result[0] = min; result[1] = max;\n};\n\n/**\n * Check whether two convex polygons are separated by the specified\n * axis (must be a unit vector).\n *\n * @param {Vector} aPos The position of the first polygon.\n * @param {Vector} bPos The position of the second polygon.\n * @param {Array.<Vector>} aPoints The vertices in the first polygon.\n * @param {Array.<Vector>} bPoints The vertices in the second polygon.\n * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n *   will be projected onto this axis.\n * @param {Response=} response A Response object (optional) which will be populated\n *   if the axis is not a separating axis.\n * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n *   and a response is passed in, information about how much overlap and\n *   the direction of the overlap will be populated.\n */\nlet _isSeparatingAxis = function (aPos, bPos, aPoints, bPoints, axis, response) {\n    let rangeA = T_ARRAYS.pop();\n    let rangeB = T_ARRAYS.pop();\n\n    // The magnitude of the offset between the two polygons\n    let offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n    let projectedOffset = offsetV.dot(axis);\n\n    // Project the polygons onto the axis.\n    _flattenVerticesOn(aPoints, axis, rangeA);\n    _flattenVerticesOn(bPoints, axis, rangeB);\n\n    // Move B's range to its position relative to A.\n    rangeB[0] += projectedOffset;\n    rangeB[1] += projectedOffset;\n\n    // Check if there is a gap. If there is, this is a separating axis and we can stop\n    if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n        T_VECTORS.push(offsetV);\n        T_ARRAYS.push(rangeA);\n        T_ARRAYS.push(rangeB);\n\n        return true;\n    }\n\n    // This is not a separating axis. If we're calculating a response, calculate the overlap.\n    if (response) {\n        let overlap = 0;\n\n        // A starts further left than B\n        if (rangeA[0] < rangeB[0]) {\n            response.aInB = false;\n\n            // A ends before B does. We have to pull A out of B\n            if (rangeA[1] < rangeB[1]) {\n                overlap = rangeA[1] - rangeB[0];\n                response.bInA = false;\n            } else {\n                // B is fully inside A.  Pick the shortest way out.\n                let option1 = rangeA[1] - rangeB[0];\n                let option2 = rangeB[1] - rangeA[0];\n\n                overlap = option1 < option2 ? option1 : -option2;\n            }\n        } else {\n            // B starts further left than A\n            response.bInA = false;\n\n            // B ends before A ends. We have to push A out of B\n            if (rangeA[1] > rangeB[1]) {\n                overlap = rangeA[0] - rangeB[1];\n                response.aInB = false;\n\n                // A is fully inside B.  Pick the shortest way out.\n            } else {\n                let option1 = rangeA[1] - rangeB[0];\n                let option2 = rangeB[1] - rangeA[0];\n\n                overlap = option1 < option2 ? option1 : -option2;\n            }\n        }\n\n        // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n        let absOverlap = Math.abs(overlap);\n\n        if (absOverlap < response.overlap) {\n            response.overlap = absOverlap;\n            response.overlapN.copy(axis);\n            if (overlap < 0) {\n                response.overlapN.negate();\n            }\n        }\n    }\n\n    T_VECTORS.push(offsetV);\n    T_ARRAYS.push(rangeA);\n    T_ARRAYS.push(rangeB);\n\n    return false;\n};\n\n// Calculates which Voronoi region a point is on a line segment.\n// It is assumed that both the line and the point are relative to `(0,0)`\n//\n//            |       (0)      |\n//     (-1)  [S]--------------[E]  (1)\n//            |       (0)      |\n/**\n * @param {Vector} line The line segment.\n * @param {Vector} point The point.\n * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\n *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\n *          RIGHT_VORONOI_REGION (1) if it is the right region.\n */\nlet _vornoiRegion = function (line, point) {\n    let len2 = line.len2();\n    let dp = point.dot(line);\n\n    // If the point is beyond the start of the line, it is in the\n    // left voronoi region.\n    if (dp < 0) {\n        return LEFT_VORONOI_REGION;\n    } else if (dp > len2) {\n        // If the point is beyond the end of the line, it is in the\n        // right voronoi region.\n\n        return RIGHT_VORONOI_REGION;\n    } else {\n        // Otherwise, it's in the middle one.\n        return MIDDLE_VORONOI_REGION;\n    }\n};\n\n// Constants for Voronoi regions\n/**\n * @const\n */\nlet LEFT_VORONOI_REGION = -1;\n\n/**\n * @const\n */\nlet MIDDLE_VORONOI_REGION = 0;\n\n/**\n * @const\n */\nlet RIGHT_VORONOI_REGION = 1;\n\n// ## Collision Tests\n\n// Check if a point is inside a circle.\n/**\n * @param {Vector} p The point to test.\n * @param {Circle} c The circle to test.\n * @return {boolean} true if the point is inside the circle, false if it is not.\n */\nlet _pointInCircle = function (p, c) {\n    let differenceV = T_VECTORS.pop().copy(p).sub(c.position);\n    let radiusSq = c.radius * c.radius;\n    let distanceSq = differenceV.len2();\n\n    T_VECTORS.push(differenceV);\n\n    // If the distance between is smaller than the radius then the point is inside the circle.\n    return distanceSq <= radiusSq;\n};\n\n// Check if a point is inside a convex polygon.\n/**\n * @param {Vector} p The point to test.\n * @param {Polygon} poly The polygon to test.\n * @return {boolean} true if the point is inside the polygon, false if it is not.\n */\nlet _pointInPolygon = function (p, poly) {\n    UNIT_SQUARE.position.copy(p);\n    T_RESPONSE.clear();\n\n    let result = _testPolygonPolygon(UNIT_SQUARE, poly, T_RESPONSE);\n\n    if (result) {\n        result = T_RESPONSE.aInB;\n    }\n    return result;\n};\n\n// Check if two circles collide.\n/**\n * @param {Circle} a The first circle.\n * @param {Circle} b The second circle.\n * @param {Response=} response Response object (optional) that will be populated if\n *   the circles intersect.\n * @return {boolean} true if the circles intersect, false if they don't.\n */\nlet _testCircleCircle = function (a, b, response) {\n    // Check if the distance between the centers of the two\n    // circles is greater than their combined radius.\n    let differenceV = T_VECTORS.pop().copy(b.position).sub(a.position);\n    let totalRadius = a.radius + b.radius;\n    let totalRadiusSq = totalRadius * totalRadius;\n    let distanceSq = differenceV.len2();\n\n    // If the distance is bigger than the combined radius, they don't intersect.\n    if (distanceSq > totalRadiusSq) {\n        T_VECTORS.push(differenceV);\n\n        return false;\n    }\n\n    // They intersect.  If we're calculating a response, calculate the overlap.\n    if (response) {\n        let dist = Math.sqrt(distanceSq);\n\n        response.a = a;\n        response.b = b;\n        response.overlap = totalRadius - dist;\n        response.overlapN.copy(differenceV.normalize());\n        response.overlapV.copy(differenceV).scale(response.overlap);\n        response.aInB = a.radius <= b.radius && dist <= b.radius - a.radius;\n        response.bInA = b.radius <= a.radius && dist <= a.radius - b.radius;\n    }\n\n    T_VECTORS.push(differenceV);\n\n    return true;\n};\n\n// Check if a polygon and a circle collide.\n/**\n * @param {Polygon} polygon The polygon.\n * @param {Circle} circle The circle.\n * @param {Response=} response Response object (optional) that will be populated if\n *   they interset.\n * @return {boolean} true if they intersect, false if they don't.\n */\nlet _testPolygonCircle = function (polygon, circle, response) {\n    // Get the position of the circle relative to the polygon.\n    let circlePos = T_VECTORS.pop().copy(circle.position).sub(polygon.position);\n    let radius = circle.radius;\n    let radius2 = radius * radius;\n    let points = polygon.computedVertices;\n    let len = points.length;\n    let edge = T_VECTORS.pop();\n    let point = T_VECTORS.pop();\n\n    // For each edge in the polygon:\n    for (let i = 0; i < len; i++) {\n        let next = i === len - 1 ? 0 : i + 1;\n        let prev = i === 0 ? len - 1 : i - 1;\n        let overlap = 0;\n        let overlapN = null;\n\n        // Get the edge.\n        edge.copy(polygon.edges[i]);\n\n        // Calculate the center of the circle relative to the starting point of the edge.\n        point.copy(circlePos).sub(points[i]);\n\n        // If the distance between the center of the circle and the point\n        // is bigger than the radius, the polygon is definitely not fully in\n        // the circle.\n        if (response && point.len2() > radius2) {\n            response.aInB = false;\n        }\n\n        // Calculate which Voronoi region the center of the circle is in.\n        let region = _vornoiRegion(edge, point);\n\n        // If it's the left region:\n        if (region === LEFT_VORONOI_REGION) {\n            // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n            edge.copy(polygon.edges[prev]);\n\n            // Calculate the center of the circle relative the starting point of the previous edge\n            let point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n\n            region = _vornoiRegion(edge, point2);\n\n            if (region === RIGHT_VORONOI_REGION) {\n                // It's in the region we want.  Check if the circle intersects the point.\n                let dist = point.len();\n\n                if (dist > radius) {\n                    // No intersection\n                    T_VECTORS.push(circlePos);\n                    T_VECTORS.push(edge);\n                    T_VECTORS.push(point);\n                    T_VECTORS.push(point2);\n\n                    return false;\n                } else if (response) {\n                    // It intersects, calculate the overlap.\n                    response.bInA = false;\n                    overlapN = point.normalize();\n                    overlap = radius - dist;\n                }\n            }\n\n            T_VECTORS.push(point2);\n\n        // If it's the right region:\n        } else if (region === RIGHT_VORONOI_REGION) {\n            // We need to make sure we're in the left region on the next edge\n            edge.copy(polygon.edges[next]);\n\n            // Calculate the center of the circle relative to the starting point of the next edge.\n            point.copy(circlePos).sub(points[next]);\n            region = _vornoiRegion(edge, point);\n            if (region === LEFT_VORONOI_REGION) {\n                // It's in the region we want.  Check if the circle intersects the point.\n                let dist = point.len();\n\n                if (dist > radius) {\n                    // No intersection\n                    T_VECTORS.push(circlePos);\n                    T_VECTORS.push(edge);\n                    T_VECTORS.push(point);\n\n                    return false;\n                } else if (response) {\n                    // It intersects, calculate the overlap.\n                    response.bInA = false;\n                    overlapN = point.normalize();\n                    overlap = radius - dist;\n                }\n            }\n\n        // Otherwise, it's the middle region:\n        } else {\n            // Need to check if the circle is intersecting the edge,\n            // Change the edge into its \"edge normal\".\n            let normal = edge.perp().normalize();\n\n            // Find the perpendicular distance between the center of the\n            // circle and the edge.\n            let dist = point.dot(normal);\n            let distAbs = Math.abs(dist);\n\n            // If the circle is on the outside of the edge, there is no intersection.\n            if (dist > 0 && distAbs > radius) {\n                // No intersection\n                T_VECTORS.push(circlePos);\n                T_VECTORS.push(normal);\n                T_VECTORS.push(point);\n\n                return false;\n            } else if (response) {\n                // It intersects, calculate the overlap.\n                overlapN = normal;\n                overlap = radius - dist;\n\n                // If the center of the circle is on the outside of the edge, or part of the\n                // circle is on the outside, the circle is not fully inside the polygon.\n                if (dist >= 0 || overlap < 2 * radius) {\n                    response.bInA = false;\n                }\n            }\n        }\n\n        // If this is the smallest overlap we've seen, keep it.\n        // (overlapN may be null if the circle was in the wrong Voronoi region).\n        if (overlapN && response && Math.abs(overlap) < Math.abs(response.overlap)) {\n            response.overlap = overlap;\n            response.overlapN.copy(overlapN);\n        }\n    }\n\n    // Calculate the final overlap vector - based on the smallest overlap.\n    if (response) {\n        response.a = polygon;\n        response.b = circle;\n        response.overlapV.copy(response.overlapN).scale(response.overlap);\n    }\n\n    T_VECTORS.push(circlePos);\n    T_VECTORS.push(edge);\n    T_VECTORS.push(point);\n\n    return true;\n};\n\n// Check if a circle and a polygon collide.\n//\n// **NOTE:** This is slightly less efficient than polygonCircle as it just\n// runs polygonCircle and reverses everything at the end.\n/**\n * @param {Circle} circle The circle.\n * @param {Polygon} polygon The polygon.\n * @param {Response=} response Response object (optional) that will be populated if\n *   they interset.\n * @return {boolean} true if they intersect, false if they don't.\n */\nlet _testCirclePolygon = function (circle, polygon, response) {\n    // Test the polygon against the circle.\n    let result = testPolygonCircle(polygon, circle, response);\n\n    if (result && response) {\n        // Swap A and B in the response.\n        let a = response.a;\n        let aInB = response.aInB;\n\n        response.overlapN.negate();\n        response.overlapV.negate();\n        response.a = response.b;\n        response.b = a;\n        response.aInB = response.bInA;\n        response.bInA = aInB;\n    }\n\n    return result;\n};\n\n/**\n * Checks whether polygons collide.\n * @param {Polygon} a The first polygon.\n * @param {Polygon} b The second polygon.\n * @param {Response=} response Response object (optional) that will be populated if\n *   they interset.\n * @return {boolean} true if they intersect, false if they don't.\n */\nlet _testPolygonPolygon = function (a, b, response) {\n    let aPoints = a.computedVertices;\n    let aLen = aPoints.length;\n    let bPoints = b.computedVertices;\n    let bLen = bPoints.length;\n\n    // If any of the edge normals of A is a separating axis, no intersection.\n    for (let i = 0; i < aLen; i++) {\n        if (_isSeparatingAxis(a.position, b.position, aPoints, bPoints, a.normals[i], response)) {\n            return false;\n        }\n    }\n\n    // If any of the edge normals of B is a separating axis, no intersection.\n    for (let i = 0;i < bLen; i++) {\n        if (_isSeparatingAxis(a.position, b.position, aPoints, bPoints, b.normals[i], response)) {\n            return false;\n        }\n    }\n\n    // Since none of the edge normals of A or B are a separating axis, there is an intersection\n    // and we've already calculated the smallest overlap (in _isSeparatingAxis).  Calculate the\n    // final overlap vector.\n    if (response) {\n        response.a = a;\n        response.b = b;\n        response.overlapV.copy(response.overlapN).scale(response.overlap);\n    }\n\n    return true;\n};\n\nlet SAT = {\n    testPolygonPolygon: _testPolygonPolygon,\n    testCirclePolygon: _testCirclePolygon,\n    testPolygonCircle: _testPolygonCircle,\n    testCircleCircle: _testCircleCircle,\n    pointInPolygon: _pointInPolygon,\n    pointInCircle: _pointInCircle\n};\n\nexport default SAT;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/collision/SAT.js\n **/","import Vector from './Vector';\nimport Polygon from './Polygon';\n\n// ## Box\n//\n// Represents an axis-aligned box, with a width and height.\n// Create a new box, with the specified position, width, and height. If no position\n// is given, the position will be `(0,0)`. If no width or height are given, they will\n// be set to `0`.\n/**\n * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\n * @param {?number=} w The width of the box.\n * @param {?number=} h The height of the box.\n * @constructor\n */\nclass Box {\n    constructor (position = new Vector(), width = 0, height = 0) {\n        this.position = position;\n        this.width = width;\n        this.height = height;\n    }\n\n    /**\n     * Returns a polygon whose edges are the same as this box.\n     * @return {Polygon} A new Polygon that represents this box.\n     */\n    toPolygon () {\n        let pos = this.position;\n        let w = this.width;\n        let h = this.height;\n\n        return new Polygon(new Vector(pos.x, pos.y), [\n            new Vector(), new Vector(w, 0),\n            new Vector(w, h), new Vector(0, h)\n        ]);\n    }\n}\n\nexport default Box;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/collision/Box.js\n **/","import Vector from './Vector';\n\n// ## Response\n//\n// An object representing the result of an intersection. Contains:\n//  - The two objects participating in the intersection\n//  - The vector representing the minimum change necessary to extract the first object\n//    from the second one (as well as a unit vector in that direction and the magnitude\n//    of the overlap)\n//  - Whether the first object is entirely inside the second, and vice versa.\n/**\n * @constructor\n */\nclass Response {\n    constructor () {\n        this.a = null;\n        this.b = null;\n        this.overlapN = new Vector();\n        this.overlapV = new Vector();\n\n        this.clear();\n    }\n\n    /**\n     * Set some values of the response back to their defaults.  Call this between tests if\n     * you are going to reuse a single Response object for multiple intersection tests (recommented\n     * as it will avoid allcating extra memory)\n     *\n     * @return {Response} This for chaining\n     */\n    clear () {\n        this.aInB = true;\n        this.bInA = true;\n        this.overlap = Number.MAX_VALUE;\n\n        return this;\n    };\n}\n\nexport default Response;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/engine/collision/Response.js\n **/","import ObjectPool from '../engine/ObjectPool';\nimport Bullet from './entities/Bullet';\nimport SAT from '../engine/collision/SAT';\nimport CollisionUtils from './CollisionUtils';\n\nclass BulletSystem {\n    constructor (state, options = {}) {\n        this.state = state;\n        this.soldiers = this.state.soldiers;\n        this.map = this.state.map;\n\n        this.bulletPool = new ObjectPool(() => {\n            let bullet = new Bullet(0, 0, 0, 4, 10);\n\n            return bullet;\n        }, 10, 10, options.poolLimit || 200);\n\n        // Bullets that died last turn\n        this.deadBullets = new Set();\n\n        // Bullets currently flying around\n        this.activeBullets = new Set();\n    }\n\n    get poolSize () {\n        return this.bulletPool.size;\n    }\n\n    _fireBullet (firedBy) {\n        let bullet = this.bulletPool.get();\n\n        // If the pool is full, reused the first item.\n        if (!bullet) {\n            let firstBullet = this.activeBullets.values().next().value;\n\n            this.bulletPool.free(firstBullet);\n            bullet = this.bulletPool.get();\n        }\n\n        bullet.firedBy = firedBy;\n        bullet.firedByWeapon = firedBy.currentWeapon;\n        bullet.respawn(firedBy.position);\n        bullet.angle = firedBy.angle;\n        this.activeBullets.add(bullet);\n\n        return bullet;\n    }\n\n    killBullet (bullet) {\n        bullet.kill();\n        this.bulletPool.free(bullet());\n    }\n\n    update (delta) {\n        for (let soldier of this.soldiers) {\n            if (soldier.actions.firedBullet) {\n                this._fireBullet(soldier);\n            }\n        }\n\n        for (let bullet of this.activeBullets) {\n            bullet.update(delta);\n            CollisionUtils.wallCollision(this.map, bullet, () => bullet.kill());\n\n            if (bullet.dead) {\n                this.deadBullets.add(bullet);\n                this.activeBullets.delete(bullet);\n                this.bulletPool.free(bullet);\n            } else {\n                for (let soldier of this.soldiers) {\n                    if (!soldier.dead) {\n                        // Can't kill itself\n                        if (bullet.firedBy !== soldier) {\n                            // Check if on same level\n                            if ((bullet.position.z >= soldier.position.z) && (bullet.position.z < soldier.position.z + 50)) {\n                                if (SAT.pointInPolygon(bullet.point, soldier.body)) {\n                                    soldier.hitByBullet(bullet);\n                                    bullet.kill();\n                                    this.bulletPool.free(bullet);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default BulletSystem;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/BulletSystem.js\n **/","import Entity from './Entity';\n\nclass Bullet extends Entity {\n    constructor (x, y, z, width, height) {\n        super(x, y, z, width, height);\n\n        this.dead = true;\n        this.firedBy = null;\n        this.firedByWeapon = null;\n        this.speed = 0.3;\n\n        this.maxDistance = 500;\n        this.traveledDistance = 0;\n\n        this.options.isBullet = true;\n    }\n\n    get damage () {\n        if (this.firedByWeapon) {\n            return this.firedByWeapon.damage;\n        }\n\n        return 0;\n    }\n\n    update (delta) {\n        super.update(delta);\n\n        this.traveledDistance += this.speed * delta;\n\n        if (this.traveledDistance > this.maxDistance) {\n            this.dead = true;\n            this.traveledDistance = 0;\n        } else {\n            this.moveUp();\n        }\n    }\n}\n\nexport default Bullet;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/core/entities/Bullet.js\n **/","import State from '../State';\n\nclass MenuState extends State {\n\n    constructor () {\n        super('menu');\n\n        this.menus = new Map();\n        this._currentMenu = null;\n        this.currentMenuName = null;\n        this.options = new Map([\n            ['name', 'Unknown Soldier']\n        ]);\n        this.gamePlaying = false;\n        this.currentOptionsEdit = null;\n    }\n\n    addMenu (name, menu) {\n        this.menus.set(name, menu);\n    }\n\n    changeOption (optionName, value) {\n        this.options.set(optionName, value);\n    }\n\n    set currentMenu (name) {\n        this._currentMenu = this.menus.get(name);\n        this.currentMenuName = name;\n    }\n\n    get currentMenu () {\n        return this._currentMenu;\n    }\n\n    init () {\n        super.init();\n    }\n\n    update (delta) {\n        super.updateInputs(delta);\n\n        super.updateAudio(delta);\n    }\n}\n\nexport default MenuState;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/menu/MenuState.js\n **/"],"sourceRoot":""}